{"/home/travis/build/npmtest/node-npmtest-phaser-tiled/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_phaser_tiled */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/lib.npmtest_phaser_tiled.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/lib.npmtest_phaser_tiled.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_phaser_tiled */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_phaser_tiled = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_phaser_tiled = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-phaser-tiled && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_phaser_tiled */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_phaser_tiled","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_phaser_tiled.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_phaser_tiled.rollup.js'] =","            local.assetsDict['/assets.npmtest_phaser_tiled.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_phaser_tiled.__dirname + '/lib.npmtest_phaser_tiled.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}}},"branchMap":{},"code":["module.exports = {","    utils: require('./utils')","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},"b":{"1":[1,0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":55}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":23},"end":{"line":20,"column":38}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":44}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":29},"end":{"line":35,"column":67}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":21},"end":{"line":61,"column":35}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":29},"end":{"line":97,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":89}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}},"6":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":26}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"13":{"start":{"line":20,"column":0},"end":{"line":29,"column":2}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":25}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}},"16":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"17":{"start":{"line":25,"column":8},"end":{"line":25,"column":35}},"18":{"start":{"line":28,"column":4},"end":{"line":28,"column":15}},"19":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"20":{"start":{"line":32,"column":4},"end":{"line":32,"column":55}},"21":{"start":{"line":35,"column":0},"end":{"line":49,"column":2}},"22":{"start":{"line":37,"column":4},"end":{"line":37,"column":29}},"23":{"start":{"line":38,"column":4},"end":{"line":38,"column":40}},"24":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"25":{"start":{"line":42,"column":8},"end":{"line":42,"column":36}},"26":{"start":{"line":44,"column":9},"end":{"line":46,"column":5}},"27":{"start":{"line":45,"column":8},"end":{"line":45,"column":37}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":15}},"29":{"start":{"line":61,"column":0},"end":{"line":86,"column":2}},"30":{"start":{"line":62,"column":4},"end":{"line":62,"column":14}},"31":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"32":{"start":{"line":66,"column":8},"end":{"line":69,"column":10}},"33":{"start":{"line":73,"column":4},"end":{"line":83,"column":5}},"34":{"start":{"line":74,"column":8},"end":{"line":74,"column":55}},"35":{"start":{"line":77,"column":9},"end":{"line":83,"column":5}},"36":{"start":{"line":78,"column":8},"end":{"line":78,"column":65}},"37":{"start":{"line":82,"column":8},"end":{"line":82,"column":39}},"38":{"start":{"line":85,"column":4},"end":{"line":85,"column":17}},"39":{"start":{"line":97,"column":0},"end":{"line":143,"column":2}},"40":{"start":{"line":98,"column":4},"end":{"line":98,"column":20}},"41":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"42":{"start":{"line":101,"column":8},"end":{"line":101,"column":19}},"43":{"start":{"line":104,"column":4},"end":{"line":129,"column":5}},"44":{"start":{"line":105,"column":8},"end":{"line":105,"column":23}},"45":{"start":{"line":106,"column":8},"end":{"line":106,"column":34}},"46":{"start":{"line":109,"column":8},"end":{"line":128,"column":9}},"47":{"start":{"line":110,"column":12},"end":{"line":110,"column":23}},"48":{"start":{"line":113,"column":13},"end":{"line":128,"column":9}},"49":{"start":{"line":114,"column":12},"end":{"line":114,"column":26}},"50":{"start":{"line":117,"column":13},"end":{"line":128,"column":9}},"51":{"start":{"line":118,"column":12},"end":{"line":118,"column":27}},"52":{"start":{"line":122,"column":12},"end":{"line":127,"column":13}},"53":{"start":{"line":123,"column":16},"end":{"line":123,"column":34}},"54":{"start":{"line":124,"column":16},"end":{"line":124,"column":27}},"55":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"56":{"start":{"line":132,"column":8},"end":{"line":132,"column":54}},"57":{"start":{"line":135,"column":4},"end":{"line":138,"column":5}},"58":{"start":{"line":136,"column":8},"end":{"line":136,"column":28}},"59":{"start":{"line":137,"column":8},"end":{"line":137,"column":31}},"60":{"start":{"line":140,"column":4},"end":{"line":140,"column":29}},"61":{"start":{"line":142,"column":4},"end":{"line":142,"column":15}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":17},"end":{"line":4,"column":46}},{"start":{"line":4,"column":50},"end":{"line":4,"column":61}},{"start":{"line":4,"column":66},"end":{"line":4,"column":88}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":38},"end":{"line":32,"column":48}},{"start":{"line":32,"column":51},"end":{"line":32,"column":53}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":9},"end":{"line":44,"column":9}},{"start":{"line":44,"column":9},"end":{"line":44,"column":9}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":27}},{"start":{"line":65,"column":31},"end":{"line":65,"column":46}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"9":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":9},"end":{"line":77,"column":9}},{"start":{"line":77,"column":9},"end":{"line":77,"column":9}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":13}},{"start":{"line":98,"column":17},"end":{"line":98,"column":19}}]},"11":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"12":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":12}},{"start":{"line":100,"column":16},"end":{"line":100,"column":33}}]},"13":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"14":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":19}},{"start":{"line":109,"column":23},"end":{"line":109,"column":24}}]},"15":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":13},"end":{"line":113,"column":13}},{"start":{"line":113,"column":13},"end":{"line":113,"column":13}}]},"16":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":13},"end":{"line":117,"column":13}},{"start":{"line":117,"column":13},"end":{"line":117,"column":13}}]},"17":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"18":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"19":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":29}},{"start":{"line":135,"column":33},"end":{"line":135,"column":43}}]}},"code":["var zlib    = require('zlibjs');","var Buffer  = require('buffer').Buffer;","","var decodeB64 = (typeof window !== 'undefined' && window.atob) || require('Base64').atob;","","var utils = module.exports = {};","","utils.destroyTexture = function (texture, callDestroy) {","    if (callDestroy !== false) {","        texture.destroy();","    }","","    texture.baseTexture = null;","    texture.frame = null;","    texture.trim = null;","    texture.crop = null;","    texture._uvs = null;","};","","utils.stringToBuffer = function (str) {","    var len = str.length;","    var buf = new Buffer(len);","","    for (var i = 0; i < len; i++) {","        buf[i] = str.charCodeAt(i);","    }","","    return buf;","};","","utils.cacheKey = function (key, type, name) {","    return key + '_' + type + (name ? '_' + name : '');","};","","utils.decompressBase64Data = function (raw, encoding, compression) {","    // TODO: This assumes base64 encoding, need to check encoding param","    var str = decodeB64(raw);","    var buf = utils.stringToBuffer(str);","","    // decompress","    if (compression === 'gzip') {","        return zlib.gunzipSync(buf);","    }","    else if (compression === 'zlib') {","        return zlib.inflateSync(buf);","    }","","    return buf;","};","","/**"," * Parses an array of numbers that represent a hitArea into the actual shape."," *"," * For example: `[1, 1, 15]` is a Circle (`[x, y, radius]`); `[1, 1, 15, 15]` is a Rectangle"," * (`[x, y, width, height]`); and any length >= 5 is a polygon in the form `[x1, y1, x2, y2, ..., xN, yN]`."," *"," * @method parseHitArea"," * @param value {Array<Number>} The array to parse"," * @return {Circle|Rectangle|Polygon} The parsed out shape"," */","utils.parseHitArea = function (hv) {","    var shape;","","    // odd number of values","    if (hv.length % 2 !== 0 && hv.length !== 3) {","        throw new RangeError(","            'Strange number of values for hitArea! Should be a flat array of values, like: ' +","            '[cx,cy,di] for a circle, [x,y,w,h] for a rectangle, or [x,y,x,y,...] for other polygons.'","        );","    }","","    // a circle x,y,r","    if (hv.length === 3) {","        shape = new Phaser.Circle(hv[0], hv[1], hv[2]);","    }","    // a rectangle x,y,w,h","    else if (hv.length === 4) {","        shape = new Phaser.Rectangle(hv[0], hv[1], hv[2], hv[3]);","    }","    // generic polygon","    else {","        shape = new Phaser.Polygon(hv);","    }","","    return shape;","};","","/**"," * Parses an object of string properties into potential javascript types. First it attempts to"," * convert to a number, if that fails it checks for the string 'true' or 'false' and changes it"," * to the actual Boolean value, then it attempts to parse a string as JSON."," *"," * @method parseTiledProperties"," * @param value {Array<Number>} The array to parse"," * @return {Circle|Rectangle|Polygon} The parsed out shape"," */","utils.parseTiledProperties = function (obj) {","    obj = obj || {};","","    if (!obj || obj.__tiledparsed) {","        return obj;","    }","","    for (var k in obj) {","        var v = obj[k];","        var n = parseFloat(v, 10);","","        // try to massage numbers","        if (n === 0 || n) {","            obj[k] = n;","        }","        // true values","        else if (v === 'true') {","            obj[k] = true;","        }","        // false values","        else if (v === 'false') {","            obj[k] = false;","        }","        // anything else is either a string or json","        else {","            try {","                v = JSON.parse(v);","                obj[k] = v;","            } catch (e) {","                // ignore error","            }","        }","    }","","    if (obj.hitArea) {","        obj.hitArea = utils.parseHitArea(obj.hitArea);","    }","","    if (obj.body === 'static' || obj.sensor) {","        obj.mass = Infinity;","        obj.inertia = Infinity;","    }","","    obj.__tiledparsed = true;","","    return obj;","};",""],"l":{"1":1,"2":1,"4":1,"6":1,"8":1,"9":0,"10":0,"13":0,"14":0,"15":0,"16":0,"17":0,"20":1,"21":0,"22":0,"24":0,"25":0,"28":0,"31":1,"32":0,"35":1,"37":0,"38":0,"41":0,"42":0,"44":0,"45":0,"48":0,"61":1,"62":0,"65":0,"66":0,"73":0,"74":0,"77":0,"78":0,"82":0,"85":0,"97":1,"98":0,"100":0,"101":0,"104":0,"105":0,"106":0,"109":0,"110":0,"113":0,"114":0,"117":0,"118":0,"122":0,"123":0,"124":0,"131":0,"132":0,"135":0,"136":0,"137":0,"140":0,"142":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/browser.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/browser.js","s":{"1":2,"2":2,"3":1,"4":0,"5":2,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"Tiled","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":35}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":38}}},"4":{"name":"GameObjectFactory_tiledmap","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":48}}},"5":{"name":"Loader_tiledmap","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":49}}},"6":{"name":"Loader_loadFile","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":31}}},"7":{"name":"Loader_jsonLoadComplete","line":175,"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":44}}},"8":{"name":"Loader_xmlLoadComplete","line":201,"loc":{"start":{"line":201,"column":0},"end":{"line":201,"column":43}}},"9":{"name":"Loader_processPack","line":235,"loc":{"start":{"line":235,"column":0},"end":{"line":235,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":14,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":49}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":51}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":53}},"12":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}},"13":{"start":{"line":31,"column":0},"end":{"line":51,"column":2}},"14":{"start":{"line":53,"column":0},"end":{"line":69,"column":2}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":77}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":55}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":55}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":71}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":69}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":61}},"21":{"start":{"line":61,"column":4},"end":{"line":64,"column":5}},"22":{"start":{"line":62,"column":8},"end":{"line":62,"column":81}},"23":{"start":{"line":63,"column":8},"end":{"line":63,"column":107}},"24":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"25":{"start":{"line":67,"column":8},"end":{"line":67,"column":87}},"26":{"start":{"line":71,"column":0},"end":{"line":89,"column":2}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":59}},"28":{"start":{"line":74,"column":4},"end":{"line":74,"column":87}},"29":{"start":{"line":75,"column":4},"end":{"line":75,"column":65}},"30":{"start":{"line":76,"column":4},"end":{"line":76,"column":65}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":81}},"32":{"start":{"line":78,"column":4},"end":{"line":78,"column":79}},"33":{"start":{"line":79,"column":4},"end":{"line":79,"column":71}},"34":{"start":{"line":81,"column":4},"end":{"line":84,"column":5}},"35":{"start":{"line":82,"column":8},"end":{"line":82,"column":91}},"36":{"start":{"line":83,"column":8},"end":{"line":83,"column":117}},"37":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"38":{"start":{"line":87,"column":8},"end":{"line":87,"column":97}},"39":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"40":{"start":{"line":92,"column":4},"end":{"line":92,"column":52}},"41":{"start":{"line":107,"column":0},"end":{"line":147,"column":1}},"42":{"start":{"line":108,"column":4},"end":{"line":108,"column":70}},"43":{"start":{"line":108,"column":41},"end":{"line":108,"column":68}},"44":{"start":{"line":111,"column":4},"end":{"line":115,"column":5}},"45":{"start":{"line":112,"column":8},"end":{"line":112,"column":94}},"46":{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},"47":{"start":{"line":119,"column":4},"end":{"line":144,"column":5}},"48":{"start":{"line":120,"column":8},"end":{"line":138,"column":9}},"49":{"start":{"line":123,"column":16},"end":{"line":123,"column":22}},"50":{"start":{"line":127,"column":16},"end":{"line":129,"column":17}},"51":{"start":{"line":128,"column":20},"end":{"line":128,"column":44}},"52":{"start":{"line":130,"column":16},"end":{"line":130,"column":22}},"53":{"start":{"line":134,"column":16},"end":{"line":136,"column":17}},"54":{"start":{"line":135,"column":20},"end":{"line":135,"column":48}},"55":{"start":{"line":137,"column":16},"end":{"line":137,"column":22}},"56":{"start":{"line":140,"column":8},"end":{"line":140,"column":60}},"57":{"start":{"line":143,"column":8},"end":{"line":143,"column":69}},"58":{"start":{"line":146,"column":4},"end":{"line":146,"column":16}},"59":{"start":{"line":149,"column":0},"end":{"line":166,"column":1}},"60":{"start":{"line":150,"column":4},"end":{"line":150,"column":53}},"61":{"start":{"line":152,"column":4},"end":{"line":165,"column":5}},"62":{"start":{"line":153,"column":8},"end":{"line":164,"column":9}},"63":{"start":{"line":154,"column":12},"end":{"line":154,"column":97}},"64":{"start":{"line":156,"column":13},"end":{"line":164,"column":9}},"65":{"start":{"line":157,"column":12},"end":{"line":157,"column":96}},"66":{"start":{"line":159,"column":13},"end":{"line":164,"column":9}},"67":{"start":{"line":160,"column":12},"end":{"line":160,"column":96}},"68":{"start":{"line":163,"column":12},"end":{"line":163,"column":79}},"69":{"start":{"line":175,"column":0},"end":{"line":192,"column":1}},"70":{"start":{"line":176,"column":4},"end":{"line":176,"column":44}},"71":{"start":{"line":178,"column":4},"end":{"line":189,"column":5}},"72":{"start":{"line":180,"column":8},"end":{"line":180,"column":74}},"73":{"start":{"line":182,"column":9},"end":{"line":189,"column":5}},"74":{"start":{"line":184,"column":8},"end":{"line":184,"column":58}},"75":{"start":{"line":188,"column":8},"end":{"line":188,"column":90}},"76":{"start":{"line":191,"column":4},"end":{"line":191,"column":29}},"77":{"start":{"line":201,"column":0},"end":{"line":232,"column":1}},"78":{"start":{"line":203,"column":4},"end":{"line":203,"column":32}},"79":{"start":{"line":204,"column":4},"end":{"line":204,"column":34}},"80":{"start":{"line":206,"column":4},"end":{"line":212,"column":5}},"81":{"start":{"line":208,"column":8},"end":{"line":208,"column":63}},"82":{"start":{"line":209,"column":8},"end":{"line":209,"column":93}},"83":{"start":{"line":210,"column":8},"end":{"line":210,"column":48}},"84":{"start":{"line":211,"column":8},"end":{"line":211,"column":15}},"85":{"start":{"line":214,"column":4},"end":{"line":228,"column":5}},"86":{"start":{"line":215,"column":8},"end":{"line":215,"column":73}},"87":{"start":{"line":217,"column":9},"end":{"line":228,"column":5}},"88":{"start":{"line":219,"column":8},"end":{"line":219,"column":104}},"89":{"start":{"line":221,"column":9},"end":{"line":228,"column":5}},"90":{"start":{"line":223,"column":8},"end":{"line":223,"column":89}},"91":{"start":{"line":225,"column":9},"end":{"line":228,"column":5}},"92":{"start":{"line":227,"column":8},"end":{"line":227,"column":56}},"93":{"start":{"line":230,"column":4},"end":{"line":230,"column":29}},"94":{"start":{"line":235,"column":0},"end":{"line":316,"column":1}},"95":{"start":{"line":236,"column":4},"end":{"line":236,"column":39}},"96":{"start":{"line":238,"column":4},"end":{"line":242,"column":5}},"97":{"start":{"line":240,"column":8},"end":{"line":240,"column":94}},"98":{"start":{"line":241,"column":8},"end":{"line":241,"column":15}},"99":{"start":{"line":244,"column":4},"end":{"line":315,"column":5}},"100":{"start":{"line":246,"column":8},"end":{"line":246,"column":31}},"101":{"start":{"line":248,"column":8},"end":{"line":314,"column":9}},"102":{"start":{"line":251,"column":16},"end":{"line":251,"column":63}},"103":{"start":{"line":252,"column":16},"end":{"line":252,"column":22}},"104":{"start":{"line":255,"column":16},"end":{"line":255,"column":62}},"105":{"start":{"line":256,"column":16},"end":{"line":256,"column":22}},"106":{"start":{"line":259,"column":16},"end":{"line":259,"column":62}},"107":{"start":{"line":260,"column":16},"end":{"line":260,"column":22}},"108":{"start":{"line":263,"column":16},"end":{"line":263,"column":93}},"109":{"start":{"line":264,"column":16},"end":{"line":264,"column":22}},"110":{"start":{"line":267,"column":16},"end":{"line":267,"column":93}},"111":{"start":{"line":268,"column":16},"end":{"line":268,"column":22}},"112":{"start":{"line":271,"column":16},"end":{"line":272,"column":66}},"113":{"start":{"line":273,"column":16},"end":{"line":273,"column":22}},"114":{"start":{"line":276,"column":16},"end":{"line":276,"column":65}},"115":{"start":{"line":277,"column":16},"end":{"line":277,"column":22}},"116":{"start":{"line":280,"column":16},"end":{"line":280,"column":62}},"117":{"start":{"line":281,"column":16},"end":{"line":281,"column":22}},"118":{"start":{"line":284,"column":16},"end":{"line":284,"column":89}},"119":{"start":{"line":285,"column":16},"end":{"line":285,"column":22}},"120":{"start":{"line":288,"column":16},"end":{"line":288,"column":89}},"121":{"start":{"line":289,"column":16},"end":{"line":289,"column":22}},"122":{"start":{"line":292,"column":16},"end":{"line":292,"column":88}},"123":{"start":{"line":293,"column":16},"end":{"line":293,"column":22}},"124":{"start":{"line":296,"column":16},"end":{"line":296,"column":116}},"125":{"start":{"line":297,"column":16},"end":{"line":297,"column":22}},"126":{"start":{"line":300,"column":16},"end":{"line":300,"column":94}},"127":{"start":{"line":301,"column":16},"end":{"line":301,"column":22}},"128":{"start":{"line":304,"column":16},"end":{"line":304,"column":93}},"129":{"start":{"line":305,"column":16},"end":{"line":305,"column":22}},"130":{"start":{"line":308,"column":16},"end":{"line":308,"column":88}},"131":{"start":{"line":309,"column":16},"end":{"line":309,"column":22}},"132":{"start":{"line":312,"column":16},"end":{"line":312,"column":113}},"133":{"start":{"line":313,"column":16},"end":{"line":313,"column":22}}},"branchMap":{"1":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":49},"end":{"line":44,"column":92}},{"start":{"line":44,"column":95},"end":{"line":44,"column":99}}]},"2":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":62},"end":{"line":45,"column":118}},{"start":{"line":45,"column":121},"end":{"line":45,"column":125}}]},"3":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":52},"end":{"line":48,"column":98}},{"start":{"line":48,"column":101},"end":{"line":48,"column":105}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"10":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":19}},{"start":{"line":111,"column":23},"end":{"line":111,"column":35}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"12":{"line":120,"type":"switch","locations":[{"start":{"line":122,"column":12},"end":{"line":123,"column":22}},{"start":{"line":126,"column":12},"end":{"line":130,"column":22}},{"start":{"line":133,"column":12},"end":{"line":137,"column":22}}]},"13":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":16},"end":{"line":127,"column":16}},{"start":{"line":127,"column":16},"end":{"line":127,"column":16}}]},"14":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":16},"end":{"line":134,"column":16}},{"start":{"line":134,"column":16},"end":{"line":134,"column":16}}]},"15":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"16":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":8}},{"start":{"line":153,"column":8},"end":{"line":153,"column":8}}]},"17":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":13},"end":{"line":156,"column":13}},{"start":{"line":156,"column":13},"end":{"line":156,"column":13}}]},"18":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":13},"end":{"line":159,"column":13}},{"start":{"line":159,"column":13},"end":{"line":159,"column":13}}]},"19":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"20":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":31}},{"start":{"line":178,"column":35},"end":{"line":178,"column":59}}]},"21":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":9},"end":{"line":182,"column":9}},{"start":{"line":182,"column":9},"end":{"line":182,"column":9}}]},"22":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"23":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":27},"end":{"line":208,"column":43}},{"start":{"line":208,"column":47},"end":{"line":208,"column":62}}]},"24":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"25":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":8},"end":{"line":214,"column":31}},{"start":{"line":214,"column":35},"end":{"line":214,"column":59}}]},"26":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":9},"end":{"line":217,"column":9}},{"start":{"line":217,"column":9},"end":{"line":217,"column":9}}]},"27":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":9},"end":{"line":221,"column":9}},{"start":{"line":221,"column":9},"end":{"line":221,"column":9}}]},"28":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":9},"end":{"line":225,"column":9}},{"start":{"line":225,"column":9},"end":{"line":225,"column":9}}]},"29":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"30":{"line":248,"type":"switch","locations":[{"start":{"line":250,"column":12},"end":{"line":252,"column":22}},{"start":{"line":254,"column":12},"end":{"line":256,"column":22}},{"start":{"line":258,"column":12},"end":{"line":260,"column":22}},{"start":{"line":262,"column":12},"end":{"line":264,"column":22}},{"start":{"line":266,"column":12},"end":{"line":268,"column":22}},{"start":{"line":270,"column":12},"end":{"line":273,"column":22}},{"start":{"line":275,"column":12},"end":{"line":277,"column":22}},{"start":{"line":279,"column":12},"end":{"line":281,"column":22}},{"start":{"line":283,"column":12},"end":{"line":285,"column":22}},{"start":{"line":287,"column":12},"end":{"line":289,"column":22}},{"start":{"line":291,"column":12},"end":{"line":293,"column":22}},{"start":{"line":295,"column":12},"end":{"line":297,"column":22}},{"start":{"line":299,"column":12},"end":{"line":301,"column":22}},{"start":{"line":303,"column":12},"end":{"line":305,"column":22}},{"start":{"line":307,"column":12},"end":{"line":309,"column":22}},{"start":{"line":311,"column":12},"end":{"line":313,"column":22}}]},"31":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":63},"end":{"line":263,"column":83}},{"start":{"line":263,"column":87},"end":{"line":263,"column":91}}]},"32":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":63},"end":{"line":267,"column":83}},{"start":{"line":267,"column":87},"end":{"line":267,"column":91}}]}},"code":["var utils = require('./utils');","var physics = require('./physics');","","/**"," * @class Phaser.Plugin.Tiled"," * @classdesc Phaser - Tiled Plugin"," *"," * @constructor"," * @extends Phaser.Plugin"," *"," * @param {Phaser.Game} game - A reference to the currently running game."," * @param {Any} parent - The object that owns this plugin, usually Phaser.PluginManager."," */","function Tiled(game, parent) {","    Phaser.Plugin.call(this, game, parent);","}","","//  Extends the Phaser.Plugin template, setting up values we need","Tiled.prototype = Object.create(Phaser.Plugin.prototype);","Tiled.prototype.constructor = Tiled;","","module.exports = Tiled;","","// Tiled.Tile          = require('./tiled/Tile');","Tiled.Tileset       = require('./tiled/Tileset');","Tiled.Tilemap       = require('./tiled/Tilemap');","Tiled.Tilelayer     = require('./tiled/Tilelayer');","Tiled.Objectlayer   = require('./tiled/Objectlayer');","Tiled.utils         = utils;","","var originals = {","    gameObjectFactory: {","        tiledmap: Phaser.GameObjectFactory.prototype.tiledmap","    },","    loader: {","        tiledmap: Phaser.Loader.prototype.tiledmap,","        loadFile: Phaser.Loader.prototype.loadFile,","        jsonLoadComplete: Phaser.Loader.prototype.jsonLoadComplete,","        xmlLoadComplete: Phaser.Loader.prototype.xmlLoadComplete,","        processPack: Phaser.Loader.prototype.processPack","    },","    physics: {","        p2: {","            convertTiledmap: Phaser.Physics.P2 ? Phaser.Physics.P2.prototype.convertTiledmap : null,","            convertTiledCollisionObjects: Phaser.Physics.P2 ? Phaser.Physics.P2.prototype.convertTiledCollisionObjects : null","        },","        ninja: {","            convertTiledmap: Phaser.Physics.Ninja ? Phaser.Physics.Ninja.prototype.convertTiledmap : null","        }","    }","};","","Tiled.prototype.init = function () {","    Phaser.GameObjectFactory.prototype.tiledmap = GameObjectFactory_tiledmap;","    Phaser.Loader.prototype.tiledmap = Loader_tiledmap;","    Phaser.Loader.prototype.loadFile = Loader_loadFile;","    Phaser.Loader.prototype.jsonLoadComplete = Loader_jsonLoadComplete;","    Phaser.Loader.prototype.xmlLoadComplete = Loader_xmlLoadComplete;","    Phaser.Loader.prototype.processPack = Loader_processPack;","","    if (Phaser.Physics.P2) {","        Phaser.Physics.P2.prototype.convertTiledmap = physics.p2.convertTiledmap;","        Phaser.Physics.P2.prototype.convertTiledCollisionObjects = physics.p2.convertTiledCollisionObjects;","    }","","    if (Phaser.Physics.Ninja) {","        Phaser.Physics.Ninja.prototype.convertTiledmap = physics.ninja.convertTiledmap;","    }","};","","Tiled.prototype.destroy = function () {","    Phaser.Plugin.prototype.destroy.apply(this, arguments);","","    Phaser.GameObjectFactory.prototype.tiledmap = originals.gameObjectFactory.tiledmap;","    Phaser.Loader.prototype.tiledmap = originals.loader.tiledmap;","    Phaser.Loader.prototype.loadFile = originals.loader.loadFile;","    Phaser.Loader.prototype.jsonLoadComplete = originals.loader.jsonLoadComplete;","    Phaser.Loader.prototype.xmlLoadComplete = originals.loader.xmlLoadComplete;","    Phaser.Loader.prototype.processPack = originals.loader.processPack;","","    if (originals.physics.p2.convertTiledmap) {","        Phaser.Physics.P2.prototype.convertTiledmap = originals.physics.p2.convertTiledmap;","        Phaser.Physics.P2.prototype.convertTiledCollisionObjects = originals.physics.p2.convertTiledCollisionObjects;","    }","","    if (originals.physics.ninja.convertTiledmap) {","        Phaser.Physics.Ninja.prototype.convertTiledmap = originals.physics.ninja.convertTiledmap;","    }","};","","function GameObjectFactory_tiledmap(key, group) {","    return new Tiled.Tilemap(this.game, key, group);","}","","/**"," * Add a new tilemap loading request."," *"," * @method Phaser.Loader#tilemap"," * @param {string} key - Unique asset key of the tilemap data."," * @param {string} [url] - The url of the map data file (csv/json)"," * @param {object} [data] - An optional JSON data object. If given then the url is ignored and this JSON"," *      object is used for map data instead."," * @param {number} [format=Tiled.Tilemap.CSV] - The format of the map data. Either Tiled.Tilemap.CSV"," *      or Tiled.Tilemap.TILED_JSON."," * @return {Phaser.Loader} This Loader instance."," */","function Loader_tiledmap(key, url, data, format) {","    if (typeof format === 'undefined') { format = Tiled.Tilemap.CSV; }","","    /*eslint-disable no-eq-null, eqeqeq */","    if (url == null && data == null) {","        console.warn('Phaser.Loader.tiledmap - Both url and data are null. One must be set.');","","        return this;","    }","    /*eslint-enable no-eq-null, eqeqeq */","","    //  A map data object has been given","    if (data) {","        switch (format) {","            //  A csv string or object has been given","            case Tiled.Tilemap.CSV:","                break;","","            //  A json string or object has been given","            case Tiled.Tilemap.TILED_JSON:","                if (typeof data === 'string') {","                    data = JSON.parse(data);","                }","                break;","","            //  An xml string or document has been given","            case Tiled.Tilemap.TILED_XML:","                if (typeof data === 'string') {","                    data = utils.parseXML(data);","                }","                break;","        }","","        this.game.cache.addTilemap(key, null, data, format);","    }","    else {","        this.addToFileList('tiledmap', key, url, { format: format });","    }","","    return this;","}","","function Loader_loadFile(file) {","    originals.loader.loadFile.apply(this, arguments);","","    if (file.type === 'tiledmap') {","        if (file.format === Tiled.Tilemap.TILED_JSON) {","            this.xhrLoad(file, this.transformUrl(file.url, file), 'text', this.jsonLoadComplete);","        }","        else if (file.format === Tiled.Tilemap.CSV) {","            this.xhrLoad(file, this.transformUrl(file.url, file), 'text', this.csvLoadComplete);","        }","        else if (file.format === Tiled.Tilemap.TILED_XML) {","            this.xhrLoad(file, this.transformUrl(file.url, file), 'text', this.xmlLoadComplete);","        }","        else {","            this.asyncComplete(file, 'invalid Tilemap format: ' + file.format);","        }","    }","}","","/**"," * Successfully loaded a JSON file."," *"," * @method Phaser.Loader#jsonLoadComplete"," * @param {object} file - File associated with this request"," * @param {XMLHttpRequest} xhr"," */","function Loader_jsonLoadComplete(file, xhr) {","    var data = JSON.parse(xhr.responseText);","","    if (file.type === 'tilemap' || file.type === 'tiledmap')","    {","        this.game.cache.addTilemap(file.key, file.url, data, file.format);","    }","    else if (file.type === 'json')","    {","        this.game.cache.addJSON(file.key, file.url, data);","    }","    else","    {","        this.game.cache.addTextureAtlas(file.key, file.url, file.data, data, file.format);","    }","","    this.asyncComplete(file);","}","","/**"," * Successfully loaded an XML file."," *"," * @method Phaser.Loader#xmlLoadComplete"," * @param {object} file - File associated with this request"," * @param {XMLHttpRequest} xhr"," */","function Loader_xmlLoadComplete(file, xhr) {","    // Always try parsing the content as XML, regardless of actually response type","    var data = xhr.responseText;","    var xml = this.parseXml(data);","","    if (!xml)","    {","        var responseType = xhr.responseType || xhr.contentType; // contentType for MS-XDomainRequest","        console.warn('Phaser.Loader - ' + file.key + ': invalid XML (' + responseType + ')');","        this.asyncComplete(file, 'invalid XML');","        return;","    }","","    if (file.type === 'tilemap' || file.type === 'tiledmap') {","        this.game.cache.addTilemap(file.key, file.url, xml, file.format);","    }","    else if (file.type === 'bitmapfont')","    {","        this.game.cache.addBitmapFont(file.key, file.url, file.data, xml, file.xSpacing, file.ySpacing);","    }","    else if (file.type === 'textureatlas')","    {","        this.game.cache.addTextureAtlas(file.key, file.url, file.data, xml, file.format);","    }","    else if (file.type === 'xml')","    {","        this.game.cache.addXML(file.key, file.url, xml);","    }","","    this.asyncComplete(file);","","}","","// the same as the core one, but we add 'tiledmap'","function Loader_processPack(pack) {","    var packData = pack.data[pack.key];","","    if (!packData)","    {","        console.warn('Phaser.Loader - ' + pack.key + ': pack has data, but not for pack key');","        return;","    }","","    for (var i = 0; i < packData.length; i++)","    {","        var file = packData[i];","","        switch (file.type)","        {","            case 'image':","                this.image(file.key, file.url, file.overwrite);","                break;","","            case 'text':","                this.text(file.key, file.url, file.overwrite);","                break;","","            case 'json':","                this.json(file.key, file.url, file.overwrite);","                break;","","            case 'script':","                this.script(file.key, file.url, file.callback, pack.callbackContext || this);","                break;","","            case 'binary':","                this.binary(file.key, file.url, file.callback, pack.callbackContext || this);","                break;","","            case 'spritesheet':","                this.spritesheet(file.key, file.url, file.frameWidth, file.frameHeight,","                        file.frameMax, file.margin, file.spacing);","                break;","","            case 'audio':","                this.audio(file.key, file.urls, file.autoDecode);","                break;","","            case 'audiosprite':","                this.audio(file.key, file.urls, file.jsonURL);","                break;","","            case 'tilemap':","                this.tilemap(file.key, file.url, file.data, Phaser.Tilemap[file.format]);","                break;","","            case 'tiledmap':","                this.tiledmap(file.key, file.url, file.data, Tiled.Tilemap[file.format]);","                break;","","            case 'physics':","                this.physics(file.key, file.url, file.data, Phaser.Loader[file.format]);","                break;","","            case 'bitmapFont':","                this.bitmapFont(file.key, file.textureURL, file.xmlURL, file.xmlData, file.xSpacing, file.ySpacing);","                break;","","            case 'atlasJSONArray':","                this.atlasJSONArray(file.key, file.textureURL, file.atlasURL, file.atlasData);","                break;","","            case 'atlasJSONHash':","                this.atlasJSONHash(file.key, file.textureURL, file.atlasURL, file.atlasData);","                break;","","            case 'atlasXML':","                this.atlasXML(file.key, file.textureURL, file.atlasURL, file.atlasData);","                break;","","            case 'atlas':","                this.atlas(file.key, file.textureURL, file.atlasURL, file.atlasData, Phaser.Loader[file.format]);","                break;","        }","    }","}",""],"l":{"1":2,"2":2,"14":1,"15":0,"19":2,"20":0,"22":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"66":0,"67":0,"71":0,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"81":0,"82":0,"83":0,"86":0,"87":0,"91":1,"92":0,"107":1,"108":0,"111":0,"112":0,"114":0,"119":0,"120":0,"123":0,"127":0,"128":0,"130":0,"134":0,"135":0,"137":0,"140":0,"143":0,"146":0,"149":1,"150":0,"152":0,"153":0,"154":0,"156":0,"157":0,"159":0,"160":0,"163":0,"175":1,"176":0,"178":0,"180":0,"182":0,"184":0,"188":0,"191":0,"201":1,"203":0,"204":0,"206":0,"208":0,"209":0,"210":0,"211":0,"214":0,"215":0,"217":0,"219":0,"221":0,"223":0,"225":0,"227":0,"230":0,"235":1,"236":0,"238":0,"240":0,"241":0,"244":0,"246":0,"248":0,"251":0,"252":0,"255":0,"256":0,"259":0,"260":0,"263":0,"264":0,"267":0,"268":0,"271":0,"273":0,"276":0,"277":0,"280":0,"281":0,"284":0,"285":0,"288":0,"289":0,"292":0,"293":0,"296":0,"297":0,"300":0,"301":0,"304":0,"305":0,"308":0,"309":0,"312":0,"313":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/physics.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/physics.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":116,"loc":{"start":{"line":116,"column":38},"end":{"line":116,"column":72}}},"2":{"name":"mapPointToArray","line":244,"loc":{"start":{"line":244,"column":0},"end":{"line":244,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":242,"column":2}},"2":{"start":{"line":118,"column":12},"end":{"line":118,"column":73}},"3":{"start":{"line":118,"column":53},"end":{"line":118,"column":71}},"4":{"start":{"line":119,"column":12},"end":{"line":119,"column":75}},"5":{"start":{"line":119,"column":48},"end":{"line":119,"column":73}},"6":{"start":{"line":121,"column":12},"end":{"line":121,"column":46}},"7":{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},"8":{"start":{"line":124,"column":16},"end":{"line":124,"column":23}},"9":{"start":{"line":127,"column":12},"end":{"line":171,"column":13}},"10":{"start":{"line":129,"column":16},"end":{"line":129,"column":46}},"11":{"start":{"line":131,"column":16},"end":{"line":131,"column":73}},"12":{"start":{"line":134,"column":16},"end":{"line":147,"column":17}},"13":{"start":{"line":135,"column":20},"end":{"line":138,"column":21}},"14":{"start":{"line":136,"column":24},"end":{"line":136,"column":94}},"15":{"start":{"line":137,"column":24},"end":{"line":137,"column":33}},"16":{"start":{"line":141,"column":21},"end":{"line":147,"column":17}},"17":{"start":{"line":142,"column":20},"end":{"line":142,"column":102}},"18":{"start":{"line":146,"column":20},"end":{"line":146,"column":121}},"19":{"start":{"line":149,"column":16},"end":{"line":152,"column":17}},"20":{"start":{"line":150,"column":20},"end":{"line":150,"column":73}},"21":{"start":{"line":151,"column":20},"end":{"line":151,"column":29}},"22":{"start":{"line":154,"column":16},"end":{"line":154,"column":95}},"23":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"24":{"start":{"line":157,"column":20},"end":{"line":157,"column":96}},"25":{"start":{"line":160,"column":16},"end":{"line":160,"column":91}},"26":{"start":{"line":162,"column":16},"end":{"line":162,"column":38}},"27":{"start":{"line":164,"column":16},"end":{"line":164,"column":42}},"28":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"29":{"start":{"line":167,"column":20},"end":{"line":167,"column":39}},"30":{"start":{"line":170,"column":16},"end":{"line":170,"column":40}},"31":{"start":{"line":244,"column":0},"end":{"line":246,"column":1}},"32":{"start":{"line":245,"column":4},"end":{"line":245,"column":26}}},"branchMap":{"1":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":12}},{"start":{"line":118,"column":12},"end":{"line":118,"column":12}}]},"2":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"3":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":12}},{"start":{"line":123,"column":12},"end":{"line":123,"column":12}}]},"4":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":16},"end":{"line":134,"column":16}},{"start":{"line":134,"column":16},"end":{"line":134,"column":16}}]},"5":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":20},"end":{"line":134,"column":34}},{"start":{"line":134,"column":38},"end":{"line":134,"column":53}}]},"6":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":20},"end":{"line":135,"column":20}},{"start":{"line":135,"column":20},"end":{"line":135,"column":20}}]},"7":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":48},"end":{"line":135,"column":62}},{"start":{"line":135,"column":66},"end":{"line":135,"column":81}}]},"8":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":21},"end":{"line":141,"column":21}},{"start":{"line":141,"column":21},"end":{"line":141,"column":21}}]},"9":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":16}},{"start":{"line":149,"column":16},"end":{"line":149,"column":16}}]},"10":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":48},"end":{"line":154,"column":65}},{"start":{"line":154,"column":69},"end":{"line":154,"column":93}}]},"11":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":156,"column":16}},{"start":{"line":156,"column":16},"end":{"line":156,"column":16}}]},"12":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":20},"end":{"line":156,"column":37}},{"start":{"line":156,"column":41},"end":{"line":156,"column":97}}]},"13":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":31},"end":{"line":160,"column":48}},{"start":{"line":160,"column":52},"end":{"line":160,"column":78}},{"start":{"line":160,"column":82},"end":{"line":160,"column":90}}]},"14":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":16}},{"start":{"line":166,"column":16},"end":{"line":166,"column":16}}]}},"code":["module.exports = {","    p2: {","        /**","        * Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics","        * bodies. Only call this *after* you have specified all of the tiles you wish to collide with calls like","        * Tilemap.setCollisionBetween, etc. Every time you call this method it will destroy any previously created","        * bodies and remove them from the world. Therefore understand it's a very expensive operation and not to be","        * done in a core game update loop.","        *","        * @method Phaser.Physics.P2#convertTilemap","        * @param {Phaser.Tilemap} map - The Tilemap to get the map data from.","        * @param {number|string|Phaser.TilemapLayer} [layer] - The layer to operate on. If not given will default","        *       to map.currentLayer.","        * @param {boolean} [addToWorld=true] - If true it will automatically add each body to the world, otherwise","        *       it's up to you to do so.","        * @param {boolean} [optimize=true] - If true adjacent colliding tiles will be combined into a single body","        *       to save processing. However it means you cannot perform specific Tile to Body collision responses.","        * @return {array} An array of the Phaser.Physics.P2.Body objects that were created.","        */","        // convertTiledmap: function (map, layer, addToWorld, optimize) {","        //","        //     if (typeof addToWorld === 'undefined') { addToWorld = true; }","        //     if (typeof optimize === 'undefined') { optimize = true; }","        //     if (typeof layer === 'undefined') { layer = map.currentLayer; }","        //","        //     layer = map.getTilelayer(layer);","        //","        //     if (!layer) {","        //         return;","        //     }","        //","        //     //  If the bodies array is already populated we need to nuke it","        //     this.clearTilemapLayerBodies(map, layer.index);","        //","        //     var width = 0,","        //         sx = 0,","        //         sy = 0,","        //         tile, body, right;","        //","        //     for (var y = 0, h = layer.size.y; y < h; y++)","        //     {","        //         width = 0;","        //","        //         for (var x = 0, w = layer.size.x; x < w; x++)","        //         {","        //             if (!layer.tiles[y]) {","        //                 continue;","        //             }","        //","        //             tile = layer.tiles[y][x];","        //","        //             if (tile && tile.collides)","        //             {","        //                 if (optimize)","        //                 {","        //                     right = map.getTileRight(layer.index, x, y);","        //","        //                     if (width === 0)","        //                     {","        //                         sx = tile.x;","        //                         sy = tile.y;","        //                         width = tile.width;","        //                     }","        //","        //                     if (right && right.collides)","        //                     {","        //                         width += tile.width;","        //                     }","        //                     else","        //                     {","        //                         body = this.createBody(sx, sy, 0, false);","        //","        //                         body.addRectangle(width, tile.height, width / 2, tile.height / 2, 0);","        //","        //                         if (addToWorld)","        //                         {","        //                             this.addBody(body);","        //                         }","        //","        //                         layer.bodies.push(body);","        //","        //                         width = 0;","        //                     }","        //                 }","        //                 else","        //                 {","        //                     body = this.createBody(tile.x, tile.y, 0, false);","        //","        //                     body.clearShapes();","        //                     body.addRectangle(tile.width, tile.height, tile.width / 2, tile.height / 2, tile.rotation);","        //","        //                     if (addToWorld)","        //                     {","        //                         this.addBody(body);","        //                     }","        //","        //                     layer.bodies.push(body);","        //                 }","        //             }","        //         }","        //     }","        //","        //     return layer.bodies;","        //","        // },","        /**","        * Converts all of the polylines objects inside a Tiled ObjectGroup into physics bodies that are added to the world.","        * Note that the polylines must be created in such a way that they can withstand polygon decomposition.","        *","        * @method Phaser.Physics.P2#convertCollisionObjects","        * @param {Phaser.Tilemap} map - The Tilemap to get the map data from.","        * @param {number|string|Phaser.TilemapLayer} [layer] - The layer to operate on, defaults to map.currentLayer.","        * @param {boolean} [addToWorld=true] - If true it will automatically add each body to the world.","        * @return {array} An array of the Phaser.Physics.Body objects that have been created.","        */","        convertTiledCollisionObjects: function (map, layer, addToWorld) {","","            if (typeof addToWorld === 'undefined') { addToWorld = true; }","            if (typeof layer === 'undefined') { layer = map.currentLayer; }","","            layer = map.getObjectlayer(layer);","","            if (!layer) {","                return;","            }","","            for (var i = 0, len = layer.objects.length; i < len; i++)","            {","                var object = layer.objects[i];","","                var body = this.createBody(object.x, object.y, 0, false);","","                // polygon defined area","                if (object.polygon || object.polyline) {","                    if (!body.addPolygon(null, (object.polygon || object.polyline).map(mapPointToArray))) {","                        console.warn('Unable to add poly collision body for object:', object);","                        continue;","                    }","                }","                // currently only circles are supported by P2, so we just use the width","                else if (object.ellipse) {","                    body.addCircle(object.width, object.width / 2, object.width / 2, object.rotation);","                }","                // no polygon, use rectangle defined by object itself","                else {","                    body.addRectangle(object.width, object.height, object.width / 2, object.height / 2, object.rotation);","                }","","                if (!body.data.shapes[0]) {","                    console.warn('No shape created for object:', object);","                    continue;","                }","","                body.data.shapes[0].sensor = !!(object.properties && object.properties.sensor);","","                if (object.properties && typeof object.properties.collisionResponse === 'boolean') {","                    body.data.shapes[0].collisionResponse = object.properties.collisionResponse;","                }","","                var bodyType = object.properties && object.properties.bodyType || 'static';","","                body[bodyType] = true;","","                body.tiledObject = object;","","                if (addToWorld) {","                    this.addBody(body);","                }","","                layer.bodies.push(body);","            }","        }","    },","","    ninja: {","        /**","        * Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics","        * bodies. Only call this *after* you have specified all of the tiles you wish to collide with calls like","        * Tilemap.setCollisionBetween, etc. Every time you call this method it will destroy any previously created","        * bodies and remove them from the world. Therefore understand it's a very expensive operation and not to be","        * done in a core game update loop.","        *","        * In Ninja the Tiles have an ID from 0 to 33, where 0 is 'empty', 1 is a full tile, 2 is a 45-degree slope,","        * etc. You can find the ID list either at the very bottom of `Tile.js`, or in a handy visual reference in the","        * `resources/Ninja Physics Debug Tiles` folder in the repository. The slopeMap parameter is an array that controls","        * how the indexes of the tiles in your tilemap data will map to the Ninja Tile IDs. For example if you had 6","        * tiles in your tileset: Imagine the first 4 should be converted into fully solid Tiles and the other 2 are 45-degree","        * slopes. Your slopeMap array would look like this: `[ 1, 1, 1, 1, 2, 3 ]`. Where each element of the array is","        * a tile in your tilemap and the resulting Ninja Tile it should create.","        *","        * @method Phaser.Physics.Ninja#convertTilemap","        * @param {Phaser.Tilemap} map - The Tilemap to get the map data from.","        * @param {number|string|Phaser.TilemapLayer} [layer] - The layer to operate on. Defaults to map.currentLayer.","        * @param {object} [slopeMap] - The tilemap index to Tile ID map.","        * @return {array} An array of the Phaser.Physics.Ninja.Tile objects that were created.","        */","        // convertTiledmap: function (map, layer, slopeMap) {","        //","        //     layer = map.getTilelayer(layer);","        //","        //     if (!layer) {","        //         return;","        //     }","        //","        //     //  If the bodies array is already populated we need to nuke it","        //     this.clearTilemapLayerBodies(map, layer);","        //","        //     for (var y = 0, h = layer.size.y; y < h; y++)","        //     {","        //         if (!layer.tiles[y]) {","        //             continue;","        //         }","        //","        //         for (var x = 0, w = layer.size.x; x < w; x++)","        //         {","        //             var tile = layer.tiles[y][x],","        //                 index = (y * layer.size.x) + x;","        //","        //             if (tile && slopeMap.hasOwnProperty(index))","        //             {","        //                 var body = new Phaser.Physics.Ninja.Body(","        //                     this,","        //                     null,","        //                     3,","        //                     slopeMap[index],","        //                     0,","        //                     tile.worldX + tile.centerX,","        //                     tile.worldY + tile.centerY,","        //                     tile.width,","        //                     tile.height","        //                 );","        //","        //                 layer.bodies.push(body);","        //             }","        //         }","        //     }","        //","        //     return layer.bodies;","        //","        // }","    }","};","","function mapPointToArray(obj) {","    return [obj.x, obj.y];","}",""],"l":{"1":1,"118":0,"119":0,"121":0,"123":0,"124":0,"127":0,"129":0,"131":0,"134":0,"135":0,"136":0,"137":0,"141":0,"142":0,"146":0,"149":0,"150":0,"151":0,"154":0,"156":0,"157":0,"160":0,"162":0,"164":0,"166":0,"167":0,"170":0,"244":1,"245":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/constants.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":57,"column":2}}},"branchMap":{},"code":["module.exports = {","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    CSV: 0,","","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    TILED_JSON: 1,","","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    TILED_XML: 2,","","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    NORTH: 0,","","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    EAST: 1,","","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    SOUTH: 2,","","    /**","     * @property CSV","     * @type {Number}","     * @static","     * @final","     */","    WEST: 3","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Objectlayer.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Objectlayer.js","s":{"1":2,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":2,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Objectlayer","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}}},"2":{"name":"(anonymous_2)","line":115,"loc":{"start":{"line":115,"column":30},"end":{"line":115,"column":72}}},"3":{"name":"(anonymous_3)","line":270,"loc":{"start":{"line":270,"column":34},"end":{"line":270,"column":50}}},"4":{"name":"(anonymous_4)","line":287,"loc":{"start":{"line":287,"column":38},"end":{"line":287,"column":70}}},"5":{"name":"(anonymous_5)","line":299,"loc":{"start":{"line":299,"column":36},"end":{"line":299,"column":49}}},"6":{"name":"(anonymous_6)","line":316,"loc":{"start":{"line":316,"column":37},"end":{"line":316,"column":50}}},"7":{"name":"(anonymous_7)","line":333,"loc":{"start":{"line":333,"column":36},"end":{"line":333,"column":49}}},"8":{"name":"(anonymous_8)","line":345,"loc":{"start":{"line":345,"column":38},"end":{"line":345,"column":51}}},"9":{"name":"(anonymous_9)","line":358,"loc":{"start":{"line":358,"column":40},"end":{"line":358,"column":62}}},"10":{"name":"(anonymous_10)","line":376,"loc":{"start":{"line":376,"column":32},"end":{"line":376,"column":51}}},"11":{"name":"(anonymous_11)","line":385,"loc":{"start":{"line":385,"column":32},"end":{"line":385,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":12,"column":0},"end":{"line":100,"column":1}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":39}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"5":{"start":{"line":25,"column":4},"end":{"line":25,"column":19}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":36}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":33}},"8":{"start":{"line":53,"column":4},"end":{"line":53,"column":29}},"9":{"start":{"line":61,"column":4},"end":{"line":61,"column":67}},"10":{"start":{"line":69,"column":4},"end":{"line":69,"column":33}},"11":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"12":{"start":{"line":72,"column":8},"end":{"line":72,"column":63}},"13":{"start":{"line":83,"column":4},"end":{"line":83,"column":49}},"14":{"start":{"line":86,"column":4},"end":{"line":86,"column":35}},"15":{"start":{"line":87,"column":4},"end":{"line":87,"column":35}},"16":{"start":{"line":88,"column":4},"end":{"line":88,"column":65}},"17":{"start":{"line":89,"column":4},"end":{"line":89,"column":70}},"18":{"start":{"line":92,"column":4},"end":{"line":92,"column":21}},"19":{"start":{"line":94,"column":4},"end":{"line":99,"column":5}},"20":{"start":{"line":95,"column":8},"end":{"line":95,"column":69}},"21":{"start":{"line":98,"column":8},"end":{"line":98,"column":30}},"22":{"start":{"line":102,"column":0},"end":{"line":102,"column":62}},"23":{"start":{"line":103,"column":0},"end":{"line":103,"column":48}},"24":{"start":{"line":105,"column":0},"end":{"line":105,"column":29}},"25":{"start":{"line":115,"column":0},"end":{"line":268,"column":2}},"26":{"start":{"line":118,"column":4},"end":{"line":265,"column":5}},"27":{"start":{"line":119,"column":8},"end":{"line":119,"column":32}},"28":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"29":{"start":{"line":121,"column":8},"end":{"line":121,"column":16}},"30":{"start":{"line":123,"column":8},"end":{"line":123,"column":16}},"31":{"start":{"line":125,"column":8},"end":{"line":125,"column":29}},"32":{"start":{"line":126,"column":8},"end":{"line":126,"column":31}},"33":{"start":{"line":128,"column":8},"end":{"line":128,"column":36}},"34":{"start":{"line":130,"column":8},"end":{"line":139,"column":9}},"35":{"start":{"line":131,"column":12},"end":{"line":131,"column":45}},"36":{"start":{"line":134,"column":12},"end":{"line":138,"column":13}},"37":{"start":{"line":135,"column":16},"end":{"line":135,"column":58}},"38":{"start":{"line":136,"column":16},"end":{"line":136,"column":63}},"39":{"start":{"line":137,"column":16},"end":{"line":137,"column":63}},"40":{"start":{"line":141,"column":8},"end":{"line":141,"column":68}},"41":{"start":{"line":142,"column":8},"end":{"line":142,"column":68}},"42":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"43":{"start":{"line":146,"column":12},"end":{"line":146,"column":68}},"44":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"45":{"start":{"line":150,"column":12},"end":{"line":150,"column":84}},"46":{"start":{"line":154,"column":8},"end":{"line":154,"column":82}},"47":{"start":{"line":157,"column":8},"end":{"line":157,"column":26}},"48":{"start":{"line":158,"column":8},"end":{"line":158,"column":34}},"49":{"start":{"line":159,"column":8},"end":{"line":159,"column":32}},"50":{"start":{"line":161,"column":8},"end":{"line":164,"column":9}},"51":{"start":{"line":162,"column":12},"end":{"line":162,"column":32}},"52":{"start":{"line":163,"column":12},"end":{"line":163,"column":34}},"53":{"start":{"line":166,"column":8},"end":{"line":166,"column":69}},"54":{"start":{"line":167,"column":8},"end":{"line":167,"column":92}},"55":{"start":{"line":170,"column":8},"end":{"line":180,"column":9}},"56":{"start":{"line":171,"column":12},"end":{"line":171,"column":97}},"57":{"start":{"line":173,"column":12},"end":{"line":173,"column":103}},"58":{"start":{"line":175,"column":12},"end":{"line":175,"column":84}},"59":{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},"60":{"start":{"line":178,"column":16},"end":{"line":178,"column":54}},"61":{"start":{"line":182,"column":8},"end":{"line":182,"column":55}},"62":{"start":{"line":183,"column":8},"end":{"line":183,"column":36}},"63":{"start":{"line":184,"column":8},"end":{"line":184,"column":36}},"64":{"start":{"line":186,"column":8},"end":{"line":189,"column":9}},"65":{"start":{"line":187,"column":12},"end":{"line":187,"column":29}},"66":{"start":{"line":188,"column":12},"end":{"line":188,"column":50}},"67":{"start":{"line":191,"column":8},"end":{"line":194,"column":9}},"68":{"start":{"line":192,"column":12},"end":{"line":192,"column":29}},"69":{"start":{"line":193,"column":12},"end":{"line":193,"column":51}},"70":{"start":{"line":198,"column":8},"end":{"line":209,"column":9}},"71":{"start":{"line":199,"column":12},"end":{"line":199,"column":55}},"72":{"start":{"line":200,"column":12},"end":{"line":200,"column":30}},"73":{"start":{"line":202,"column":12},"end":{"line":202,"column":33}},"74":{"start":{"line":203,"column":12},"end":{"line":203,"column":38}},"75":{"start":{"line":204,"column":12},"end":{"line":204,"column":29}},"76":{"start":{"line":206,"column":12},"end":{"line":206,"column":74}},"77":{"start":{"line":207,"column":12},"end":{"line":207,"column":39}},"78":{"start":{"line":208,"column":12},"end":{"line":208,"column":39}},"79":{"start":{"line":211,"column":8},"end":{"line":215,"column":9}},"80":{"start":{"line":212,"column":12},"end":{"line":212,"column":66}},"81":{"start":{"line":213,"column":12},"end":{"line":213,"column":80}},"82":{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},"83":{"start":{"line":218,"column":12},"end":{"line":218,"column":38}},"84":{"start":{"line":222,"column":8},"end":{"line":222,"column":67}},"85":{"start":{"line":249,"column":8},"end":{"line":249,"column":28}},"86":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"87":{"start":{"line":251,"column":12},"end":{"line":251,"column":51}},"88":{"start":{"line":254,"column":8},"end":{"line":258,"column":9}},"89":{"start":{"line":255,"column":12},"end":{"line":257,"column":13}},"90":{"start":{"line":256,"column":16},"end":{"line":256,"column":45}},"91":{"start":{"line":260,"column":8},"end":{"line":260,"column":26}},"92":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"93":{"start":{"line":263,"column":12},"end":{"line":263,"column":31}},"94":{"start":{"line":267,"column":4},"end":{"line":267,"column":16}},"95":{"start":{"line":270,"column":0},"end":{"line":276,"column":2}},"96":{"start":{"line":271,"column":4},"end":{"line":275,"column":5}},"97":{"start":{"line":272,"column":8},"end":{"line":274,"column":9}},"98":{"start":{"line":273,"column":12},"end":{"line":273,"column":35}},"99":{"start":{"line":287,"column":0},"end":{"line":289,"column":2}},"100":{"start":{"line":288,"column":4},"end":{"line":288,"column":49}},"101":{"start":{"line":299,"column":0},"end":{"line":306,"column":2}},"102":{"start":{"line":300,"column":4},"end":{"line":300,"column":20}},"103":{"start":{"line":301,"column":4},"end":{"line":303,"column":5}},"104":{"start":{"line":302,"column":8},"end":{"line":302,"column":70}},"105":{"start":{"line":305,"column":4},"end":{"line":305,"column":38}},"106":{"start":{"line":316,"column":0},"end":{"line":323,"column":2}},"107":{"start":{"line":317,"column":4},"end":{"line":317,"column":20}},"108":{"start":{"line":318,"column":4},"end":{"line":320,"column":5}},"109":{"start":{"line":319,"column":8},"end":{"line":319,"column":72}},"110":{"start":{"line":322,"column":4},"end":{"line":322,"column":38}},"111":{"start":{"line":333,"column":0},"end":{"line":335,"column":2}},"112":{"start":{"line":334,"column":4},"end":{"line":334,"column":55}},"113":{"start":{"line":345,"column":0},"end":{"line":347,"column":2}},"114":{"start":{"line":346,"column":4},"end":{"line":346,"column":57}},"115":{"start":{"line":358,"column":0},"end":{"line":366,"column":2}},"116":{"start":{"line":361,"column":4},"end":{"line":365,"column":44}},"117":{"start":{"line":376,"column":0},"end":{"line":378,"column":2}},"118":{"start":{"line":377,"column":4},"end":{"line":377,"column":64}},"119":{"start":{"line":385,"column":0},"end":{"line":398,"column":2}},"120":{"start":{"line":386,"column":4},"end":{"line":386,"column":58}},"121":{"start":{"line":389,"column":4},"end":{"line":391,"column":5}},"122":{"start":{"line":390,"column":8},"end":{"line":390,"column":33}},"123":{"start":{"line":393,"column":4},"end":{"line":393,"column":23}},"124":{"start":{"line":395,"column":4},"end":{"line":395,"column":20}},"125":{"start":{"line":396,"column":4},"end":{"line":396,"column":27}},"126":{"start":{"line":397,"column":4},"end":{"line":397,"column":24}}},"branchMap":{"1":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":26}},{"start":{"line":43,"column":30},"end":{"line":43,"column":32}}]},"2":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":21},"end":{"line":83,"column":31}},{"start":{"line":83,"column":35},"end":{"line":83,"column":48}}]},"3":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":22},"end":{"line":86,"column":29}},{"start":{"line":86,"column":33},"end":{"line":86,"column":34}}]},"4":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":22},"end":{"line":87,"column":29}},{"start":{"line":87,"column":33},"end":{"line":87,"column":34}}]},"5":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":47},"end":{"line":88,"column":60}},{"start":{"line":88,"column":63},"end":{"line":88,"column":64}}]},"6":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":49},"end":{"line":89,"column":62}},{"start":{"line":89,"column":65},"end":{"line":89,"column":69}}]},"7":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"9":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":12}},{"start":{"line":134,"column":12},"end":{"line":134,"column":12}}]},"10":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":17},"end":{"line":141,"column":23}},{"start":{"line":141,"column":27},"end":{"line":141,"column":37}},{"start":{"line":141,"column":41},"end":{"line":141,"column":61}},{"start":{"line":141,"column":65},"end":{"line":141,"column":67}}]},"11":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":17},"end":{"line":142,"column":23}},{"start":{"line":142,"column":27},"end":{"line":142,"column":37}},{"start":{"line":142,"column":41},"end":{"line":142,"column":61}},{"start":{"line":142,"column":65},"end":{"line":142,"column":67}}]},"12":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"13":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"14":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"15":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":24},"end":{"line":166,"column":39}},{"start":{"line":166,"column":43},"end":{"line":166,"column":68}}]},"16":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":36},"end":{"line":167,"column":64}},{"start":{"line":167,"column":67},"end":{"line":167,"column":91}}]},"17":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"18":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":26}},{"start":{"line":170,"column":30},"end":{"line":170,"column":54}}]},"19":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":59},"end":{"line":171,"column":70}},{"start":{"line":171,"column":74},"end":{"line":171,"column":95}}]},"20":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":21},"end":{"line":175,"column":35}},{"start":{"line":175,"column":39},"end":{"line":175,"column":63}},{"start":{"line":175,"column":67},"end":{"line":175,"column":75}}]},"21":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":12}},{"start":{"line":177,"column":12},"end":{"line":177,"column":12}}]},"22":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":16},"end":{"line":182,"column":28}},{"start":{"line":182,"column":32},"end":{"line":182,"column":54}}]},"23":{"line":183,"type":"cond-expr","locations":[{"start":{"line":183,"column":27},"end":{"line":183,"column":31}},{"start":{"line":183,"column":34},"end":{"line":183,"column":35}}]},"24":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":27},"end":{"line":184,"column":31}},{"start":{"line":184,"column":34},"end":{"line":184,"column":35}}]},"25":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]},"26":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"27":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"28":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":8}},{"start":{"line":211,"column":8},"end":{"line":211,"column":8}}]},"29":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":12},"end":{"line":211,"column":27}},{"start":{"line":211,"column":31},"end":{"line":211,"column":45}}]},"30":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":8}},{"start":{"line":217,"column":8},"end":{"line":217,"column":8}}]},"31":{"line":222,"type":"cond-expr","locations":[{"start":{"line":222,"column":48},"end":{"line":222,"column":59}},{"start":{"line":222,"column":62},"end":{"line":222,"column":66}}]},"32":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":12},"end":{"line":255,"column":12}},{"start":{"line":255,"column":12},"end":{"line":255,"column":12}}]},"33":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":262,"column":8}},{"start":{"line":262,"column":8},"end":{"line":262,"column":8}}]},"34":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"35":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":11},"end":{"line":361,"column":28}},{"start":{"line":362,"column":12},"end":{"line":362,"column":39}},{"start":{"line":363,"column":13},"end":{"line":363,"column":16}},{"start":{"line":363,"column":20},"end":{"line":363,"column":46}},{"start":{"line":364,"column":12},"end":{"line":364,"column":39}},{"start":{"line":365,"column":12},"end":{"line":365,"column":43}}]}},"code":["var utils = require('../utils');","","/**"," * Tiled object group is a special layer that contains entities"," *"," * @class Objectlayer"," * @extends Phaser.Group"," * @constructor"," * @param map {Tilemap} The tilemap instance that this belongs to"," * @param group {Object} All the settings for the layer"," */","function Objectlayer(game, map, layer, index) {","    Phaser.Group.call(this, game, map);","","    this.index = index;","","    // Non-Tiled related properties","","    /**","     * The map instance this object group belongs to","     *","     * @property map","     * @type Tilemap","     */","    this.map = map;","","    /**","     * The const type of this object.","     *","     * @property type","     * @type Number","     * @default","     */","    this.type = Phaser.TILEMAPLAYER;","","    /**","     * The name of the group","     *","     * @property name","     * @type String","     * @default ''","     */","    this.name = layer.name || '';","","    // Tiled related properties","","    /**","     * The color of this group in the Tiled Editor,","     *","     * @property color","     * @type","     */","    this.color = layer.color;","","    /**","     * The user-defined properties of this group. Usually defined in the TiledEditor","     *","     * @property properties","     * @type Object","     */","    this.properties = utils.parseTiledProperties(layer.properties);","","    /**","     * The objects in this group that can be spawned","     *","     * @property objects","     * @type Array","     */","    this.objects = layer.objects;","","    for (var i = 0; i < this.objects.length; ++i) {","        utils.parseTiledProperties(this.objects[i].properties);","    }","","    /**","     * The Tiled type of tile layer, should always be 'objectgroup'","     *","     * @property layerType","     * @type String","     * @default 'objectgroup'","     * @readOnly","     */","    this.layerType = layer.type || 'objectgroup';","","    // translate some tiled properties to our inherited properties","    this.position.x = layer.x || 0;","    this.position.y = layer.y || 0;","    this.alpha = layer.opacity !== undefined ? layer.opacity : 1;","    this.visible = layer.visible !== undefined ? layer.visible : true;","","    // physics bodies in this layer","    this.bodies = [];","","    if (this.properties.batch) {","        this.container = this.addChild(new Phaser.SpriteBatch(game));","    }","    else {","        this.container = this;","    }","}","","Objectlayer.prototype = Object.create(Phaser.Group.prototype);","Objectlayer.prototype.constructor = Objectlayer;","","module.exports = Objectlayer;","","/**"," * Spawns all the entities associated with this layer, and properly sets their attributes"," *"," * @chainable"," * @param [physicsBodyType=Phaser.Physics.ARCADE] {number} The physics system to create stuff on."," * @param [spawnCallback] {function} A function to call for each object spawned."," * @return {Objectlayer} Returns itself."," */","Objectlayer.prototype.spawn = function (physicsBodyType, spawnCallback) {","    // we go through these backwards so that things that are higher in the","    // list of object gets rendered on top.","    for (var i = this.objects.length - 1; i >= 0; --i) {","        var o = this.objects[i];","        var props = o.properties;","        var set;","        // var interactive;","        var obj;","","        props.tileprops = {};","        props.animation = null;","","        var texture = props.texture;","        // gid means a sprite from a tileset texture","        if (o.gid) {","            set = this.map.getTileset(o.gid);","","            // if the tileset exists","            if (set) {","                props.texture = set.getTileTexture(o.gid);","                props.tileprops = set.getTileProperties(o.gid);","                props.animation = set.getTileAnimations(o.gid);","            }","        }","","        o.name = o.name || props.name || props.tileprops.name || '';","        o.type = o.type || props.type || props.tileprops.type || '';","","        // a manually specified string texture","        if (typeof texture === 'string') {","            props.texture = this.game.cache.getPixiTexture(texture);","        }","","        if (typeof props.tileprops.texture === 'string') {","            props.texture = this.game.cache.getPixiTexture(props.tileprops.texture);","        }","","        // when props.texture is empty it will just create an empty sprite.","        obj = this.game.add.sprite(o.x, o.y, props.texture, null, this.container);","","        // setup the properties of the sprite","        obj.name = o.name;","        obj.rotation = o.rotation;","        obj.objectType = o.type;","","        if (!props.texture) {","            obj.width = o.width;","            obj.height = o.height;","        }","","        var blendMode = props.blendMode || this.properties.blendMode;","        obj.blendMode = blendMode ? Phaser.blendModes[blendMode] : Phaser.blendModes.NORMAL;","","        // create physics if this body is physical.","        if (props.collides || props.tileprops.collides) {","            this.game.physics.enable(obj, physicsBodyType, props.debug || props.tileprops.debug);","","            obj.body.setRectangle(obj.width, obj.height, obj.width / 2, -obj.height / 2, obj.rotation);","","            obj.body[props.bodyType || props.tileprops.bodyType || 'static'] = true;","","            if (props.sensor) {","                obj.body.data.shapes[0].sensor = true;","            }","        }","","        var a = props.anchor || props.tileprops.anchor;","        obj.anchor.x = a ? a[0] : 0;","        obj.anchor.y = a ? a[1] : 1;","","        if (props.tileprops.flippedX) {","            obj.scale.x = -1;","            obj.position.x += Math.abs(obj.width);","        }","","        if (props.tileprops.flippedY) {","            obj.scale.y = -1;","            obj.position.y += Math.abs(obj.height);","        }","","        // from Tiled Editor:","        // https://github.com/bjorn/tiled/blob/b059a13b2864ea029fb741a90780d31cf5b67043/src/libtiled/maprenderer.cpp#L135-L145","        if (props.tileprops.flippedAD) {","            obj.rotation = this.game.math.degToRad(90);","            obj.scale.x *= -1;","","            var sx = obj.scale.x;","            obj.scale.x = obj.scale.y;","            obj.scale.y = sx;","","            var halfDiff = Math.abs(o.height / 2) - Math.abs(o.width / 2);","            obj.position.y += halfDiff;","            obj.position.x += halfDiff;","        }","","        if (props.animation && obj.animations) {","            obj.animations.copyFrameData(props.animation.data, 0);","            obj.animations.add('tile', null, props.animation.rate, true).play();","            // obj.animations.play(props.animation || props.tileprops.animation);","        }","","        if (typeof o.rotation === 'number') {","            obj.rotation = o.rotation;","        }","","        // visible was recently added to Tiled, default old versions to true","        obj.visible = o.visible !== undefined ? !!o.visible : true;","","        // if (this.map.orientation === 'isometric') {","        //     var toTileX = o.x / this.map.tileWidth,","        //         toTileY = o.y / this.map.tileWidth;","","        //     //This cannot be the simplest form of this...","        //     o.x = (toTileX * this.map.tileWidth) - ((toTileY - 1) * (this.map.tileWidth / 2));","        //     o.y = (toTileY * this.map.tileWidth / 2) + (toTileX * this.map.tileWidth);","        // }","","        // interactive = this._getInteractive(set, props);","","        // //pass through all events","        // if (interactive) {","        //     obj.interactive = interactive;","","        //     obj.click = this.onObjectEvent.bind(this, 'click', obj);","        //     obj.mousedown = this.onObjectEvent.bind(this, 'mousedown', obj);","        //     obj.mouseup = this.onObjectEvent.bind(this, 'mouseup', obj);","        //     obj.mousemove = this.onObjectEvent.bind(this, 'mousemove', obj);","        //     obj.mouseout = this.onObjectEvent.bind(this, 'mouseout', obj);","        //     obj.mouseover = this.onObjectEvent.bind(this, 'mouseover', obj);","        //     obj.mouseupoutside = this.onObjectEvent.bind(this, 'mouseupoutside', obj);","        // }","","        // set custom properties","        obj.properties = {};","        for (var t in props.tileprops) {","            obj.properties[t] = props.tileprops[t];","        }","","        for (var k in props) {","            if (k !== 'tileprops') {","                obj.properties[k] = props[k];","            }","        }","","        obj._objIndex = i;","","        if (spawnCallback) {","            spawnCallback(obj);","        }","    }","","    return this;","};","","Objectlayer.prototype.getObject = function (name) {","    for (var i = 0; i < this.objects.length; ++i) {","        if (this.objects[i].name === name) {","            return this.objects[i];","        }","    }","};","","/**"," * Called internally whenever an event happens on an object, used to echo to the map."," *"," * @method onObjectEvent"," * @param eventName {String} The name of the event"," * @param obj {Container|Sprite} The object the event happened to"," * @param data {mixed} The event data that was passed along"," * @private"," */","Objectlayer.prototype.onObjectEvent = function (eventName, obj, data) {","    this.map.onObjectEvent(eventName, obj, data);","};","","/**"," * Creates a polygon from the vertices in a polygon Tiled property"," *"," * @method _getPolygon"," * @param obj {Object} The polygon Tiled object"," * @return {Polygon} The polygon created"," * @private"," */","Objectlayer.prototype._getPolygon = function (o) {","    var points = [];","    for (var i = 0, il = o.polygon.length; i < il; ++i) {","        points.push(new Phaser.Point(o.polygon[i].x, o.polygon[i].y));","    }","","    return new Phaser.Polygon(points);","};","","/**"," * Creates a polyline from the vertices in a polyline Tiled property"," *"," * @method _getPolyline"," * @param obj {Object} The polyline Tiled object"," * @return {Polygon} The polyline created"," * @private"," */","Objectlayer.prototype._getPolyline = function (o) {","    var points = [];","    for (var i = 0, il = o.polyline.length; i < il; ++i) {","        points.push(new Phaser.Point(o.polyline[i].x, o.polyline[i].y));","    }","","    return new Phaser.Polygon(points);","};","","/**"," * Creates a ellipse from the vertices in a ellipse Tiled property"," *"," * @method _getEllipse"," * @param obj {Object} The ellipse Tiled object"," * @return {Ellipse} The ellipse created"," * @private"," */","Objectlayer.prototype._getEllipse = function (o) {","    return new Phaser.Ellipse(0, 0, o.width, o.height);","};","","/**"," * Creates a rectangle from the vertices in a rectangle Tiled property"," *"," * @method _getRectangle"," * @param obj {Object} The rectangle Tiled object"," * @return {Rectangle} The rectangle created"," * @private"," */","Objectlayer.prototype._getRectangle = function (o) {","    return new Phaser.Rectangle(0, 0, o.width, o.height);","};","","/**"," * Checks if an object should be marked as interactive"," *"," * @method _getInteractive"," * @param set {Tileset} The tileset for the object"," * @param props {Object} The Tiled properties object"," * @return {Boolean} Whether or not the item is interactive"," * @private"," */","Objectlayer.prototype._getInteractive = function (set, props) {","    // TODO: This is wrong, if 'false' is set on a lower level a higher level will override","    // first check the lowest level value (on the tile iteself)","    return props.interactive || // obj interactive","            props.tileprops.interactive || // tile object interactive","            (set && set.properties.interactive) || // tileset interactive","            this.properties.interactive || // layer interactive","            this.map.properties.interactive; // map interactive","};","","/**"," * Despawns all the sprites associated with this layer"," *"," * @method despawn"," * @param destroy {Boolean} Should we destroy the children as well?"," * @return {Objectlayer} Returns itself."," * @chainable"," */","Objectlayer.prototype.despawn = function (destroy) {","    return Phaser.Group.prototype.removeAll.call(this, destroy);","};","","/**"," * Destroys the group completely"," *"," * @method destroy"," */","Objectlayer.prototype.destroy = function () {","    Phaser.Group.prototype.destroy.apply(this, arguments);","","    // destroy bodies","    for (var i = 0; i < this.bodies.length; ++i) {","        this.bodies[i].destroy();","    }","","    this.bodies = null;","","    this.map = null;","    this.properties = null;","    this.objects = null;","};",""],"l":{"1":2,"12":1,"13":0,"15":0,"25":0,"34":0,"43":0,"53":0,"61":0,"69":0,"71":0,"72":0,"83":0,"86":0,"87":0,"88":0,"89":0,"92":0,"94":0,"95":0,"98":0,"102":2,"103":0,"105":0,"115":0,"118":0,"119":0,"120":0,"121":0,"123":0,"125":0,"126":0,"128":0,"130":0,"131":0,"134":0,"135":0,"136":0,"137":0,"141":0,"142":0,"145":0,"146":0,"149":0,"150":0,"154":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"166":0,"167":0,"170":0,"171":0,"173":0,"175":0,"177":0,"178":0,"182":0,"183":0,"184":0,"186":0,"187":0,"188":0,"191":0,"192":0,"193":0,"198":0,"199":0,"200":0,"202":0,"203":0,"204":0,"206":0,"207":0,"208":0,"211":0,"212":0,"213":0,"217":0,"218":0,"222":0,"249":0,"250":0,"251":0,"254":0,"255":0,"256":0,"260":0,"262":0,"263":0,"267":0,"270":0,"271":0,"272":0,"273":0,"287":0,"288":0,"299":0,"300":0,"301":0,"302":0,"305":0,"316":0,"317":0,"318":0,"319":0,"322":0,"333":0,"334":0,"345":0,"346":0,"358":0,"361":0,"376":0,"377":0,"385":0,"386":0,"389":0,"390":0,"393":0,"395":0,"396":0,"397":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tile.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":2,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0,0,0,0,0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0],"26":[0,0,0,0],"27":[0,0,0,0],"28":[0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"Tile","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}}},"2":{"name":"(anonymous_2)","line":164,"loc":{"start":{"line":164,"column":31},"end":{"line":164,"column":47}}},"3":{"name":"(anonymous_3)","line":180,"loc":{"start":{"line":180,"column":28},"end":{"line":180,"column":59}}},"4":{"name":"(anonymous_4)","line":214,"loc":{"start":{"line":214,"column":38},"end":{"line":214,"column":67}}},"5":{"name":"(anonymous_5)","line":226,"loc":{"start":{"line":226,"column":25},"end":{"line":226,"column":37}}},"6":{"name":"(anonymous_6)","line":249,"loc":{"start":{"line":249,"column":30},"end":{"line":249,"column":63}}},"7":{"name":"(anonymous_7)","line":268,"loc":{"start":{"line":268,"column":32},"end":{"line":268,"column":44}}},"8":{"name":"(anonymous_8)","line":290,"loc":{"start":{"line":290,"column":31},"end":{"line":290,"column":58}}},"9":{"name":"(anonymous_9)","line":319,"loc":{"start":{"line":319,"column":22},"end":{"line":319,"column":38}}},"10":{"name":"(anonymous_10)","line":336,"loc":{"start":{"line":336,"column":9},"end":{"line":336,"column":21}}},"11":{"name":"(anonymous_11)","line":339,"loc":{"start":{"line":339,"column":9},"end":{"line":339,"column":24}}},"12":{"name":"(anonymous_12)","line":345,"loc":{"start":{"line":345,"column":9},"end":{"line":345,"column":21}}},"13":{"name":"(anonymous_13)","line":348,"loc":{"start":{"line":348,"column":9},"end":{"line":348,"column":24}}},"14":{"name":"(anonymous_14)","line":360,"loc":{"start":{"line":360,"column":9},"end":{"line":360,"column":21}}},"15":{"name":"(anonymous_15)","line":373,"loc":{"start":{"line":373,"column":9},"end":{"line":373,"column":21}}},"16":{"name":"(anonymous_16)","line":386,"loc":{"start":{"line":386,"column":9},"end":{"line":386,"column":21}}},"17":{"name":"(anonymous_17)","line":399,"loc":{"start":{"line":399,"column":9},"end":{"line":399,"column":21}}},"18":{"name":"(anonymous_18)","line":412,"loc":{"start":{"line":412,"column":9},"end":{"line":412,"column":21}}},"19":{"name":"(anonymous_19)","line":425,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":21}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":149,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":14,"column":6}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":34}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":27}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":47}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":51}},"8":{"start":{"line":41,"column":4},"end":{"line":41,"column":52}},"9":{"start":{"line":46,"column":4},"end":{"line":46,"column":56}},"10":{"start":{"line":51,"column":4},"end":{"line":51,"column":25}},"11":{"start":{"line":56,"column":4},"end":{"line":56,"column":25}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":28}},"13":{"start":{"line":66,"column":4},"end":{"line":66,"column":26}},"14":{"start":{"line":71,"column":4},"end":{"line":71,"column":27}},"15":{"start":{"line":77,"column":4},"end":{"line":78,"column":74}},"16":{"start":{"line":84,"column":4},"end":{"line":85,"column":75}},"17":{"start":{"line":91,"column":4},"end":{"line":92,"column":72}},"18":{"start":{"line":98,"column":4},"end":{"line":99,"column":74}},"19":{"start":{"line":105,"column":4},"end":{"line":105,"column":34}},"20":{"start":{"line":111,"column":4},"end":{"line":111,"column":41}},"21":{"start":{"line":114,"column":4},"end":{"line":114,"column":53}},"22":{"start":{"line":115,"column":4},"end":{"line":118,"column":5}},"23":{"start":{"line":116,"column":8},"end":{"line":116,"column":56}},"24":{"start":{"line":117,"column":8},"end":{"line":117,"column":70}},"25":{"start":{"line":121,"column":4},"end":{"line":121,"column":76}},"26":{"start":{"line":122,"column":4},"end":{"line":122,"column":89}},"27":{"start":{"line":125,"column":4},"end":{"line":128,"column":5}},"28":{"start":{"line":126,"column":8},"end":{"line":126,"column":26}},"29":{"start":{"line":127,"column":8},"end":{"line":127,"column":45}},"30":{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},"31":{"start":{"line":131,"column":8},"end":{"line":131,"column":26}},"32":{"start":{"line":132,"column":8},"end":{"line":132,"column":46}},"33":{"start":{"line":137,"column":4},"end":{"line":148,"column":5}},"34":{"start":{"line":138,"column":8},"end":{"line":138,"column":52}},"35":{"start":{"line":139,"column":8},"end":{"line":139,"column":27}},"36":{"start":{"line":141,"column":8},"end":{"line":141,"column":30}},"37":{"start":{"line":142,"column":8},"end":{"line":142,"column":36}},"38":{"start":{"line":143,"column":8},"end":{"line":143,"column":26}},"39":{"start":{"line":145,"column":8},"end":{"line":145,"column":76}},"40":{"start":{"line":146,"column":8},"end":{"line":146,"column":36}},"41":{"start":{"line":147,"column":8},"end":{"line":147,"column":36}},"42":{"start":{"line":151,"column":0},"end":{"line":151,"column":56}},"43":{"start":{"line":152,"column":0},"end":{"line":152,"column":34}},"44":{"start":{"line":154,"column":0},"end":{"line":154,"column":22}},"45":{"start":{"line":164,"column":0},"end":{"line":168,"column":2}},"46":{"start":{"line":166,"column":4},"end":{"line":166,"column":86}},"47":{"start":{"line":180,"column":0},"end":{"line":204,"column":2}},"48":{"start":{"line":182,"column":4},"end":{"line":185,"column":5}},"49":{"start":{"line":184,"column":8},"end":{"line":184,"column":21}},"50":{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},"51":{"start":{"line":189,"column":8},"end":{"line":189,"column":21}},"52":{"start":{"line":192,"column":4},"end":{"line":195,"column":5}},"53":{"start":{"line":194,"column":8},"end":{"line":194,"column":21}},"54":{"start":{"line":197,"column":4},"end":{"line":200,"column":5}},"55":{"start":{"line":199,"column":8},"end":{"line":199,"column":21}},"56":{"start":{"line":202,"column":4},"end":{"line":202,"column":16}},"57":{"start":{"line":214,"column":0},"end":{"line":219,"column":2}},"58":{"start":{"line":216,"column":4},"end":{"line":216,"column":38}},"59":{"start":{"line":217,"column":4},"end":{"line":217,"column":44}},"60":{"start":{"line":226,"column":0},"end":{"line":238,"column":2}},"61":{"start":{"line":227,"column":4},"end":{"line":227,"column":59}},"62":{"start":{"line":229,"column":4},"end":{"line":229,"column":22}},"63":{"start":{"line":230,"column":4},"end":{"line":230,"column":24}},"64":{"start":{"line":231,"column":4},"end":{"line":231,"column":29}},"65":{"start":{"line":233,"column":4},"end":{"line":233,"column":27}},"66":{"start":{"line":235,"column":4},"end":{"line":235,"column":34}},"67":{"start":{"line":237,"column":4},"end":{"line":237,"column":41}},"68":{"start":{"line":249,"column":0},"end":{"line":261,"column":2}},"69":{"start":{"line":251,"column":4},"end":{"line":251,"column":28}},"70":{"start":{"line":252,"column":4},"end":{"line":252,"column":30}},"71":{"start":{"line":253,"column":4},"end":{"line":253,"column":24}},"72":{"start":{"line":254,"column":4},"end":{"line":254,"column":28}},"73":{"start":{"line":256,"column":4},"end":{"line":256,"column":25}},"74":{"start":{"line":257,"column":4},"end":{"line":257,"column":27}},"75":{"start":{"line":258,"column":4},"end":{"line":258,"column":22}},"76":{"start":{"line":259,"column":4},"end":{"line":259,"column":27}},"77":{"start":{"line":268,"column":0},"end":{"line":280,"column":2}},"78":{"start":{"line":270,"column":4},"end":{"line":270,"column":29}},"79":{"start":{"line":271,"column":4},"end":{"line":271,"column":30}},"80":{"start":{"line":272,"column":4},"end":{"line":272,"column":27}},"81":{"start":{"line":273,"column":4},"end":{"line":273,"column":29}},"82":{"start":{"line":275,"column":4},"end":{"line":275,"column":26}},"83":{"start":{"line":276,"column":4},"end":{"line":276,"column":27}},"84":{"start":{"line":277,"column":4},"end":{"line":277,"column":25}},"85":{"start":{"line":278,"column":4},"end":{"line":278,"column":28}},"86":{"start":{"line":290,"column":0},"end":{"line":311,"column":2}},"87":{"start":{"line":292,"column":4},"end":{"line":307,"column":5}},"88":{"start":{"line":295,"column":8},"end":{"line":296,"column":106}},"89":{"start":{"line":298,"column":9},"end":{"line":307,"column":5}},"90":{"start":{"line":301,"column":8},"end":{"line":301,"column":93}},"91":{"start":{"line":303,"column":9},"end":{"line":307,"column":5}},"92":{"start":{"line":306,"column":8},"end":{"line":306,"column":84}},"93":{"start":{"line":309,"column":4},"end":{"line":309,"column":17}},"94":{"start":{"line":319,"column":0},"end":{"line":333,"column":2}},"95":{"start":{"line":321,"column":4},"end":{"line":321,"column":28}},"96":{"start":{"line":322,"column":4},"end":{"line":322,"column":28}},"97":{"start":{"line":323,"column":4},"end":{"line":323,"column":38}},"98":{"start":{"line":325,"column":4},"end":{"line":325,"column":36}},"99":{"start":{"line":326,"column":4},"end":{"line":326,"column":40}},"100":{"start":{"line":327,"column":4},"end":{"line":327,"column":40}},"101":{"start":{"line":328,"column":4},"end":{"line":328,"column":42}},"102":{"start":{"line":330,"column":4},"end":{"line":330,"column":52}},"103":{"start":{"line":331,"column":4},"end":{"line":331,"column":66}},"104":{"start":{"line":335,"column":0},"end":{"line":342,"column":3}},"105":{"start":{"line":337,"column":8},"end":{"line":337,"column":31}},"106":{"start":{"line":340,"column":8},"end":{"line":340,"column":30}},"107":{"start":{"line":344,"column":0},"end":{"line":351,"column":3}},"108":{"start":{"line":346,"column":8},"end":{"line":346,"column":31}},"109":{"start":{"line":349,"column":8},"end":{"line":349,"column":30}},"110":{"start":{"line":358,"column":0},"end":{"line":364,"column":3}},"111":{"start":{"line":361,"column":8},"end":{"line":361,"column":93}},"112":{"start":{"line":371,"column":0},"end":{"line":377,"column":3}},"113":{"start":{"line":374,"column":8},"end":{"line":374,"column":119}},"114":{"start":{"line":384,"column":0},"end":{"line":390,"column":3}},"115":{"start":{"line":387,"column":8},"end":{"line":387,"column":27}},"116":{"start":{"line":397,"column":0},"end":{"line":403,"column":3}},"117":{"start":{"line":400,"column":8},"end":{"line":400,"column":40}},"118":{"start":{"line":410,"column":0},"end":{"line":416,"column":3}},"119":{"start":{"line":413,"column":8},"end":{"line":413,"column":27}},"120":{"start":{"line":423,"column":0},"end":{"line":429,"column":3}},"121":{"start":{"line":426,"column":8},"end":{"line":426,"column":41}}},"branchMap":{"1":{"line":77,"type":"cond-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":35}},{"start":{"line":78,"column":39},"end":{"line":78,"column":72}}]},"2":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":39},"end":{"line":78,"column":63}},{"start":{"line":78,"column":67},"end":{"line":78,"column":72}}]},"3":{"line":84,"type":"cond-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":36}},{"start":{"line":85,"column":40},"end":{"line":85,"column":73}}]},"4":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":40},"end":{"line":85,"column":64}},{"start":{"line":85,"column":68},"end":{"line":85,"column":73}}]},"5":{"line":91,"type":"cond-expr","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":33}},{"start":{"line":92,"column":37},"end":{"line":92,"column":70}}]},"6":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":37},"end":{"line":92,"column":61}},{"start":{"line":92,"column":65},"end":{"line":92,"column":70}}]},"7":{"line":98,"type":"cond-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":35}},{"start":{"line":99,"column":39},"end":{"line":99,"column":72}}]},"8":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":39},"end":{"line":99,"column":63}},{"start":{"line":99,"column":67},"end":{"line":99,"column":72}}]},"9":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"10":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":20},"end":{"line":121,"column":45}},{"start":{"line":121,"column":49},"end":{"line":121,"column":75}}]},"11":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":33},"end":{"line":122,"column":61}},{"start":{"line":122,"column":64},"end":{"line":122,"column":88}}]},"12":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"13":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"14":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"15":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":13},"end":{"line":166,"column":28}},{"start":{"line":166,"column":32},"end":{"line":166,"column":47}},{"start":{"line":166,"column":51},"end":{"line":166,"column":65}},{"start":{"line":166,"column":69},"end":{"line":166,"column":84}}]},"16":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"17":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"18":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"19":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"20":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"21":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":16}},{"start":{"line":292,"column":20},"end":{"line":292,"column":25}}]},"22":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":16},"end":{"line":295,"column":32}},{"start":{"line":295,"column":36},"end":{"line":295,"column":53}},{"start":{"line":295,"column":57},"end":{"line":295,"column":71}},{"start":{"line":295,"column":75},"end":{"line":295,"column":91}},{"start":{"line":296,"column":12},"end":{"line":296,"column":24}},{"start":{"line":296,"column":28},"end":{"line":296,"column":43}},{"start":{"line":296,"column":47},"end":{"line":296,"column":60}},{"start":{"line":296,"column":64},"end":{"line":296,"column":78}},{"start":{"line":296,"column":82},"end":{"line":296,"column":104}}]},"23":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":9},"end":{"line":298,"column":9}},{"start":{"line":298,"column":9},"end":{"line":298,"column":9}}]},"24":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":16},"end":{"line":301,"column":32}},{"start":{"line":301,"column":36},"end":{"line":301,"column":53}},{"start":{"line":301,"column":57},"end":{"line":301,"column":71}},{"start":{"line":301,"column":75},"end":{"line":301,"column":91}}]},"25":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":9},"end":{"line":303,"column":9}},{"start":{"line":303,"column":9},"end":{"line":303,"column":9}}]},"26":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":16},"end":{"line":306,"column":28}},{"start":{"line":306,"column":32},"end":{"line":306,"column":47}},{"start":{"line":306,"column":51},"end":{"line":306,"column":64}},{"start":{"line":306,"column":68},"end":{"line":306,"column":82}}]},"27":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":16},"end":{"line":361,"column":32}},{"start":{"line":361,"column":36},"end":{"line":361,"column":53}},{"start":{"line":361,"column":57},"end":{"line":361,"column":71}},{"start":{"line":361,"column":75},"end":{"line":361,"column":91}}]},"28":{"line":374,"type":"binary-expr","locations":[{"start":{"line":374,"column":16},"end":{"line":374,"column":32}},{"start":{"line":374,"column":36},"end":{"line":374,"column":53}},{"start":{"line":374,"column":57},"end":{"line":374,"column":71}},{"start":{"line":374,"column":75},"end":{"line":374,"column":91}},{"start":{"line":374,"column":95},"end":{"line":374,"column":117}}]}},"code":["/**"," * Base Tile implementation, a tile is a single tile in a tilemap layer"," *"," * @class Tile"," * @extends Phaser.Sprite"," * @constructor"," */","function Tile(game, x, y, tileId, tileset, layer) {","    Phaser.Sprite.call(this,","        game,","        (x * tileset.tileWidth) + tileset.tileoffset.x,","        (y * tileset.tileHeight) + tileset.tileoffset.y,","        tileset.getTileTexture(tileId)","    );","","    this.type = Phaser.TILESPRITE;","","    /**","    * @property {object} layer - The layer in the Tilemap data that this tile belongs to.","    */","    this.layer = layer;","","    /**","    * @property {object} tileset - The tileset that this tile's texture is from.","    */","    this.tileset = tileset;","","    /**","    * @property {Phaser.Point} tilePosition - The position of the tile in 'tile coords'","    */","    this.tilePosition = new Phaser.Point(x, y);","","    /**","    * @property {number} centerX - The center of the tile.","    */","    this.centerX = Math.abs(tileset.tileWidth / 2);","","    /**","    * @property {number} centerY - The height of the tile in pixels.","    */","    this.centerY = Math.abs(tileset.tileHeight / 2);","","    /**","    * @property {object} properties - Tile specific properties.","    */","    this.properties = tileset.getTileProperties(tileId);","","    /**","    * @property {boolean} scanned - Has this tile been walked / turned into a poly?","    */","    this.scanned = false;","","    /**","    * @property {boolean} faceTop - Is the top of this tile an interesting edge?","    */","    this.faceTop = false;","","    /**","    * @property {boolean} faceBottom - Is the bottom of this tile an interesting edge?","    */","    this.faceBottom = false;","","    /**","    * @property {boolean} faceLeft - Is the left of this tile an interesting edge?","    */","    this.faceLeft = false;","","    /**","    * @property {boolean} faceRight - Is the right of this tile an interesting edge?","    */","    this.faceRight = false;","","    /**","    * @property {boolean} collideLeft - Indicating collide with any object on the left.","    * @default","    */","    this.collideLeft = this.properties.collideLeft !== undefined ?","        this.properties.collideLeft : (this.properties.collides || false);","","    /**","    * @property {boolean} collideRight - Indicating collide with any object on the right.","    * @default","    */","    this.collideRight = this.properties.collideRight !== undefined ?","        this.properties.collideRight : (this.properties.collides || false);","","    /**","    * @property {boolean} collideUp - Indicating collide with any object on the top.","    * @default","    */","    this.collideUp = this.properties.collideUp !== undefined ?","        this.properties.collideUp : (this.properties.collides || false);","","    /**","    * @property {boolean} collideDown - Indicating collide with any object on the bottom.","    * @default","    */","    this.collideDown = this.properties.collideDown !== undefined ?","        this.properties.collideDown : (this.properties.collides || false);","","    /**","    * @property {function} collisionCallback - Tile collision callback.","    * @default","    */","    this.collisionCallback = null;","","    /**","    * @property {object} collisionCallbackContext - The context in which the collision callback will be called.","    * @default","    */","    this.collisionCallbackContext = this;","","    // load animation data","    var animData = tileset.getTileAnimations(tileId);","    if (animData) {","        this.animations.copyFrameData(animData.data, 0);","        this.animations.add('tile', null, animData.rate, true).play();","    }","","    // set the blend mode","    var blendMode = this.properties.blendMode || layer.properties.blendMode;","    this.blendMode = blendMode ? Phaser.blendModes[blendMode] : Phaser.blendModes.NORMAL;","","    // setup the flipped states","    if (this.properties.flippedX) {","        this.scale.x = -1;","        this.position.x += tileset.tileWidth;","    }","","    if (this.properties.flippedY) {","        this.scale.y = -1;","        this.position.y += tileset.tileHeight;","    }","","    // from Tiled Editor:","    // https://github.com/bjorn/tiled/blob/b059a13b2864ea029fb741a90780d31cf5b67043/src/libtiled/maprenderer.cpp#L135-L145","    if (this.properties.flippedAD) {","        this.rotation = this.game.math.degToRad(90);","        this.scale.x *= -1;","","        var sx = this.scale.x;","        this.scale.x = this.scale.y;","        this.scale.y = sx;","","        var halfDiff = Math.abs(this.height / 2) - Math.abs(this.width / 2);","        this.position.y += halfDiff;","        this.position.x += halfDiff;","    }","}","","Tile.prototype = Object.create(Phaser.Sprite.prototype);","Tile.prototype.constructor = Tile;","","module.exports = Tile;","","/**","* Check if the given x and y world coordinates are within this Tile.","*","* @method Phaser.Tile#containsPoint","* @param {number} x - The x coordinate to test.","* @param {number} y - The y coordinate to test.","* @return {boolean} True if the coordinates are within this Tile, otherwise false.","*/","Tile.prototype.containsPoint = function (x, y) {","","    return !(x < this.worldX || y < this.worldY || x > this.right || y > this.bottom);","","};","","/**","* Check for intersection with this tile.","*","* @method Phaser.Tile#intersects","* @param {number} x - The x axis in pixels.","* @param {number} y - The y axis in pixels.","* @param {number} right - The right point.","* @param {number} bottom - The bottom point.","* @return {boolean} True if the coordinates are within this Tile, otherwise false.","*/","Tile.prototype.intersects = function (x, y, right, bottom) {","","    if (right <= this.worldX)","    {","        return false;","    }","","    if (bottom <= this.worldY)","    {","        return false;","    }","","    if (x >= this.worldX + this.width)","    {","        return false;","    }","","    if (y >= this.worldY + this.height)","    {","        return false;","    }","","    return true;","","};","","/**","* Set a callback to be called when this tile is hit by an object.","* The callback must true true for collision processing to take place.","*","* @method Phaser.Tile#setCollisionCallback","* @param {function} callback - Callback function.","* @param {object} context - Callback will be called within this context.","*/","Tile.prototype.setCollisionCallback = function (callback, context) {","","    this.collisionCallback = callback;","    this.collisionCallbackContext = context;","","};","","/**","* Clean up memory.","*","* @method Phaser.Tile#destroy","*/","Tile.prototype.destroy = function () {","    Phaser.Sprite.prototype.destroy.apply(this, arguments);","","    this.layer = null;","    this.tileset = null;","    this.tilePosition = null;","","    this.properties = null;","","    this.collisionCallback = null;","","    this.collisionCallbackContext = null;","};","","/**","* Sets the collision flags for each side of this tile and updates the interesting faces list.","*","* @method Phaser.Tile#setCollision","* @param {boolean} left - Indicating collide with any object on the left.","* @param {boolean} right - Indicating collide with any object on the right.","* @param {boolean} up - Indicating collide with any object on the top.","* @param {boolean} down - Indicating collide with any object on the bottom.","*/","Tile.prototype.setCollision = function (left, right, up, down) {","","    this.collideLeft = left;","    this.collideRight = right;","    this.collideUp = up;","    this.collideDown = down;","","    this.faceLeft = left;","    this.faceRight = right;","    this.faceTop = up;","    this.faceBottom = down;","","};","","/**","* Reset collision status flags.","*","* @method Phaser.Tile#resetCollision","*/","Tile.prototype.resetCollision = function () {","","    this.collideLeft = false;","    this.collideRight = false;","    this.collideUp = false;","    this.collideDown = false;","","    this.faceLeft = false;","    this.faceRight = false;","    this.faceTop = false;","    this.faceBottom = false;","","};","","/**","* Is this tile interesting?","*","* @method Phaser.Tile#isInteresting","* @param {boolean} collides - If true will check any collides value.","* @param {boolean} faces - If true will check any face value.","* @return {boolean} True if the Tile is interesting, otherwise false.","*/","Tile.prototype.isInteresting = function (collides, faces) {","","    if (collides && faces)","    {","        //  Does this tile have any collide flags OR interesting face?","        return (this.collideLeft || this.collideRight || this.collideUp || this.collideDown ||","            this.faceTop || this.faceBottom || this.faceLeft || this.faceRight || this.collisionCallback);","    }","    else if (collides)","    {","        //  Does this tile collide?","        return (this.collideLeft || this.collideRight || this.collideUp || this.collideDown);","    }","    else if (faces)","    {","        //  Does this tile have an interesting face?","        return (this.faceTop || this.faceBottom || this.faceLeft || this.faceRight);","    }","","    return false;","","};","","/**","* Copies the tile data and properties from the given tile to this tile.","*","* @method Phaser.Tile#copy","* @param {Phaser.Tile} tile - The tile to copy from.","*/","Tile.prototype.copy = function (tile) {","","    this.index = tile.index;","    this.alpha = tile.alpha;","    this.properties = tile.properties;","","    this.collideUp = tile.collideUp;","    this.collideDown = tile.collideDown;","    this.collideLeft = tile.collideLeft;","    this.collideRight = tile.collideRight;","","    this.collisionCallback = tile.collisionCallback;","    this.collisionCallbackContext = tile.collisionCallbackContext;","","};","","Object.defineProperty(Tile.prototype, 'worldX', {","    get: function () {","        return this.position.x;","    },","    set: function (val) {","        this.position.x = val;","    }","});","","Object.defineProperty(Tile.prototype, 'worldY', {","    get: function () {","        return this.position.y;","    },","    set: function (val) {","        this.position.y = val;","    }","});","","/**","* @name Phaser.Tile#collides","* @property {boolean} collides - True if this tile can collide on any of its faces.","* @readonly","*/","Object.defineProperty(Tile.prototype, 'collides', {","","    get: function () {","        return (this.collideLeft || this.collideRight || this.collideUp || this.collideDown);","    }","","});","","/**","* @name Phaser.Tile#canCollide","* @property {boolean} canCollide - True if this tile can collide on any of its faces or has a collision callback set.","* @readonly","*/","Object.defineProperty(Tile.prototype, 'canCollide', {","","    get: function () {","        return (this.collideLeft || this.collideRight || this.collideUp || this.collideDown || this.collisionCallback);","    }","","});","","/**","* @name Phaser.Tile#left","* @property {number} left - The x value in pixels.","* @readonly","*/","Object.defineProperty(Tile.prototype, 'left', {","","    get: function () {","        return this.worldX;","    }","","});","","/**","* @name Phaser.Tile#right","* @property {number} right - The sum of the x and width properties.","* @readonly","*/","Object.defineProperty(Tile.prototype, 'right', {","","    get: function () {","        return this.worldX + this.width;","    }","","});","","/**","* @name Phaser.Tile#top","* @property {number} top - The y value.","* @readonly","*/","Object.defineProperty(Tile.prototype, 'top', {","","    get: function () {","        return this.worldY;","    }","","});","","/**","* @name Phaser.Tile#bottom","* @property {number} bottom - The sum of the y and height properties.","* @readonly","*/","Object.defineProperty(Tile.prototype, 'bottom', {","","    get: function () {","        return this.worldY + this.height;","    }","","});",""],"l":{"8":1,"9":0,"16":0,"21":0,"26":0,"31":0,"36":0,"41":0,"46":0,"51":0,"56":0,"61":0,"66":0,"71":0,"77":0,"84":0,"91":0,"98":0,"105":0,"111":0,"114":0,"115":0,"116":0,"117":0,"121":0,"122":0,"125":0,"126":0,"127":0,"130":0,"131":0,"132":0,"137":0,"138":0,"139":0,"141":0,"142":0,"143":0,"145":0,"146":0,"147":0,"151":2,"152":0,"154":0,"164":0,"166":0,"180":0,"182":0,"184":0,"187":0,"189":0,"192":0,"194":0,"197":0,"199":0,"202":0,"214":0,"216":0,"217":0,"226":0,"227":0,"229":0,"230":0,"231":0,"233":0,"235":0,"237":0,"249":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"258":0,"259":0,"268":0,"270":0,"271":0,"272":0,"273":0,"275":0,"276":0,"277":0,"278":0,"290":0,"292":0,"295":0,"298":0,"301":0,"303":0,"306":0,"309":0,"319":0,"321":0,"322":0,"323":0,"325":0,"326":0,"327":0,"328":0,"330":0,"331":0,"335":0,"337":0,"340":0,"344":0,"346":0,"349":0,"358":0,"361":0,"371":0,"374":0,"384":0,"387":0,"397":0,"400":0,"410":0,"413":0,"423":0,"426":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tilelayer.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tilelayer.js","s":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":4,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"Tilelayer","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":44}}},"2":{"name":"(anonymous_2)","line":194,"loc":{"start":{"line":194,"column":38},"end":{"line":194,"column":50}}},"3":{"name":"(anonymous_3)","line":219,"loc":{"start":{"line":219,"column":34},"end":{"line":219,"column":46}}},"4":{"name":"(anonymous_4)","line":242,"loc":{"start":{"line":242,"column":33},"end":{"line":242,"column":45}}},"5":{"name":"(anonymous_5)","line":281,"loc":{"start":{"line":281,"column":33},"end":{"line":281,"column":45}}},"6":{"name":"(anonymous_6)","line":321,"loc":{"start":{"line":321,"column":32},"end":{"line":321,"column":44}}},"7":{"name":"(anonymous_7)","line":334,"loc":{"start":{"line":334,"column":33},"end":{"line":334,"column":45}}},"8":{"name":"(anonymous_8)","line":344,"loc":{"start":{"line":344,"column":32},"end":{"line":344,"column":48}}},"9":{"name":"(anonymous_9)","line":356,"loc":{"start":{"line":356,"column":32},"end":{"line":356,"column":48}}},"10":{"name":"(anonymous_10)","line":363,"loc":{"start":{"line":363,"column":34},"end":{"line":363,"column":46}}},"11":{"name":"(anonymous_11)","line":374,"loc":{"start":{"line":374,"column":33},"end":{"line":374,"column":72}}},"12":{"name":"(anonymous_12)","line":459,"loc":{"start":{"line":459,"column":37},"end":{"line":459,"column":87}}},"13":{"name":"(anonymous_13)","line":532,"loc":{"start":{"line":532,"column":32},"end":{"line":532,"column":44}}},"14":{"name":"(anonymous_14)","line":615,"loc":{"start":{"line":615,"column":38},"end":{"line":615,"column":91}}},"15":{"name":"(anonymous_15)","line":663,"loc":{"start":{"line":663,"column":31},"end":{"line":663,"column":89}}},"16":{"name":"(anonymous_16)","line":713,"loc":{"start":{"line":713,"column":30},"end":{"line":713,"column":46}}},"17":{"name":"(anonymous_17)","line":724,"loc":{"start":{"line":724,"column":34},"end":{"line":724,"column":54}}},"18":{"name":"(anonymous_18)","line":749,"loc":{"start":{"line":749,"column":35},"end":{"line":749,"column":55}}},"19":{"name":"(anonymous_19)","line":776,"loc":{"start":{"line":776,"column":32},"end":{"line":776,"column":52}}},"20":{"name":"(anonymous_20)","line":801,"loc":{"start":{"line":801,"column":34},"end":{"line":801,"column":54}}},"21":{"name":"(anonymous_21)","line":826,"loc":{"start":{"line":826,"column":30},"end":{"line":826,"column":42}}},"22":{"name":"(anonymous_22)","line":861,"loc":{"start":{"line":861,"column":9},"end":{"line":861,"column":21}}},"23":{"name":"(anonymous_23)","line":864,"loc":{"start":{"line":864,"column":9},"end":{"line":864,"column":26}}},"24":{"name":"(anonymous_24)","line":873,"loc":{"start":{"line":873,"column":9},"end":{"line":873,"column":21}}},"25":{"name":"(anonymous_25)","line":876,"loc":{"start":{"line":876,"column":9},"end":{"line":876,"column":26}}},"26":{"name":"(anonymous_26)","line":885,"loc":{"start":{"line":885,"column":9},"end":{"line":885,"column":21}}},"27":{"name":"(anonymous_27)","line":891,"loc":{"start":{"line":891,"column":9},"end":{"line":891,"column":21}}},"28":{"name":"(anonymous_28)","line":902,"loc":{"start":{"line":902,"column":9},"end":{"line":902,"column":21}}},"29":{"name":"(anonymous_29)","line":906,"loc":{"start":{"line":906,"column":9},"end":{"line":906,"column":26}}},"30":{"name":"(anonymous_30)","line":922,"loc":{"start":{"line":922,"column":9},"end":{"line":922,"column":21}}},"31":{"name":"(anonymous_31)","line":926,"loc":{"start":{"line":926,"column":9},"end":{"line":926,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":23,"column":0},"end":{"line":187,"column":1}},"3":{"start":{"line":24,"column":4},"end":{"line":24,"column":39}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"5":{"start":{"line":36,"column":4},"end":{"line":36,"column":19}},"6":{"start":{"line":45,"column":4},"end":{"line":45,"column":36}},"7":{"start":{"line":54,"column":4},"end":{"line":54,"column":31}},"8":{"start":{"line":60,"column":4},"end":{"line":60,"column":47}},"9":{"start":{"line":68,"column":4},"end":{"line":68,"column":20}},"10":{"start":{"line":80,"column":4},"end":{"line":80,"column":47}},"11":{"start":{"line":91,"column":4},"end":{"line":91,"column":33}},"12":{"start":{"line":100,"column":4},"end":{"line":100,"column":70}},"13":{"start":{"line":108,"column":4},"end":{"line":108,"column":86}},"14":{"start":{"line":116,"column":4},"end":{"line":116,"column":67}},"15":{"start":{"line":126,"column":4},"end":{"line":126,"column":47}},"16":{"start":{"line":133,"column":4},"end":{"line":133,"column":25}},"17":{"start":{"line":136,"column":4},"end":{"line":136,"column":26}},"18":{"start":{"line":137,"column":4},"end":{"line":137,"column":26}},"19":{"start":{"line":138,"column":4},"end":{"line":138,"column":65}},"20":{"start":{"line":139,"column":4},"end":{"line":139,"column":70}},"21":{"start":{"line":142,"column":4},"end":{"line":142,"column":21}},"22":{"start":{"line":145,"column":4},"end":{"line":145,"column":78}},"23":{"start":{"line":146,"column":4},"end":{"line":146,"column":38}},"24":{"start":{"line":147,"column":4},"end":{"line":147,"column":43}},"25":{"start":{"line":148,"column":4},"end":{"line":148,"column":46}},"26":{"start":{"line":154,"column":4},"end":{"line":161,"column":6}},"27":{"start":{"line":164,"column":4},"end":{"line":164,"column":22}},"28":{"start":{"line":167,"column":4},"end":{"line":172,"column":5}},"29":{"start":{"line":168,"column":8},"end":{"line":168,"column":69}},"30":{"start":{"line":171,"column":8},"end":{"line":171,"column":30}},"31":{"start":{"line":174,"column":4},"end":{"line":183,"column":5}},"32":{"start":{"line":175,"column":8},"end":{"line":175,"column":32}},"33":{"start":{"line":176,"column":8},"end":{"line":176,"column":38}},"34":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"35":{"start":{"line":179,"column":12},"end":{"line":179,"column":31}},"36":{"start":{"line":182,"column":8},"end":{"line":182,"column":32}},"37":{"start":{"line":185,"column":4},"end":{"line":185,"column":24}},"38":{"start":{"line":186,"column":4},"end":{"line":186,"column":31}},"39":{"start":{"line":189,"column":0},"end":{"line":189,"column":60}},"40":{"start":{"line":190,"column":0},"end":{"line":190,"column":44}},"41":{"start":{"line":192,"column":0},"end":{"line":192,"column":27}},"42":{"start":{"line":194,"column":0},"end":{"line":212,"column":2}},"43":{"start":{"line":196,"column":4},"end":{"line":196,"column":122}},"44":{"start":{"line":197,"column":4},"end":{"line":197,"column":123}},"45":{"start":{"line":200,"column":4},"end":{"line":200,"column":107}},"46":{"start":{"line":203,"column":4},"end":{"line":204,"column":72}},"47":{"start":{"line":207,"column":4},"end":{"line":207,"column":110}},"48":{"start":{"line":210,"column":4},"end":{"line":211,"column":73}},"49":{"start":{"line":219,"column":0},"end":{"line":235,"column":2}},"50":{"start":{"line":220,"column":4},"end":{"line":220,"column":77}},"51":{"start":{"line":222,"column":4},"end":{"line":222,"column":36}},"52":{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},"53":{"start":{"line":225,"column":8},"end":{"line":225,"column":42}},"54":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"55":{"start":{"line":229,"column":8},"end":{"line":229,"column":41}},"56":{"start":{"line":232,"column":4},"end":{"line":234,"column":5}},"57":{"start":{"line":233,"column":8},"end":{"line":233,"column":68}},"58":{"start":{"line":242,"column":0},"end":{"line":273,"column":2}},"59":{"start":{"line":243,"column":4},"end":{"line":243,"column":49}},"60":{"start":{"line":245,"column":4},"end":{"line":248,"column":5}},"61":{"start":{"line":246,"column":8},"end":{"line":246,"column":101}},"62":{"start":{"line":247,"column":8},"end":{"line":247,"column":101}},"63":{"start":{"line":251,"column":4},"end":{"line":267,"column":5}},"64":{"start":{"line":253,"column":8},"end":{"line":253,"column":27}},"65":{"start":{"line":256,"column":8},"end":{"line":256,"column":31}},"66":{"start":{"line":261,"column":8},"end":{"line":261,"column":27}},"67":{"start":{"line":264,"column":8},"end":{"line":264,"column":26}},"68":{"start":{"line":266,"column":8},"end":{"line":266,"column":20}},"69":{"start":{"line":269,"column":4},"end":{"line":269,"column":38}},"70":{"start":{"line":270,"column":4},"end":{"line":270,"column":38}},"71":{"start":{"line":272,"column":4},"end":{"line":272,"column":21}},"72":{"start":{"line":281,"column":0},"end":{"line":313,"column":2}},"73":{"start":{"line":283,"column":4},"end":{"line":283,"column":22}},"74":{"start":{"line":285,"column":4},"end":{"line":285,"column":76}},"75":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"76":{"start":{"line":289,"column":8},"end":{"line":289,"column":48}},"77":{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},"78":{"start":{"line":294,"column":8},"end":{"line":294,"column":39}},"79":{"start":{"line":298,"column":4},"end":{"line":298,"column":100}},"80":{"start":{"line":301,"column":4},"end":{"line":301,"column":68}},"81":{"start":{"line":302,"column":4},"end":{"line":302,"column":69}},"82":{"start":{"line":306,"column":4},"end":{"line":310,"column":5}},"83":{"start":{"line":307,"column":8},"end":{"line":309,"column":9}},"84":{"start":{"line":308,"column":12},"end":{"line":308,"column":46}},"85":{"start":{"line":312,"column":4},"end":{"line":312,"column":21}},"86":{"start":{"line":321,"column":0},"end":{"line":325,"column":2}},"87":{"start":{"line":322,"column":4},"end":{"line":324,"column":5}},"88":{"start":{"line":323,"column":8},"end":{"line":323,"column":60}},"89":{"start":{"line":334,"column":0},"end":{"line":342,"column":2}},"90":{"start":{"line":335,"column":4},"end":{"line":339,"column":5}},"91":{"start":{"line":336,"column":8},"end":{"line":338,"column":9}},"92":{"start":{"line":337,"column":12},"end":{"line":337,"column":55}},"93":{"start":{"line":341,"column":4},"end":{"line":341,"column":16}},"94":{"start":{"line":344,"column":0},"end":{"line":354,"column":2}},"95":{"start":{"line":346,"column":4},"end":{"line":348,"column":5}},"96":{"start":{"line":347,"column":8},"end":{"line":347,"column":49}},"97":{"start":{"line":350,"column":4},"end":{"line":350,"column":23}},"98":{"start":{"line":351,"column":4},"end":{"line":351,"column":25}},"99":{"start":{"line":352,"column":4},"end":{"line":352,"column":27}},"100":{"start":{"line":353,"column":4},"end":{"line":353,"column":30}},"101":{"start":{"line":356,"column":0},"end":{"line":361,"column":2}},"102":{"start":{"line":357,"column":4},"end":{"line":360,"column":5}},"103":{"start":{"line":358,"column":8},"end":{"line":358,"column":41}},"104":{"start":{"line":359,"column":8},"end":{"line":359,"column":32}},"105":{"start":{"line":363,"column":0},"end":{"line":372,"column":2}},"106":{"start":{"line":364,"column":4},"end":{"line":364,"column":41}},"107":{"start":{"line":366,"column":4},"end":{"line":366,"column":31}},"108":{"start":{"line":367,"column":4},"end":{"line":367,"column":20}},"109":{"start":{"line":369,"column":4},"end":{"line":369,"column":31}},"110":{"start":{"line":371,"column":4},"end":{"line":371,"column":13}},"111":{"start":{"line":374,"column":0},"end":{"line":446,"column":2}},"112":{"start":{"line":376,"column":4},"end":{"line":376,"column":49}},"113":{"start":{"line":377,"column":4},"end":{"line":377,"column":50}},"114":{"start":{"line":378,"column":4},"end":{"line":378,"column":53}},"115":{"start":{"line":379,"column":4},"end":{"line":379,"column":65}},"116":{"start":{"line":381,"column":4},"end":{"line":381,"column":21}},"117":{"start":{"line":383,"column":4},"end":{"line":383,"column":29}},"118":{"start":{"line":385,"column":4},"end":{"line":385,"column":89}},"119":{"start":{"line":388,"column":4},"end":{"line":408,"column":5}},"120":{"start":{"line":389,"column":8},"end":{"line":389,"column":53}},"121":{"start":{"line":395,"column":8},"end":{"line":395,"column":110}},"122":{"start":{"line":397,"column":8},"end":{"line":397,"column":54}},"123":{"start":{"line":398,"column":8},"end":{"line":398,"column":50}},"124":{"start":{"line":399,"column":8},"end":{"line":399,"column":48}},"125":{"start":{"line":401,"column":8},"end":{"line":401,"column":37}},"126":{"start":{"line":403,"column":8},"end":{"line":405,"column":9}},"127":{"start":{"line":404,"column":12},"end":{"line":404,"column":40}},"128":{"start":{"line":407,"column":8},"end":{"line":407,"column":58}},"129":{"start":{"line":414,"column":4},"end":{"line":420,"column":5}},"130":{"start":{"line":415,"column":8},"end":{"line":415,"column":26}},"131":{"start":{"line":416,"column":8},"end":{"line":416,"column":45}},"132":{"start":{"line":419,"column":8},"end":{"line":419,"column":25}},"133":{"start":{"line":422,"column":4},"end":{"line":428,"column":5}},"134":{"start":{"line":423,"column":8},"end":{"line":423,"column":26}},"135":{"start":{"line":424,"column":8},"end":{"line":424,"column":46}},"136":{"start":{"line":427,"column":8},"end":{"line":427,"column":25}},"137":{"start":{"line":430,"column":4},"end":{"line":444,"column":5}},"138":{"start":{"line":431,"column":8},"end":{"line":431,"column":43}},"139":{"start":{"line":432,"column":8},"end":{"line":432,"column":27}},"140":{"start":{"line":434,"column":8},"end":{"line":434,"column":30}},"141":{"start":{"line":435,"column":8},"end":{"line":435,"column":36}},"142":{"start":{"line":436,"column":8},"end":{"line":436,"column":26}},"143":{"start":{"line":438,"column":8},"end":{"line":438,"column":76}},"144":{"start":{"line":439,"column":8},"end":{"line":439,"column":36}},"145":{"start":{"line":440,"column":8},"end":{"line":440,"column":36}},"146":{"start":{"line":443,"column":8},"end":{"line":443,"column":26}},"147":{"start":{"line":459,"column":0},"end":{"line":523,"column":2}},"148":{"start":{"line":461,"column":4},"end":{"line":461,"column":37}},"149":{"start":{"line":462,"column":4},"end":{"line":462,"column":41}},"150":{"start":{"line":465,"column":4},"end":{"line":467,"column":5}},"151":{"start":{"line":466,"column":8},"end":{"line":466,"column":20}},"152":{"start":{"line":469,"column":4},"end":{"line":469,"column":13}},"153":{"start":{"line":470,"column":4},"end":{"line":470,"column":49}},"154":{"start":{"line":471,"column":4},"end":{"line":471,"column":34}},"155":{"start":{"line":472,"column":4},"end":{"line":472,"column":46}},"156":{"start":{"line":475,"column":4},"end":{"line":477,"column":5}},"157":{"start":{"line":476,"column":8},"end":{"line":476,"column":20}},"158":{"start":{"line":482,"column":4},"end":{"line":482,"column":32}},"159":{"start":{"line":485,"column":4},"end":{"line":491,"column":5}},"160":{"start":{"line":486,"column":8},"end":{"line":490,"column":10}},"161":{"start":{"line":493,"column":4},"end":{"line":499,"column":6}},"162":{"start":{"line":502,"column":4},"end":{"line":517,"column":5}},"163":{"start":{"line":503,"column":8},"end":{"line":516,"column":9}},"164":{"start":{"line":504,"column":12},"end":{"line":515,"column":13}},"165":{"start":{"line":505,"column":16},"end":{"line":505,"column":69}},"166":{"start":{"line":507,"column":17},"end":{"line":515,"column":13}},"167":{"start":{"line":508,"column":16},"end":{"line":508,"column":69}},"168":{"start":{"line":510,"column":17},"end":{"line":515,"column":13}},"169":{"start":{"line":511,"column":16},"end":{"line":511,"column":70}},"170":{"start":{"line":513,"column":17},"end":{"line":515,"column":13}},"171":{"start":{"line":514,"column":16},"end":{"line":514,"column":70}},"172":{"start":{"line":520,"column":4},"end":{"line":520,"column":40}},"173":{"start":{"line":522,"column":4},"end":{"line":522,"column":16}},"174":{"start":{"line":532,"column":0},"end":{"line":601,"column":2}},"175":{"start":{"line":541,"column":4},"end":{"line":549,"column":5}},"176":{"start":{"line":542,"column":8},"end":{"line":542,"column":35}},"177":{"start":{"line":543,"column":8},"end":{"line":543,"column":31}},"178":{"start":{"line":546,"column":9},"end":{"line":549,"column":5}},"179":{"start":{"line":547,"column":8},"end":{"line":547,"column":36}},"180":{"start":{"line":548,"column":8},"end":{"line":548,"column":32}},"181":{"start":{"line":552,"column":4},"end":{"line":560,"column":5}},"182":{"start":{"line":553,"column":8},"end":{"line":553,"column":34}},"183":{"start":{"line":554,"column":8},"end":{"line":554,"column":29}},"184":{"start":{"line":557,"column":9},"end":{"line":560,"column":5}},"185":{"start":{"line":558,"column":8},"end":{"line":558,"column":37}},"186":{"start":{"line":559,"column":8},"end":{"line":559,"column":31}},"187":{"start":{"line":568,"column":4},"end":{"line":568,"column":29}},"188":{"start":{"line":571,"column":4},"end":{"line":575,"column":5}},"189":{"start":{"line":572,"column":8},"end":{"line":572,"column":27}},"190":{"start":{"line":573,"column":8},"end":{"line":573,"column":56}},"191":{"start":{"line":574,"column":8},"end":{"line":574,"column":28}},"192":{"start":{"line":578,"column":4},"end":{"line":582,"column":5}},"193":{"start":{"line":579,"column":8},"end":{"line":579,"column":28}},"194":{"start":{"line":580,"column":8},"end":{"line":580,"column":56}},"195":{"start":{"line":581,"column":8},"end":{"line":581,"column":28}},"196":{"start":{"line":585,"column":4},"end":{"line":589,"column":5}},"197":{"start":{"line":586,"column":8},"end":{"line":586,"column":25}},"198":{"start":{"line":587,"column":8},"end":{"line":587,"column":57}},"199":{"start":{"line":588,"column":8},"end":{"line":588,"column":28}},"200":{"start":{"line":592,"column":4},"end":{"line":596,"column":5}},"201":{"start":{"line":593,"column":8},"end":{"line":593,"column":27}},"202":{"start":{"line":594,"column":8},"end":{"line":594,"column":57}},"203":{"start":{"line":595,"column":8},"end":{"line":595,"column":28}},"204":{"start":{"line":598,"column":4},"end":{"line":600,"column":5}},"205":{"start":{"line":599,"column":8},"end":{"line":599,"column":25}},"206":{"start":{"line":615,"column":0},"end":{"line":648,"column":2}},"207":{"start":{"line":617,"column":4},"end":{"line":617,"column":94}},"208":{"start":{"line":617,"column":64},"end":{"line":617,"column":92}},"209":{"start":{"line":618,"column":4},"end":{"line":618,"column":62}},"210":{"start":{"line":618,"column":43},"end":{"line":618,"column":60}},"211":{"start":{"line":619,"column":4},"end":{"line":619,"column":76}},"212":{"start":{"line":619,"column":50},"end":{"line":619,"column":74}},"213":{"start":{"line":622,"column":4},"end":{"line":622,"column":98}},"214":{"start":{"line":624,"column":4},"end":{"line":627,"column":5}},"215":{"start":{"line":626,"column":8},"end":{"line":626,"column":21}},"216":{"start":{"line":630,"column":4},"end":{"line":630,"column":50}},"217":{"start":{"line":631,"column":4},"end":{"line":631,"column":30}},"218":{"start":{"line":632,"column":4},"end":{"line":632,"column":21}},"219":{"start":{"line":634,"column":4},"end":{"line":644,"column":5}},"220":{"start":{"line":636,"column":8},"end":{"line":643,"column":9}},"221":{"start":{"line":638,"column":12},"end":{"line":642,"column":13}},"222":{"start":{"line":640,"column":16},"end":{"line":640,"column":39}},"223":{"start":{"line":641,"column":16},"end":{"line":641,"column":22}},"224":{"start":{"line":646,"column":4},"end":{"line":646,"column":19}},"225":{"start":{"line":663,"column":0},"end":{"line":711,"column":2}},"226":{"start":{"line":667,"column":4},"end":{"line":667,"column":62}},"227":{"start":{"line":667,"column":43},"end":{"line":667,"column":60}},"228":{"start":{"line":668,"column":4},"end":{"line":668,"column":76}},"229":{"start":{"line":668,"column":50},"end":{"line":668,"column":74}},"230":{"start":{"line":674,"column":4},"end":{"line":677,"column":5}},"231":{"start":{"line":676,"column":8},"end":{"line":676,"column":35}},"232":{"start":{"line":679,"column":4},"end":{"line":682,"column":5}},"233":{"start":{"line":681,"column":8},"end":{"line":681,"column":37}},"234":{"start":{"line":685,"column":4},"end":{"line":685,"column":75}},"235":{"start":{"line":686,"column":4},"end":{"line":686,"column":75}},"236":{"start":{"line":687,"column":4},"end":{"line":687,"column":94}},"237":{"start":{"line":688,"column":4},"end":{"line":688,"column":95}},"238":{"start":{"line":691,"column":4},"end":{"line":691,"column":21}},"239":{"start":{"line":692,"column":4},"end":{"line":692,"column":20}},"240":{"start":{"line":694,"column":4},"end":{"line":707,"column":5}},"241":{"start":{"line":696,"column":8},"end":{"line":706,"column":9}},"242":{"start":{"line":698,"column":12},"end":{"line":698,"column":40}},"243":{"start":{"line":699,"column":12},"end":{"line":705,"column":13}},"244":{"start":{"line":701,"column":16},"end":{"line":704,"column":17}},"245":{"start":{"line":703,"column":20},"end":{"line":703,"column":39}},"246":{"start":{"line":709,"column":4},"end":{"line":709,"column":19}},"247":{"start":{"line":713,"column":0},"end":{"line":715,"column":2}},"248":{"start":{"line":714,"column":4},"end":{"line":714,"column":45}},"249":{"start":{"line":724,"column":0},"end":{"line":740,"column":2}},"250":{"start":{"line":725,"column":4},"end":{"line":725,"column":25}},"251":{"start":{"line":728,"column":4},"end":{"line":735,"column":5}},"252":{"start":{"line":729,"column":8},"end":{"line":734,"column":10}},"253":{"start":{"line":737,"column":4},"end":{"line":739,"column":5}},"254":{"start":{"line":738,"column":8},"end":{"line":738,"column":33}},"255":{"start":{"line":749,"column":0},"end":{"line":767,"column":2}},"256":{"start":{"line":751,"column":4},"end":{"line":758,"column":5}},"257":{"start":{"line":752,"column":8},"end":{"line":757,"column":10}},"258":{"start":{"line":760,"column":4},"end":{"line":762,"column":5}},"259":{"start":{"line":761,"column":8},"end":{"line":761,"column":29}},"260":{"start":{"line":764,"column":4},"end":{"line":766,"column":5}},"261":{"start":{"line":765,"column":8},"end":{"line":765,"column":33}},"262":{"start":{"line":776,"column":0},"end":{"line":792,"column":2}},"263":{"start":{"line":777,"column":4},"end":{"line":777,"column":25}},"264":{"start":{"line":780,"column":4},"end":{"line":787,"column":5}},"265":{"start":{"line":781,"column":8},"end":{"line":786,"column":10}},"266":{"start":{"line":789,"column":4},"end":{"line":791,"column":5}},"267":{"start":{"line":790,"column":8},"end":{"line":790,"column":34}},"268":{"start":{"line":801,"column":0},"end":{"line":819,"column":2}},"269":{"start":{"line":803,"column":4},"end":{"line":810,"column":5}},"270":{"start":{"line":804,"column":8},"end":{"line":809,"column":10}},"271":{"start":{"line":812,"column":4},"end":{"line":814,"column":5}},"272":{"start":{"line":813,"column":8},"end":{"line":813,"column":29}},"273":{"start":{"line":816,"column":4},"end":{"line":818,"column":5}},"274":{"start":{"line":817,"column":8},"end":{"line":817,"column":34}},"275":{"start":{"line":826,"column":0},"end":{"line":858,"column":2}},"276":{"start":{"line":827,"column":4},"end":{"line":827,"column":22}},"277":{"start":{"line":830,"column":4},"end":{"line":830,"column":58}},"278":{"start":{"line":833,"column":4},"end":{"line":835,"column":5}},"279":{"start":{"line":834,"column":8},"end":{"line":834,"column":55}},"280":{"start":{"line":837,"column":4},"end":{"line":837,"column":26}},"281":{"start":{"line":838,"column":4},"end":{"line":838,"column":33}},"282":{"start":{"line":840,"column":4},"end":{"line":840,"column":23}},"283":{"start":{"line":841,"column":4},"end":{"line":841,"column":22}},"284":{"start":{"line":843,"column":4},"end":{"line":843,"column":20}},"285":{"start":{"line":844,"column":4},"end":{"line":844,"column":29}},"286":{"start":{"line":845,"column":4},"end":{"line":845,"column":29}},"287":{"start":{"line":847,"column":4},"end":{"line":847,"column":21}},"288":{"start":{"line":848,"column":4},"end":{"line":848,"column":24}},"289":{"start":{"line":849,"column":4},"end":{"line":849,"column":27}},"290":{"start":{"line":851,"column":4},"end":{"line":851,"column":26}},"291":{"start":{"line":852,"column":4},"end":{"line":852,"column":24}},"292":{"start":{"line":853,"column":4},"end":{"line":853,"column":29}},"293":{"start":{"line":854,"column":4},"end":{"line":854,"column":28}},"294":{"start":{"line":855,"column":4},"end":{"line":855,"column":20}},"295":{"start":{"line":857,"column":4},"end":{"line":857,"column":26}},"296":{"start":{"line":860,"column":0},"end":{"line":870,"column":3}},"297":{"start":{"line":862,"column":8},"end":{"line":862,"column":30}},"298":{"start":{"line":865,"column":8},"end":{"line":868,"column":9}},"299":{"start":{"line":866,"column":12},"end":{"line":866,"column":58}},"300":{"start":{"line":867,"column":12},"end":{"line":867,"column":35}},"301":{"start":{"line":872,"column":0},"end":{"line":882,"column":3}},"302":{"start":{"line":874,"column":8},"end":{"line":874,"column":30}},"303":{"start":{"line":877,"column":8},"end":{"line":880,"column":9}},"304":{"start":{"line":878,"column":12},"end":{"line":878,"column":58}},"305":{"start":{"line":879,"column":12},"end":{"line":879,"column":35}},"306":{"start":{"line":884,"column":0},"end":{"line":888,"column":3}},"307":{"start":{"line":886,"column":8},"end":{"line":886,"column":54}},"308":{"start":{"line":890,"column":0},"end":{"line":894,"column":3}},"309":{"start":{"line":892,"column":8},"end":{"line":892,"column":55}},"310":{"start":{"line":900,"column":0},"end":{"line":914,"column":3}},"311":{"start":{"line":903,"column":8},"end":{"line":903,"column":27}},"312":{"start":{"line":908,"column":8},"end":{"line":908,"column":28}},"313":{"start":{"line":920,"column":0},"end":{"line":934,"column":3}},"314":{"start":{"line":923,"column":8},"end":{"line":923,"column":27}},"315":{"start":{"line":928,"column":8},"end":{"line":928,"column":28}}},"branchMap":{"1":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":16},"end":{"line":91,"column":26}},{"start":{"line":91,"column":30},"end":{"line":91,"column":32}}]},"2":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":33},"end":{"line":100,"column":44}},{"start":{"line":100,"column":48},"end":{"line":100,"column":49}}]},"3":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":51},"end":{"line":100,"column":63}},{"start":{"line":100,"column":67},"end":{"line":100,"column":68}}]},"4":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":45},"end":{"line":108,"column":72}},{"start":{"line":108,"column":75},"end":{"line":108,"column":85}}]},"5":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":21},"end":{"line":126,"column":31}},{"start":{"line":126,"column":35},"end":{"line":126,"column":46}}]},"6":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":13},"end":{"line":136,"column":20}},{"start":{"line":136,"column":24},"end":{"line":136,"column":25}}]},"7":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":13},"end":{"line":137,"column":20}},{"start":{"line":137,"column":24},"end":{"line":137,"column":25}}]},"8":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":47},"end":{"line":138,"column":60}},{"start":{"line":138,"column":63},"end":{"line":138,"column":64}}]},"9":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":49},"end":{"line":139,"column":62}},{"start":{"line":139,"column":65},"end":{"line":139,"column":69}}]},"10":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"11":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"12":{"line":203,"type":"cond-expr","locations":[{"start":{"line":204,"column":9},"end":{"line":204,"column":45}},{"start":{"line":204,"column":49},"end":{"line":204,"column":71}}]},"13":{"line":210,"type":"cond-expr","locations":[{"start":{"line":211,"column":9},"end":{"line":211,"column":45}},{"start":{"line":211,"column":49},"end":{"line":211,"column":72}}]},"14":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"15":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"16":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":232,"column":4}},{"start":{"line":232,"column":4},"end":{"line":232,"column":4}}]},"17":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"18":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"19":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":18}},{"start":{"line":251,"column":22},"end":{"line":251,"column":36}}]},"20":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]},"21":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":8},"end":{"line":336,"column":8}},{"start":{"line":336,"column":8},"end":{"line":336,"column":8}}]},"22":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":4},"end":{"line":346,"column":4}},{"start":{"line":346,"column":4},"end":{"line":346,"column":4}}]},"23":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":8},"end":{"line":346,"column":35}},{"start":{"line":346,"column":39},"end":{"line":346,"column":76}}]},"24":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":4},"end":{"line":357,"column":4}},{"start":{"line":357,"column":4},"end":{"line":357,"column":4}}]},"25":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":8},"end":{"line":357,"column":21}},{"start":{"line":357,"column":25},"end":{"line":357,"column":41}}]},"26":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":20},"end":{"line":379,"column":35}},{"start":{"line":379,"column":39},"end":{"line":379,"column":64}}]},"27":{"line":385,"type":"cond-expr","locations":[{"start":{"line":385,"column":33},"end":{"line":385,"column":61}},{"start":{"line":385,"column":64},"end":{"line":385,"column":88}}]},"28":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"29":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":26},"end":{"line":395,"column":53}},{"start":{"line":395,"column":57},"end":{"line":395,"column":109}}]},"30":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":8}},{"start":{"line":403,"column":8},"end":{"line":403,"column":8}}]},"31":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":414,"column":4}},{"start":{"line":414,"column":4},"end":{"line":414,"column":4}}]},"32":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"33":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"34":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"35":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":8},"end":{"line":465,"column":19}},{"start":{"line":465,"column":23},"end":{"line":465,"column":34}},{"start":{"line":465,"column":38},"end":{"line":465,"column":64}},{"start":{"line":465,"column":68},"end":{"line":465,"column":94}}]},"36":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"37":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":4},"end":{"line":485,"column":4}},{"start":{"line":485,"column":4},"end":{"line":485,"column":4}}]},"38":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":4},"end":{"line":502,"column":4}},{"start":{"line":502,"column":4},"end":{"line":502,"column":4}}]},"39":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":8},"end":{"line":503,"column":8}},{"start":{"line":503,"column":8},"end":{"line":503,"column":8}}]},"40":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":12},"end":{"line":504,"column":12}},{"start":{"line":504,"column":12},"end":{"line":504,"column":12}}]},"41":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":17},"end":{"line":507,"column":17}},{"start":{"line":507,"column":17},"end":{"line":507,"column":17}}]},"42":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":17},"end":{"line":510,"column":17}},{"start":{"line":510,"column":17},"end":{"line":510,"column":17}}]},"43":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":17},"end":{"line":513,"column":17}},{"start":{"line":513,"column":17},"end":{"line":513,"column":17}}]},"44":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":4},"end":{"line":541,"column":4}},{"start":{"line":541,"column":4},"end":{"line":541,"column":4}}]},"45":{"line":541,"type":"binary-expr","locations":[{"start":{"line":541,"column":8},"end":{"line":541,"column":31}},{"start":{"line":541,"column":35},"end":{"line":541,"column":55}}]},"46":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":9},"end":{"line":546,"column":9}},{"start":{"line":546,"column":9},"end":{"line":546,"column":9}}]},"47":{"line":546,"type":"binary-expr","locations":[{"start":{"line":546,"column":13},"end":{"line":546,"column":36}},{"start":{"line":546,"column":40},"end":{"line":546,"column":61}}]},"48":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":4},"end":{"line":552,"column":4}},{"start":{"line":552,"column":4},"end":{"line":552,"column":4}}]},"49":{"line":552,"type":"binary-expr","locations":[{"start":{"line":552,"column":8},"end":{"line":552,"column":31}},{"start":{"line":552,"column":35},"end":{"line":552,"column":54}}]},"50":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":9},"end":{"line":557,"column":9}},{"start":{"line":557,"column":9},"end":{"line":557,"column":9}}]},"51":{"line":557,"type":"binary-expr","locations":[{"start":{"line":557,"column":13},"end":{"line":557,"column":36}},{"start":{"line":557,"column":40},"end":{"line":557,"column":62}}]},"52":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":4},"end":{"line":598,"column":4}},{"start":{"line":598,"column":4},"end":{"line":598,"column":4}}]},"53":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":4},"end":{"line":617,"column":4}},{"start":{"line":617,"column":4},"end":{"line":617,"column":4}}]},"54":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":8},"end":{"line":617,"column":39}},{"start":{"line":617,"column":43},"end":{"line":617,"column":60}}]},"55":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"56":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":4},"end":{"line":619,"column":4}},{"start":{"line":619,"column":4},"end":{"line":619,"column":4}}]},"57":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":4},"end":{"line":624,"column":4}},{"start":{"line":624,"column":4},"end":{"line":624,"column":4}}]},"58":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":12},"end":{"line":638,"column":12}},{"start":{"line":638,"column":12},"end":{"line":638,"column":12}}]},"59":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":4},"end":{"line":667,"column":4}},{"start":{"line":667,"column":4},"end":{"line":667,"column":4}}]},"60":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":4},"end":{"line":668,"column":4}},{"start":{"line":668,"column":4},"end":{"line":668,"column":4}}]},"61":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":4},"end":{"line":674,"column":4}},{"start":{"line":674,"column":4},"end":{"line":674,"column":4}}]},"62":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":4},"end":{"line":679,"column":4}},{"start":{"line":679,"column":4},"end":{"line":679,"column":4}}]},"63":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":12},"end":{"line":699,"column":12}},{"start":{"line":699,"column":12},"end":{"line":699,"column":12}}]},"64":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":16},"end":{"line":701,"column":16}},{"start":{"line":701,"column":16},"end":{"line":701,"column":16}}]},"65":{"line":701,"type":"binary-expr","locations":[{"start":{"line":701,"column":21},"end":{"line":701,"column":30}},{"start":{"line":701,"column":34},"end":{"line":701,"column":50}},{"start":{"line":701,"column":55},"end":{"line":701,"column":100}}]},"66":{"line":714,"type":"binary-expr","locations":[{"start":{"line":714,"column":11},"end":{"line":714,"column":24}},{"start":{"line":714,"column":28},"end":{"line":714,"column":44}}]},"67":{"line":730,"type":"cond-expr","locations":[{"start":{"line":730,"column":23},"end":{"line":730,"column":25}},{"start":{"line":730,"column":28},"end":{"line":730,"column":50}}]},"68":{"line":731,"type":"cond-expr","locations":[{"start":{"line":731,"column":23},"end":{"line":731,"column":25}},{"start":{"line":731,"column":28},"end":{"line":731,"column":52}}]},"69":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":4},"end":{"line":737,"column":4}},{"start":{"line":737,"column":4},"end":{"line":737,"column":4}}]},"70":{"line":753,"type":"cond-expr","locations":[{"start":{"line":753,"column":23},"end":{"line":753,"column":25}},{"start":{"line":753,"column":28},"end":{"line":753,"column":49}}]},"71":{"line":754,"type":"cond-expr","locations":[{"start":{"line":754,"column":23},"end":{"line":754,"column":25}},{"start":{"line":754,"column":28},"end":{"line":754,"column":52}}]},"72":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":4},"end":{"line":760,"column":4}},{"start":{"line":760,"column":4},"end":{"line":760,"column":4}}]},"73":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":4},"end":{"line":764,"column":4}},{"start":{"line":764,"column":4},"end":{"line":764,"column":4}}]},"74":{"line":782,"type":"cond-expr","locations":[{"start":{"line":782,"column":23},"end":{"line":782,"column":25}},{"start":{"line":782,"column":28},"end":{"line":782,"column":53}}]},"75":{"line":783,"type":"cond-expr","locations":[{"start":{"line":783,"column":23},"end":{"line":783,"column":25}},{"start":{"line":783,"column":28},"end":{"line":783,"column":51}}]},"76":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":4},"end":{"line":789,"column":4}},{"start":{"line":789,"column":4},"end":{"line":789,"column":4}}]},"77":{"line":805,"type":"cond-expr","locations":[{"start":{"line":805,"column":23},"end":{"line":805,"column":25}},{"start":{"line":805,"column":28},"end":{"line":805,"column":53}}]},"78":{"line":806,"type":"cond-expr","locations":[{"start":{"line":806,"column":23},"end":{"line":806,"column":25}},{"start":{"line":806,"column":28},"end":{"line":806,"column":48}}]},"79":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":4},"end":{"line":812,"column":4}},{"start":{"line":812,"column":4},"end":{"line":812,"column":4}}]},"80":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":4},"end":{"line":816,"column":4}},{"start":{"line":816,"column":4},"end":{"line":816,"column":4}}]},"81":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":8},"end":{"line":865,"column":8}},{"start":{"line":865,"column":8},"end":{"line":865,"column":8}}]},"82":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":8},"end":{"line":877,"column":8}},{"start":{"line":877,"column":8},"end":{"line":877,"column":8}}]}},"code":["var utils = require('../utils');","","/**"," * The Tilelayer is the visual tiled layer that actually displays on the screen"," *"," * This class will be created by the Tilemap."," *"," * @class Tilelayer"," * @extends Group"," * @constructor"," * @param game {Phaser.Game} The game instance this belongs to"," * @param map {Tilemap} The tilemap instance that this belongs to"," * @param index {Number} The index of the layer in the tilemap"," * @param width {Number} The width of the renderable area of the layer"," * @param height {Number} The height of the renderable area of the layer"," */","//","// TODO: Add chunk prerendering?","//","// for discussions about this implementation:","//   see: https://github.com/GoodBoyDigital/pixi.js/issues/48","//   and: https://github.com/photonstorm/phaser/issues/1145","function Tilelayer(game, map, layer, index) {","    Phaser.Group.call(this, game, map);","","    this.index = index;","","    // Non-Tiled related properties","","    /**","     * The map instance this tilelayer belongs to","     *","     * @property map","     * @type Tilemap","     */","    this.map = map;","","    /**","     * The const type of this object.","     *","     * @property type","     * @type Number","     * @default","     */","    this.type = Phaser.TILEMAPLAYER;","","    /**","    * An object that is fixed to the camera ignores the position of any ancestors in the display list","    * and uses its x/y coordinates as offsets from the top left of the camera.","    *","    * @property {boolean} fixedToCamera - Fixes this object to the Camera.","    * @default","    */","    this.fixedToCamera = false;","","    /**","    * @property {Phaser.Point} cameraOffset - If this object is fixed to the camera then use this Point","    * to specify how far away from the Camera x/y it's rendered.","    */","    this.cameraOffset = new Phaser.Point(0, 0);","","    /**","     * All the tiles this layer has","     *","     * @property tiles","     * @type Object","     */","    this.tiles = {};","","    /**","     * The scroll speed of the layer relative to the camera","     * (e.g. a scrollFactor of 0.5 scrolls half as quickly as the","     * 'normal' layers do)","     *","     * @property scroll","     * @type Phaser.Point","     * @default new Phaser.Point(1, 1)","     */","    // TODO: This doesn't actually work yet!","    this.scrollFactor = new Phaser.Point(1, 1);","","    // Tiled related properties","","    /**","     * The name of the layer","     *","     * @property name","     * @type String","     * @default ''","     */","    this.name = layer.name || '';","","    /**","     * The size of the layer","     *","     * @property size","     * @type Phaser.Point","     * @default new Phaser.Point(1, 1)","     */","    this.size = new Phaser.Point(layer.width || 0, layer.height || 0);","","    /**","     * The tile IDs of the tilemap","     *","     * @property tileIds","     * @type Uint32Array|Array","     */","    this.tileIds = Phaser.devicetypedArray ? new Uint32Array(layer.data) : layer.data;","","    /**","     * The user-defined properties of this group. Usually defined in the TiledEditor","     *","     * @property properties","     * @type Object","     */","    this.properties = utils.parseTiledProperties(layer.properties);","","    /**","     * The Tiled type of tile layer, should always be 'tilelayer'","     *","     * @property layerType","     * @type String","     * @default 'tilelayer'","     * @readOnly","     */","    this.layerType = layer.type || 'tilelayer';","","    /**","    * @property {number} rayStepRate - When ray-casting against tiles this is the number of steps it will jump.","    * For larger tile sizes you can increase this to improve performance.","    * @default","    */","    this.rayStepRate = 4;","","    // translate some tiled properties to our inherited properties","    this.x = layer.x || 0;","    this.y = layer.y || 0;","    this.alpha = layer.opacity !== undefined ? layer.opacity : 1;","    this.visible = layer.visible !== undefined ? layer.visible : true;","","    // physics bodies in this layer","    this.bodies = [];","","    // some private trackers","    this._buffered = { left: false, right: false, top: false, bottom: false };","    this._scroll = new Phaser.Point(); // the current scroll position","    this._scrollDelta = new Phaser.Point(); // the current delta of scroll since the last sprite move","    this._renderArea = new Phaser.Rectangle(); // the area to render in tiles","","    /**","    * @property {object} _mc - Local map data and calculation cache.","    * @private","    */","    this._mc = {","        cw: map.tileWidth,","        ch: map.tileHeight,","        tx: 0,","        ty: 0,","        tw: 0,","        th: 0","    };","","    // should we clear and rerender all the tiles","    this.dirty = true;","","    // if batch is true, store children in a spritebatch","    if (this.properties.batch) {","        this.container = this.addChild(new Phaser.SpriteBatch(game));","    }","    else {","        this.container = this;","    }","","    for (var i = 0; i < this.tileIds.length; ++i) {","        var x = i % this.size.x;","        var y = (i - x) / this.size.x;","","        if (!this.tiles[y]) {","            this.tiles[y] = {};","        }","","        this.tiles[y][x] = null;","    }","","    this._tilePool = [];","    this._animTexturePool = [];","}","","Tilelayer.prototype = Object.create(Phaser.Group.prototype);","Tilelayer.prototype.constructor = Tilelayer;","","module.exports = Tilelayer;","","Tilelayer.prototype.setupRenderArea = function () {","    // calculate the X/Y start of the render area as the tile location of the top-left of the camera view.","    this._renderArea.x = this.game.math.clampBottom(this.game.math.floorTo(this._scroll.x / this.map.scaledTileWidth), 0);","    this._renderArea.y = this.game.math.clampBottom(this.game.math.floorTo(this._scroll.y / this.map.scaledTileHeight), 0);","","    // the width of the render area is the camera view width in tiles","    this._renderArea.width = this.game.math.ceilTo(this.game.camera.view.width / this.map.scaledTileWidth);","","    // ensure we don't go outside the map width","    this._renderArea.width = (this._renderArea.x + this._renderArea.width > this.map.size.x) ?","        (this.map.size.x - this._renderArea.x) : this._renderArea.width;","","    // the height of the render area is the camera view height in tiles","    this._renderArea.height = this.game.math.ceilTo(this.game.camera.view.height / this.map.scaledTileHeight);","","    // ensure we don't go outside the map height","    this._renderArea.height = (this._renderArea.y + this._renderArea.height > this.map.size.y) ?","        (this.map.size.y - this._renderArea.y) : this._renderArea.height;","};","","/**"," * Sets the world size to match the size of this layer."," *"," * @method resizeWorld"," */","Tilelayer.prototype.resizeWorld = function () {","    this.game.world.setBounds(0, 0, this.widthInPixels, this.heightInPixels);","","    var physics = this.game.physics;","","    if (physics.arcade) {","        physics.arcade.setBoundsToWorld();","    }","","    if (physics.ninja) {","        physics.ninja.setBoundsToWorld();","    }","","    if (physics.p2) {","        physics.p2.setBoundsToWorld(true, true, false, true, false);","    }","};","","/**"," * Automatically called by Tilemap.postUpdate. Handles scrolling the layer and updating the scale"," *"," * @method postUpdate"," */","Tilelayer.prototype.postUpdate = function () {","    Phaser.Group.prototype.postUpdate.call(this);","","    if (this.fixedToCamera) {","        this.position.x = (this.game.camera.view.x + this.cameraOffset.x) / this.game.camera.scale.x;","        this.position.y = (this.game.camera.view.y + this.cameraOffset.y) / this.game.camera.scale.y;","    }","","    // TODO: this seems to not work properly when scale changes on the fly. Look into that...","    if (this.dirty || this.map.dirty) {","        // no longer dirty","        this.dirty = false;","","        // setup the render area, and scaled tilesize","        this.setupRenderArea();","","        // resize the world to the new size","        // TODO: Seems dangerous to do this here, may break if user wants to manually set bounds","        // and this reset it each time scale changes.","        this.resizeWorld();","","        // render the tiles on the screen","        this.setupTiles();","","        return this;","    }","","    this.scrollX = this.game.camera.x;","    this.scrollY = this.game.camera.y;","","    this.updatePan();","};","","/**"," * Clears the current tiles and sets up the render area"," *"," * @method setupTiles"," * @private"," */","Tilelayer.prototype.setupTiles = function () {","    // clear all the tiles","    this.clearTiles();","","    var area = (this._renderArea.width + 2) * (this._renderArea.height + 2);","","    // prealloc the pool with the necessary objects","    while (this._tilePool.length < area) {","        this._tilePool.push(this._createTile());","    }","","    // dealloc objects that we no longer need","    while (this._tilePool.length > area) {","        this._tilePool.pop().destroy();","    }","","    // reset buffered status","    this._buffered.left = this._buffered.right = this._buffered.top = this._buffered.bottom = false;","","    // reset scroll delta","    this._scrollDelta.x = this._scroll.x % this.map.scaledTileWidth;","    this._scrollDelta.y = this._scroll.y % this.map.scaledTileHeight;","","    // setup the current viewport","    // setup a tile for each location in the renderArea","    for (var x = this._renderArea.x; x < this._renderArea.right; ++x) {","        for (var y = this._renderArea.y; y < this._renderArea.bottom; ++y) {","            this.moveTileSprite(-1, -1, x, y);","        }","    }","","    this.sortTiles();","};","","/**"," * Sorts the tiles based on their sort order (which will be set according to the map's renderorder) if"," * the map's obeyRenderorder is set to true"," *"," * @method sortTiles"," */","Tilelayer.prototype.sortTiles = function () {","    if (this.map.obeyRenderorder) {","        this.sort('sortOrder', Phaser.Group.SORT_ASCENDING);","    }","};","","/**"," * Clears all the tiles currently used to render the layer"," *"," * @method clearTiles"," * @return {Tilelayer} Returns itself."," * @chainable"," */","Tilelayer.prototype.clearTiles = function () {","    for (var c = this.container.children.length - 1; c > -1; --c) {","        if (this.container.children[c].type === Phaser.TILESPRITE) {","            this.clearTile(this.container.children[c]);","        }","    }","","    return this;","};","","Tilelayer.prototype.clearTile = function (tile) {","    // this was playing an animation, put its texture back into the animation texture pool","    if (tile.animations._anims.tile && tile.animations._anims.tile.isPlaying) {","        this._animTexturePool.push(tile.texture);","    }","","    tile.sortOrder = 0;","    tile.visible = false;","    tile.animations.stop();","    this._tilePool.push(tile);","};","","Tilelayer.prototype._freeTile = function (x, y) {","    if (this.tiles[y] && this.tiles[y][x]) {","        this.clearTile(this.tiles[y][x]);","        this.tiles[y][x] = null;","    }","};","","Tilelayer.prototype._createTile = function () {","    var s = new Phaser.Sprite(this.game);","","    s.type = Phaser.TILESPRITE;","    s.sortOrder = 0;","","    this.container.addChild(s);","","    return s;","};","","Tilelayer.prototype._resetTile = function (tile, x, y, tileId, tileset) {","    // calculate some values for the tile","    var texture = tileset.getTileTexture(tileId);","    var props = tileset.getTileProperties(tileId);","    var animData = tileset.getTileAnimations(tileId);","    var blendMode = props.blendMode || this.properties.blendMode;","","    tile.reset(x, y);","","    tile.setTexture(texture);","","    tile.blendMode = blendMode ? Phaser.blendModes[blendMode] : Phaser.blendModes.NORMAL;","","    // add animations if there are any","    if (animData) {","        tile.animations.loadFrameData(animData.data);","","        // use a tile animation texture, each animated tile *must* be using","        // a separate texture or they will share one and mess with eachother's","        // animations. Phaser updates a sprite's texture frame as animations play out","        // so a shared texture means each sprite's update effects other sprites besides itself.","        var animTexture = this._animTexturePool.pop() || new PIXI.Texture(texture.baseTexture, texture.frame);","","        animTexture.baseTexture = texture.baseTexture;","        animTexture.frame.copyFrom(texture.frame);","        animTexture.setFrame(animTexture.frame);","","        tile.setTexture(animTexture);","","        if (!tile.animations._anims.tile) {","            tile.animations.add('tile');","        }","","        tile.animations.play('tile', animData.rate, true);","    }","","    // Flipped states based on TiledEditor source:","    // https://github.com/bjorn/tiled/blob/0ae2b91d31dfc5caf35cb4f116d71cec73a5ac7d/src/libtiled/maprenderer.cpp#L134-L154","","    // setup the flipped states","    if (props.flippedX) {","        tile.scale.x = -1;","        tile.position.x += tileset.tileWidth;","    }","    else {","        tile.scale.x = 1;","    }","","    if (props.flippedY) {","        tile.scale.y = -1;","        tile.position.y += tileset.tileHeight;","    }","    else {","        tile.scale.y = 1;","    }","","    if (props.flippedAD) {","        tile.rotation = 1.5707963267948966; // this.game.math.degToRad(90);","        tile.scale.x *= -1;","","        var sx = tile.scale.x;","        tile.scale.x = tile.scale.y;","        tile.scale.y = sx;","","        var halfDiff = Math.abs(tile.height / 2) - Math.abs(tile.width / 2);","        tile.position.y += halfDiff;","        tile.position.x += halfDiff;","    }","    else {","        tile.rotation = 0;","    }","","};","","/**"," * Moves a tile sprite from one position to another, and creates a new tile"," * if the old position didn't have a sprite"," *"," * @method moveTileSprite"," * @param fromTileX {Number} The x coord of the tile in units of tiles (not pixels) to move from"," * @param fromTileY {Number} The y coord of the tile in units of tiles (not pixels) to move from"," * @param toTileX {Number} The x coord of the tile in units of tiles (not pixels) to move to"," * @param toTileY {Number} The y coord of the tile in units of tiles (not pixels) to move to"," * @return {Tile} The sprite to display"," */","Tilelayer.prototype.moveTileSprite = function (fromTileX, fromTileY, toTileX, toTileY) {","    // free the tiles we are dealing with","    this._freeTile(toTileX, toTileY);","    this._freeTile(fromTileX, fromTileY);","","    // if off the map, just ignore it","    if (toTileX < 0 || toTileY < 0 || toTileX >= this.map.size.x || toTileY >= this.map.size.y) {","        return null;","    }","","    var tile;","    var id = (toTileX + (toTileY * this.size.x));","    var tileId = this.tileIds[id];","    var tileset = this.map.getTileset(tileId);","","    // if no tileset, return","    if (!tileset) {","        return null;","    }","","    // grab a new tile from the pool","    // should exist since we just freed earlier, and the pool is hydrated","    // with enough tiles for the viewport","    tile = this._tilePool.pop();","","    // if we couldn't find a tile from the pool, then explode.","    if (!tile) {","        throw new Error(","            '[phaser-tiled] Unable to find a tile in the pool, this shouldn\\'t be possible! ' +","            'Please report this issue at (https://github.com/englercj/phaser-tiled/issues), ' +","            'and include a running example.'","        );","    }","","    this._resetTile(","        tile,","        (toTileX * this.map.tileWidth) + tileset.tileoffset.x,","        (toTileY * this.map.tileHeight) + tileset.tileoffset.y,","        tileId,","        tileset","    );","","    // sort order of tile, could/should be in _resetTile but it would need the map coordinates","    if (this.map.obeyRenderorder) {","        if (this.map.orientation === 'orthogonal') {","            if (this.map.renderorder === 'right-up') {","                tile.sortOrder = toTileX - this.map.size.x * toTileY;","            }","            else if (this.map.renderorder === 'right-down') {","                tile.sortOrder = toTileX + this.map.size.x * toTileY;","            }","            else if (this.map.renderorder === 'left-up') {","                tile.sortOrder = -toTileX - this.map.size.x * toTileY;","            }","            else if (this.map.renderorder === 'left-down') {","                tile.sortOrder = -toTileX + this.map.size.x * toTileY;","            }","        }","    }","","    // update sprite reference in the map","    this.tiles[toTileY][toTileX] = tile;","","    return tile;","};","","/**"," * Pans the layer around, rendering stuff if necessary"," *"," * @method updatePan"," * @return {Tilelayer} Returns itself."," * @chainable"," */","Tilelayer.prototype.updatePan = function () {","    // First, check if we need to build a buffer around the viewport","    // usually this happens on the first pan after a full render","    // caused by a viewport resize. We do this buffering here instead","    // of in the initial render because in the initial render, the buffer","    // may try to go negative which has no tiles. Plus doing it here","    // reduces the number of tiles that need to be created initially.","","    // moving world right, so left will be exposed","    if (this._scrollDelta.x > 0 && !this._buffered.left) {","        this._buffered.left = true;","        this._renderLeft(true);","    }","    // moving world left, so right will be exposed","    else if (this._scrollDelta.x < 0 && !this._buffered.right) {","        this._buffered.right = true;","        this._renderRight(true);","    }","","    // moving world down, so top will be exposed","    if (this._scrollDelta.y > 0 && !this._buffered.top) {","        this._buffered.top = true;","        this._renderUp(true);","    }","    // moving world up, so bottom will be exposed","    else if (this._scrollDelta.y < 0 && !this._buffered.bottom) {","        this._buffered.bottom = true;","        this._renderDown(true);","    }","","    // Here is where the actual panning gets done, we check if the pan","    // delta is greater than a scaled tile and if so pan that direction.","    // The reason we do it in a while loop is because the delta can be","    // larger than 1 scaled tile and may require multiple render pans","    // (this can happen if you can .pan(x, y) with large values)","","    var sortRequired = false;","","    // moved position right, so render left","    while (this._scrollDelta.x >= this.map.scaledTileWidth) {","        this._renderLeft();","        this._scrollDelta.x -= this.map.scaledTileWidth;","        sortRequired = true;","    }","","    // moved position left, so render right","    while (this._scrollDelta.x <= -this.map.scaledTileWidth) {","        this._renderRight();","        this._scrollDelta.x += this.map.scaledTileWidth;","        sortRequired = true;","    }","","    // moved position down, so render up","    while (this._scrollDelta.y >= this.map.scaledTileHeight) {","        this._renderUp();","        this._scrollDelta.y -= this.map.scaledTileHeight;","        sortRequired = true;","    }","","    // moved position up, so render down","    while (this._scrollDelta.y <= -this.map.scaledTileHeight) {","        this._renderDown();","        this._scrollDelta.y += this.map.scaledTileHeight;","        sortRequired = true;","    }","","    if (sortRequired) {","        this.sortTiles();","    }","};","","/**","* Gets all tiles that intersect with the given line.","*","* @method Phaser.TilemapLayer#getRayCastTiles","* @memberof Phaser.TilemapLayer","* @param {Phaser.Line} line - The line used to determine which tiles to return.","* @param {number} [stepRate] - How many steps through the ray will we check? If undefined or","*       null it uses TilemapLayer.rayStepRate.","* @param {boolean} [collides=false] - If true only return tiles that collide on one or more faces.","* @param {boolean} [interestingFace=false] - If true only return tiles that have interesting faces.","* @return {array<Phaser.Tile>} An array of Phaser.Tiles.","*/","Tilelayer.prototype.getRayCastTiles = function (line, stepRate, collides, interestingFace) {","","    if (typeof stepRate === 'undefined' || stepRate === null) { stepRate = this.rayStepRate; }","    if (typeof collides === 'undefined') { collides = false; }","    if (typeof interestingFace === 'undefined') { interestingFace = false; }","","    //  First get all tiles that touch the bounds of the line","    var tiles = this.getTiles(line.x, line.y, line.width, line.height, collides, interestingFace);","","    if (tiles.length === 0)","    {","        return tiles;","    }","","    //  Now we only want the tiles that intersect with the points on this line","    var coords = line.coordinatesOnLine(stepRate);","    var total = coords.length;","    var results = [];","","    for (var i = 0; i < tiles.length; i++)","    {","        for (var t = 0; t < total; t++)","        {","            if (tiles[i].containsPoint(coords[t][0], coords[t][1]))","            {","                results.push(tiles[i]);","                break;","            }","        }","    }","","    return results;","","};","","/**","* Get all tiles that exist within the given area, defined by the top-left corner, width and height.","* Values given are in pixels, not tiles.","* @method Phaser.TilemapLayer#getTiles","* @memberof Phaser.TilemapLayer","* @param {number} x - X position of the top left corner.","* @param {number} y - Y position of the top left corner.","* @param {number} width - Width of the area to get.","* @param {number} height - Height of the area to get.","* @param {boolean} [collides=false] - If true only return tiles that collide on one or more faces.","* @param {boolean} [interestingFace=false] - If true only return tiles that have interesting faces.","* @return {array<Phaser.Tile>} An array of Phaser.Tiles.","*/","Tilelayer.prototype.getTiles = function (x, y, width, height, collides, interestingFace) {","","    //  Should we only get tiles that have at least one of their collision flags set?","    // (true = yes, false = no just get them all)","    if (typeof collides === 'undefined') { collides = false; }","    if (typeof interestingFace === 'undefined') { interestingFace = false; }","","    // adjust the x,y coordinates for scrollFactor","    // x = this._fixX(x);","    // y = this._fixY(y);","","    if (width > this.widthInPixels)","    {","        width = this.widthInPixels;","    }","","    if (height > this.heightInPixels)","    {","        height = this.heightInPixels;","    }","","    //  Convert the pixel values into tile coordinates","    this._mc.tx = this.game.math.snapToFloor(x, this._mc.cw) / this._mc.cw;","    this._mc.ty = this.game.math.snapToFloor(y, this._mc.ch) / this._mc.ch;","    this._mc.tw = (this.game.math.snapToCeil(width, this._mc.cw) + this._mc.cw) / this._mc.cw;","    this._mc.th = (this.game.math.snapToCeil(height, this._mc.ch) + this._mc.ch) / this._mc.ch;","","    //  This should apply the layer x/y here","    var results = [];","    var tile = null;","","    for (var wy = this._mc.ty; wy < this._mc.ty + this._mc.th; wy++)","    {","        for (var wx = this._mc.tx; wx < this._mc.tx + this._mc.tw; wx++)","        {","            tile = this.getTile(wx, wy);","            if (tile)","            {","                if ((!collides && !interestingFace) || tile.isInteresting(collides, interestingFace))","                {","                    results.push(tile);","                }","            }","        }","    }","","    return results;","","};","","Tilelayer.prototype.getTile = function (x, y) {","    return this.tiles[y] && this.tiles[y][x];","};","","/**"," * Renders tiles to the left, pulling from the far right"," *"," * @method _renderLeft"," * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle"," * @private"," */","Tilelayer.prototype._renderLeft = function (forceNew) {","    this._renderArea.x--;","","    // move all the far right tiles to the left side","    for (var i = 0; i < this._renderArea.height; ++i) {","        this.moveTileSprite(","            forceNew ? -1 : this._renderArea.right,","            forceNew ? -1 : this._renderArea.top + i,","            this._renderArea.left,","            this._renderArea.top + i","        );","    }","","    if (forceNew) {","        this._renderArea.width++;","    }","};","","/**"," * Renders tiles to the right, pulling from the far left"," *"," * @method _renderRight"," * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle"," * @private"," */","Tilelayer.prototype._renderRight = function (forceNew) {","    // move all the far left tiles to the right side","    for (var i = 0; i < this._renderArea.height; ++i) {","        this.moveTileSprite(","            forceNew ? -1 : this._renderArea.left,","            forceNew ? -1 : this._renderArea.top + i,","            this._renderArea.right,","            this._renderArea.top + i","        );","    }","","    if (!forceNew) {","        this._renderArea.x++;","    }","","    if (forceNew) {","        this._renderArea.width++;","    }","};","","/**"," * Renders tiles to the top, pulling from the far bottom"," *"," * @method _renderUp"," * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle"," * @private"," */","Tilelayer.prototype._renderUp = function (forceNew) {","    this._renderArea.y--;","","    // move all the far bottom tiles to the top side","    for (var i = 0; i < this._renderArea.width; ++i) {","        this.moveTileSprite(","            forceNew ? -1 : this._renderArea.left + i,","            forceNew ? -1 : this._renderArea.bottom,","            this._renderArea.left + i,","            this._renderArea.top","        );","    }","","    if (forceNew) {","        this._renderArea.height++;","    }","};","","/**"," * Renders tiles to the bottom, pulling from the far top"," *"," * @method _renderDown"," * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle"," * @private"," */","Tilelayer.prototype._renderDown = function (forceNew) {","    // move all the far top tiles to the bottom side","    for (var i = 0; i < this._renderArea.width; ++i) {","        this.moveTileSprite(","            forceNew ? -1 : this._renderArea.left + i,","            forceNew ? -1 : this._renderArea.top,","            this._renderArea.left + i,","            this._renderArea.bottom","        );","    }","","    if (!forceNew) {","        this._renderArea.y++;","    }","","    if (forceNew) {","        this._renderArea.height++;","    }","};","","/**"," * Destroys the tile layer completely"," *"," * @method destroy"," */","Tilelayer.prototype.destroy = function () {","    this.clearTiles();","","    // this will destroy the tile sprites that are children of this group","    Phaser.Group.prototype.destroy.apply(this, arguments);","","    // destroy all the animation textures","    for (var i = 0; i < this._animTexturePool.length; ++i) {","        utils.destroyTexture(this._animTexturePool[i]);","    }","","    this._tilePool = null;","    this._animTexturePool = null;","","    this.bodies = null;","    this.tiles = null;","","    this.map = null;","    this.cameraOffset = null;","    this.scrollFactor = null;","","    this.size = null;","    this.tileIds = null;","    this.properties = null;","","    this._buffered = null;","    this._scroll = null;","    this._scrollDelta = null;","    this._renderArea = null;","    this._mc = null;","","    this.container = null;","};","","Object.defineProperty(Tilelayer.prototype, 'scrollX', {","    get: function () {","        return this._scroll.x;","    },","    set: function (value) {","        if (value !== this._scroll.x) {","            this._scrollDelta.x -= value - this._scroll.x;","            this._scroll.x = value;","        }","    }","});","","Object.defineProperty(Tilelayer.prototype, 'scrollY', {","    get: function () {","        return this._scroll.y;","    },","    set: function (value) {","        if (value !== this._scroll.y) {","            this._scrollDelta.y -= value - this._scroll.y;","            this._scroll.y = value;","        }","    }","});","","Object.defineProperty(Tilelayer.prototype, 'widthInPixels', {","    get: function () {","        return this.size.x * this.map.scaledTileWidth;","    }","});","","Object.defineProperty(Tilelayer.prototype, 'heightInPixels', {","    get: function () {","        return this.size.y * this.map.scaledTileHeight;","    }","});","","/**","* @name Phaser.TilemapLayer#collisionWidth","* @property {number} collisionWidth - The width of the collision tiles.","*/","Object.defineProperty(Tilelayer.prototype, 'collisionWidth', {","","    get: function () {","        return this._mc.cw;","    },","","    set: function (value) {","","        this._mc.cw = value;","","        // this.dirty = true;","","    }","","});","","/**","* @name Phaser.TilemapLayer#collisionHeight","* @property {number} collisionHeight - The height of the collision tiles.","*/","Object.defineProperty(Tilelayer.prototype, 'collisionHeight', {","","    get: function () {","        return this._mc.ch;","    },","","    set: function (value) {","","        this._mc.ch = value;","","        // this.dirty = true;","","    }","","});",""],"l":{"1":4,"23":1,"24":0,"26":0,"36":0,"45":0,"54":0,"60":0,"68":0,"80":0,"91":0,"100":0,"108":0,"116":0,"126":0,"133":0,"136":0,"137":0,"138":0,"139":0,"142":0,"145":0,"146":0,"147":0,"148":0,"154":0,"164":0,"167":0,"168":0,"171":0,"174":0,"175":0,"176":0,"178":0,"179":0,"182":0,"185":0,"186":0,"189":4,"190":0,"192":0,"194":0,"196":0,"197":0,"200":0,"203":0,"207":0,"210":0,"219":0,"220":0,"222":0,"224":0,"225":0,"228":0,"229":0,"232":0,"233":0,"242":0,"243":0,"245":0,"246":0,"247":0,"251":0,"253":0,"256":0,"261":0,"264":0,"266":0,"269":0,"270":0,"272":0,"281":0,"283":0,"285":0,"288":0,"289":0,"293":0,"294":0,"298":0,"301":0,"302":0,"306":0,"307":0,"308":0,"312":0,"321":0,"322":0,"323":0,"334":0,"335":0,"336":0,"337":0,"341":0,"344":0,"346":0,"347":0,"350":0,"351":0,"352":0,"353":0,"356":0,"357":0,"358":0,"359":0,"363":0,"364":0,"366":0,"367":0,"369":0,"371":0,"374":0,"376":0,"377":0,"378":0,"379":0,"381":0,"383":0,"385":0,"388":0,"389":0,"395":0,"397":0,"398":0,"399":0,"401":0,"403":0,"404":0,"407":0,"414":0,"415":0,"416":0,"419":0,"422":0,"423":0,"424":0,"427":0,"430":0,"431":0,"432":0,"434":0,"435":0,"436":0,"438":0,"439":0,"440":0,"443":0,"459":0,"461":0,"462":0,"465":0,"466":0,"469":0,"470":0,"471":0,"472":0,"475":0,"476":0,"482":0,"485":0,"486":0,"493":0,"502":0,"503":0,"504":0,"505":0,"507":0,"508":0,"510":0,"511":0,"513":0,"514":0,"520":0,"522":0,"532":0,"541":0,"542":0,"543":0,"546":0,"547":0,"548":0,"552":0,"553":0,"554":0,"557":0,"558":0,"559":0,"568":0,"571":0,"572":0,"573":0,"574":0,"578":0,"579":0,"580":0,"581":0,"585":0,"586":0,"587":0,"588":0,"592":0,"593":0,"594":0,"595":0,"598":0,"599":0,"615":0,"617":0,"618":0,"619":0,"622":0,"624":0,"626":0,"630":0,"631":0,"632":0,"634":0,"636":0,"638":0,"640":0,"641":0,"646":0,"663":0,"667":0,"668":0,"674":0,"676":0,"679":0,"681":0,"685":0,"686":0,"687":0,"688":0,"691":0,"692":0,"694":0,"696":0,"698":0,"699":0,"701":0,"703":0,"709":0,"713":0,"714":0,"724":0,"725":0,"728":0,"729":0,"737":0,"738":0,"749":0,"751":0,"752":0,"760":0,"761":0,"764":0,"765":0,"776":0,"777":0,"780":0,"781":0,"789":0,"790":0,"801":0,"803":0,"804":0,"812":0,"813":0,"816":0,"817":0,"826":0,"827":0,"830":0,"833":0,"834":0,"837":0,"838":0,"840":0,"841":0,"843":0,"844":0,"845":0,"847":0,"848":0,"849":0,"851":0,"852":0,"853":0,"854":0,"855":0,"857":0,"860":0,"862":0,"865":0,"866":0,"867":0,"872":0,"874":0,"877":0,"878":0,"879":0,"884":0,"886":0,"890":0,"892":0,"900":0,"903":0,"908":0,"920":0,"923":0,"928":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tilemap.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tilemap.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"Tilemap","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}}},"2":{"name":"(anonymous_2)","line":203,"loc":{"start":{"line":203,"column":32},"end":{"line":203,"column":65}}},"3":{"name":"(anonymous_3)","line":226,"loc":{"start":{"line":226,"column":29},"end":{"line":226,"column":55}}},"4":{"name":"(anonymous_4)","line":255,"loc":{"start":{"line":255,"column":67},"end":{"line":255,"column":83}}},"5":{"name":"(anonymous_5)","line":268,"loc":{"start":{"line":268,"column":36},"end":{"line":268,"column":52}}},"6":{"name":"(anonymous_6)","line":281,"loc":{"start":{"line":281,"column":39},"end":{"line":281,"column":55}}},"7":{"name":"(anonymous_7)","line":294,"loc":{"start":{"line":294,"column":40},"end":{"line":294,"column":56}}},"8":{"name":"(anonymous_8)","line":307,"loc":{"start":{"line":307,"column":33},"end":{"line":307,"column":49}}},"9":{"name":"(anonymous_9)","line":320,"loc":{"start":{"line":320,"column":31},"end":{"line":320,"column":47}}},"10":{"name":"(anonymous_10)","line":333,"loc":{"start":{"line":333,"column":34},"end":{"line":333,"column":50}}},"11":{"name":"(anonymous_11)","line":346,"loc":{"start":{"line":346,"column":35},"end":{"line":346,"column":51}}},"12":{"name":"(anonymous_12)","line":360,"loc":{"start":{"line":360,"column":42},"end":{"line":360,"column":59}}},"13":{"name":"(anonymous_13)","line":386,"loc":{"start":{"line":386,"column":35},"end":{"line":386,"column":52}}},"14":{"name":"(anonymous_14)","line":462,"loc":{"start":{"line":462,"column":33},"end":{"line":462,"column":56}}},"15":{"name":"(anonymous_15)","line":482,"loc":{"start":{"line":482,"column":33},"end":{"line":482,"column":56}}},"16":{"name":"(anonymous_16)","line":502,"loc":{"start":{"line":502,"column":32},"end":{"line":502,"column":55}}},"17":{"name":"(anonymous_17)","line":522,"loc":{"start":{"line":522,"column":33},"end":{"line":522,"column":56}}},"18":{"name":"(anonymous_18)","line":539,"loc":{"start":{"line":539,"column":29},"end":{"line":539,"column":46}}},"19":{"name":"(anonymous_19)","line":559,"loc":{"start":{"line":559,"column":28},"end":{"line":559,"column":51}}},"20":{"name":"(anonymous_20)","line":576,"loc":{"start":{"line":576,"column":31},"end":{"line":576,"column":54}}},"21":{"name":"(anonymous_21)","line":609,"loc":{"start":{"line":609,"column":38},"end":{"line":609,"column":84}}},"22":{"name":"(anonymous_22)","line":630,"loc":{"start":{"line":630,"column":28},"end":{"line":630,"column":57}}},"23":{"name":"(anonymous_23)","line":705,"loc":{"start":{"line":705,"column":35},"end":{"line":705,"column":87}}},"24":{"name":"(anonymous_24)","line":725,"loc":{"start":{"line":725,"column":28},"end":{"line":725,"column":60}}},"25":{"name":"(anonymous_25)","line":751,"loc":{"start":{"line":751,"column":35},"end":{"line":751,"column":81}}},"26":{"name":"(anonymous_26)","line":768,"loc":{"start":{"line":768,"column":36},"end":{"line":768,"column":48}}},"27":{"name":"(anonymous_27)","line":780,"loc":{"start":{"line":780,"column":25},"end":{"line":780,"column":37}}},"28":{"name":"(anonymous_28)","line":823,"loc":{"start":{"line":823,"column":31},"end":{"line":823,"column":49}}},"29":{"name":"(anonymous_29)","line":831,"loc":{"start":{"line":831,"column":31},"end":{"line":831,"column":43}}},"30":{"name":"(anonymous_30)","line":853,"loc":{"start":{"line":853,"column":33},"end":{"line":853,"column":58}}},"31":{"name":"(anonymous_31)","line":868,"loc":{"start":{"line":868,"column":35},"end":{"line":868,"column":47}}},"32":{"name":"(anonymous_32)","line":883,"loc":{"start":{"line":883,"column":31},"end":{"line":883,"column":43}}},"33":{"name":"(anonymous_33)","line":896,"loc":{"start":{"line":896,"column":28},"end":{"line":896,"column":40}}},"34":{"name":"(anonymous_34)","line":946,"loc":{"start":{"line":946,"column":9},"end":{"line":946,"column":21}}},"35":{"name":"(anonymous_35)","line":952,"loc":{"start":{"line":952,"column":9},"end":{"line":952,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"8":{"start":{"line":20,"column":0},"end":{"line":189,"column":1}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":46}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":46}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"13":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":15}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":58}},"16":{"start":{"line":44,"column":4},"end":{"line":44,"column":36}},"17":{"start":{"line":49,"column":4},"end":{"line":49,"column":38}},"18":{"start":{"line":54,"column":4},"end":{"line":54,"column":42}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":44}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":40}},"21":{"start":{"line":69,"column":4},"end":{"line":69,"column":40}},"22":{"start":{"line":74,"column":4},"end":{"line":74,"column":33}},"23":{"start":{"line":79,"column":4},"end":{"line":79,"column":30}},"24":{"start":{"line":84,"column":4},"end":{"line":84,"column":32}},"25":{"start":{"line":89,"column":4},"end":{"line":89,"column":66}},"26":{"start":{"line":94,"column":4},"end":{"line":94,"column":53}},"27":{"start":{"line":99,"column":4},"end":{"line":99,"column":56}},"28":{"start":{"line":104,"column":4},"end":{"line":104,"column":21}},"29":{"start":{"line":109,"column":4},"end":{"line":109,"column":23}},"30":{"start":{"line":114,"column":4},"end":{"line":114,"column":22}},"31":{"start":{"line":119,"column":4},"end":{"line":119,"column":21}},"32":{"start":{"line":124,"column":4},"end":{"line":124,"column":29}},"33":{"start":{"line":134,"column":4},"end":{"line":134,"column":26}},"34":{"start":{"line":139,"column":4},"end":{"line":139,"column":23}},"35":{"start":{"line":141,"column":4},"end":{"line":141,"column":39}},"36":{"start":{"line":142,"column":4},"end":{"line":142,"column":34}},"37":{"start":{"line":145,"column":4},"end":{"line":145,"column":24}},"38":{"start":{"line":146,"column":4},"end":{"line":146,"column":24}},"39":{"start":{"line":149,"column":4},"end":{"line":149,"column":22}},"40":{"start":{"line":152,"column":4},"end":{"line":152,"column":77}},"41":{"start":{"line":155,"column":4},"end":{"line":158,"column":5}},"42":{"start":{"line":156,"column":8},"end":{"line":156,"column":34}},"43":{"start":{"line":157,"column":8},"end":{"line":157,"column":55}},"44":{"start":{"line":161,"column":4},"end":{"line":188,"column":5}},"45":{"start":{"line":162,"column":8},"end":{"line":162,"column":16}},"46":{"start":{"line":163,"column":8},"end":{"line":163,"column":35}},"47":{"start":{"line":165,"column":8},"end":{"line":187,"column":9}},"48":{"start":{"line":167,"column":16},"end":{"line":167,"column":75}},"49":{"start":{"line":168,"column":16},"end":{"line":168,"column":38}},"50":{"start":{"line":171,"column":16},"end":{"line":171,"column":60}},"51":{"start":{"line":172,"column":16},"end":{"line":172,"column":22}},"52":{"start":{"line":175,"column":16},"end":{"line":175,"column":78}},"53":{"start":{"line":176,"column":16},"end":{"line":176,"column":39}},"54":{"start":{"line":177,"column":16},"end":{"line":177,"column":22}},"55":{"start":{"line":180,"column":16},"end":{"line":180,"column":110}},"56":{"start":{"line":182,"column":16},"end":{"line":182,"column":44}},"57":{"start":{"line":183,"column":16},"end":{"line":183,"column":41}},"58":{"start":{"line":185,"column":16},"end":{"line":185,"column":38}},"59":{"start":{"line":186,"column":16},"end":{"line":186,"column":22}},"60":{"start":{"line":191,"column":0},"end":{"line":191,"column":58}},"61":{"start":{"line":192,"column":0},"end":{"line":192,"column":40}},"62":{"start":{"line":194,"column":0},"end":{"line":194,"column":25}},"63":{"start":{"line":203,"column":0},"end":{"line":215,"column":2}},"64":{"start":{"line":204,"column":4},"end":{"line":204,"column":31}},"65":{"start":{"line":205,"column":4},"end":{"line":205,"column":33}},"66":{"start":{"line":207,"column":4},"end":{"line":207,"column":64}},"67":{"start":{"line":208,"column":4},"end":{"line":208,"column":66}},"68":{"start":{"line":210,"column":4},"end":{"line":210,"column":48}},"69":{"start":{"line":211,"column":4},"end":{"line":211,"column":50}},"70":{"start":{"line":214,"column":4},"end":{"line":214,"column":115}},"71":{"start":{"line":226,"column":0},"end":{"line":246,"column":2}},"72":{"start":{"line":228,"column":4},"end":{"line":242,"column":5}},"73":{"start":{"line":229,"column":8},"end":{"line":235,"column":9}},"74":{"start":{"line":231,"column":12},"end":{"line":234,"column":13}},"75":{"start":{"line":233,"column":16},"end":{"line":233,"column":25}},"76":{"start":{"line":237,"column":9},"end":{"line":242,"column":5}},"77":{"start":{"line":238,"column":8},"end":{"line":238,"column":26}},"78":{"start":{"line":240,"column":9},"end":{"line":242,"column":5}},"79":{"start":{"line":241,"column":8},"end":{"line":241,"column":20}},"80":{"start":{"line":244,"column":4},"end":{"line":244,"column":14}},"81":{"start":{"line":255,"column":0},"end":{"line":259,"column":2}},"82":{"start":{"line":257,"column":4},"end":{"line":257,"column":44}},"83":{"start":{"line":268,"column":0},"end":{"line":272,"column":2}},"84":{"start":{"line":270,"column":4},"end":{"line":270,"column":46}},"85":{"start":{"line":281,"column":0},"end":{"line":285,"column":2}},"86":{"start":{"line":283,"column":4},"end":{"line":283,"column":44}},"87":{"start":{"line":294,"column":0},"end":{"line":298,"column":2}},"88":{"start":{"line":296,"column":4},"end":{"line":296,"column":45}},"89":{"start":{"line":307,"column":0},"end":{"line":311,"column":2}},"90":{"start":{"line":309,"column":4},"end":{"line":309,"column":53}},"91":{"start":{"line":320,"column":0},"end":{"line":324,"column":2}},"92":{"start":{"line":322,"column":4},"end":{"line":322,"column":53}},"93":{"start":{"line":333,"column":0},"end":{"line":337,"column":2}},"94":{"start":{"line":335,"column":4},"end":{"line":335,"column":54}},"95":{"start":{"line":346,"column":0},"end":{"line":350,"column":2}},"96":{"start":{"line":348,"column":4},"end":{"line":348,"column":56}},"97":{"start":{"line":360,"column":0},"end":{"line":377,"column":2}},"98":{"start":{"line":362,"column":4},"end":{"line":366,"column":5}},"99":{"start":{"line":364,"column":8},"end":{"line":364,"column":42}},"100":{"start":{"line":365,"column":8},"end":{"line":365,"column":36}},"101":{"start":{"line":368,"column":4},"end":{"line":375,"column":5}},"102":{"start":{"line":370,"column":8},"end":{"line":370,"column":43}},"103":{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},"104":{"start":{"line":372,"column":12},"end":{"line":372,"column":35}},"105":{"start":{"line":374,"column":8},"end":{"line":374,"column":39}},"106":{"start":{"line":386,"column":0},"end":{"line":451,"column":2}},"107":{"start":{"line":388,"column":4},"end":{"line":392,"column":5}},"108":{"start":{"line":390,"column":8},"end":{"line":390,"column":45}},"109":{"start":{"line":391,"column":8},"end":{"line":391,"column":15}},"110":{"start":{"line":394,"column":4},"end":{"line":394,"column":21}},"111":{"start":{"line":395,"column":4},"end":{"line":395,"column":21}},"112":{"start":{"line":396,"column":4},"end":{"line":396,"column":20}},"113":{"start":{"line":397,"column":4},"end":{"line":397,"column":21}},"114":{"start":{"line":399,"column":4},"end":{"line":449,"column":5}},"115":{"start":{"line":401,"column":8},"end":{"line":448,"column":9}},"116":{"start":{"line":403,"column":12},"end":{"line":403,"column":91}},"117":{"start":{"line":405,"column":12},"end":{"line":447,"column":13}},"118":{"start":{"line":407,"column":16},"end":{"line":407,"column":55}},"119":{"start":{"line":408,"column":16},"end":{"line":408,"column":55}},"120":{"start":{"line":409,"column":16},"end":{"line":409,"column":53}},"121":{"start":{"line":410,"column":16},"end":{"line":410,"column":55}},"122":{"start":{"line":412,"column":16},"end":{"line":418,"column":17}},"123":{"start":{"line":414,"column":20},"end":{"line":414,"column":40}},"124":{"start":{"line":415,"column":20},"end":{"line":415,"column":43}},"125":{"start":{"line":416,"column":20},"end":{"line":416,"column":41}},"126":{"start":{"line":417,"column":20},"end":{"line":417,"column":42}},"127":{"start":{"line":420,"column":16},"end":{"line":425,"column":17}},"128":{"start":{"line":424,"column":20},"end":{"line":424,"column":41}},"129":{"start":{"line":427,"column":16},"end":{"line":432,"column":17}},"130":{"start":{"line":431,"column":20},"end":{"line":431,"column":44}},"131":{"start":{"line":434,"column":16},"end":{"line":439,"column":17}},"132":{"start":{"line":438,"column":20},"end":{"line":438,"column":42}},"133":{"start":{"line":441,"column":16},"end":{"line":446,"column":17}},"134":{"start":{"line":445,"column":20},"end":{"line":445,"column":43}},"135":{"start":{"line":462,"column":0},"end":{"line":471,"column":2}},"136":{"start":{"line":464,"column":4},"end":{"line":467,"column":5}},"137":{"start":{"line":466,"column":8},"end":{"line":466,"column":91}},"138":{"start":{"line":469,"column":4},"end":{"line":469,"column":16}},"139":{"start":{"line":482,"column":0},"end":{"line":491,"column":2}},"140":{"start":{"line":484,"column":4},"end":{"line":487,"column":5}},"141":{"start":{"line":486,"column":8},"end":{"line":486,"column":91}},"142":{"start":{"line":489,"column":4},"end":{"line":489,"column":16}},"143":{"start":{"line":502,"column":0},"end":{"line":511,"column":2}},"144":{"start":{"line":504,"column":4},"end":{"line":507,"column":5}},"145":{"start":{"line":506,"column":8},"end":{"line":506,"column":87}},"146":{"start":{"line":509,"column":4},"end":{"line":509,"column":16}},"147":{"start":{"line":522,"column":0},"end":{"line":531,"column":2}},"148":{"start":{"line":524,"column":4},"end":{"line":527,"column":5}},"149":{"start":{"line":526,"column":8},"end":{"line":526,"column":87}},"150":{"start":{"line":529,"column":4},"end":{"line":529,"column":16}},"151":{"start":{"line":539,"column":0},"end":{"line":548,"column":2}},"152":{"start":{"line":541,"column":4},"end":{"line":541,"column":42}},"153":{"start":{"line":543,"column":4},"end":{"line":546,"column":5}},"154":{"start":{"line":545,"column":8},"end":{"line":545,"column":34}},"155":{"start":{"line":559,"column":0},"end":{"line":565,"column":2}},"156":{"start":{"line":561,"column":4},"end":{"line":561,"column":42}},"157":{"start":{"line":563,"column":4},"end":{"line":563,"column":84}},"158":{"start":{"line":576,"column":0},"end":{"line":595,"column":2}},"159":{"start":{"line":578,"column":4},"end":{"line":578,"column":42}},"160":{"start":{"line":580,"column":4},"end":{"line":593,"column":5}},"161":{"start":{"line":582,"column":8},"end":{"line":592,"column":9}},"162":{"start":{"line":584,"column":12},"end":{"line":584,"column":54}},"163":{"start":{"line":586,"column":12},"end":{"line":586,"column":50}},"164":{"start":{"line":587,"column":12},"end":{"line":587,"column":44}},"165":{"start":{"line":589,"column":12},"end":{"line":589,"column":39}},"166":{"start":{"line":591,"column":12},"end":{"line":591,"column":24}},"167":{"start":{"line":609,"column":0},"end":{"line":616,"column":2}},"168":{"start":{"line":611,"column":4},"end":{"line":611,"column":61}},"169":{"start":{"line":612,"column":4},"end":{"line":612,"column":63}},"170":{"start":{"line":614,"column":4},"end":{"line":614,"column":40}},"171":{"start":{"line":630,"column":0},"end":{"line":691,"column":2}},"172":{"start":{"line":632,"column":4},"end":{"line":635,"column":5}},"173":{"start":{"line":634,"column":8},"end":{"line":634,"column":44}},"174":{"start":{"line":637,"column":4},"end":{"line":637,"column":42}},"175":{"start":{"line":639,"column":4},"end":{"line":639,"column":15}},"176":{"start":{"line":640,"column":4},"end":{"line":640,"column":16}},"177":{"start":{"line":642,"column":4},"end":{"line":687,"column":5}},"178":{"start":{"line":644,"column":8},"end":{"line":646,"column":9}},"179":{"start":{"line":645,"column":12},"end":{"line":645,"column":45}},"180":{"start":{"line":648,"column":8},"end":{"line":671,"column":9}},"181":{"start":{"line":650,"column":12},"end":{"line":650,"column":58}},"182":{"start":{"line":652,"column":12},"end":{"line":652,"column":53}},"183":{"start":{"line":653,"column":12},"end":{"line":653,"column":46}},"184":{"start":{"line":655,"column":12},"end":{"line":662,"column":13}},"185":{"start":{"line":657,"column":16},"end":{"line":657,"column":58}},"186":{"start":{"line":661,"column":16},"end":{"line":661,"column":112}},"187":{"start":{"line":666,"column":12},"end":{"line":666,"column":54}},"188":{"start":{"line":667,"column":12},"end":{"line":667,"column":46}},"189":{"start":{"line":669,"column":12},"end":{"line":669,"column":50}},"190":{"start":{"line":670,"column":12},"end":{"line":670,"column":108}},"191":{"start":{"line":682,"column":8},"end":{"line":682,"column":40}},"192":{"start":{"line":684,"column":8},"end":{"line":684,"column":35}},"193":{"start":{"line":686,"column":8},"end":{"line":686,"column":46}},"194":{"start":{"line":689,"column":4},"end":{"line":689,"column":16}},"195":{"start":{"line":705,"column":0},"end":{"line":712,"column":2}},"196":{"start":{"line":707,"column":4},"end":{"line":707,"column":61}},"197":{"start":{"line":708,"column":4},"end":{"line":708,"column":63}},"198":{"start":{"line":710,"column":4},"end":{"line":710,"column":43}},"199":{"start":{"line":725,"column":0},"end":{"line":738,"column":2}},"200":{"start":{"line":727,"column":4},"end":{"line":727,"column":60}},"201":{"start":{"line":727,"column":42},"end":{"line":727,"column":58}},"202":{"start":{"line":729,"column":4},"end":{"line":729,"column":42}},"203":{"start":{"line":731,"column":4},"end":{"line":734,"column":5}},"204":{"start":{"line":733,"column":8},"end":{"line":733,"column":83}},"205":{"start":{"line":736,"column":4},"end":{"line":736,"column":16}},"206":{"start":{"line":751,"column":0},"end":{"line":761,"column":2}},"207":{"start":{"line":753,"column":4},"end":{"line":753,"column":73}},"208":{"start":{"line":753,"column":44},"end":{"line":753,"column":71}},"209":{"start":{"line":754,"column":4},"end":{"line":754,"column":76}},"210":{"start":{"line":754,"column":45},"end":{"line":754,"column":74}},"211":{"start":{"line":756,"column":4},"end":{"line":756,"column":61}},"212":{"start":{"line":757,"column":4},"end":{"line":757,"column":63}},"213":{"start":{"line":759,"column":4},"end":{"line":759,"column":37}},"214":{"start":{"line":768,"column":0},"end":{"line":773,"column":2}},"215":{"start":{"line":770,"column":4},"end":{"line":770,"column":27}},"216":{"start":{"line":771,"column":4},"end":{"line":771,"column":26}},"217":{"start":{"line":780,"column":0},"end":{"line":814,"column":2}},"218":{"start":{"line":782,"column":4},"end":{"line":782,"column":17}},"219":{"start":{"line":783,"column":4},"end":{"line":783,"column":20}},"220":{"start":{"line":785,"column":4},"end":{"line":809,"column":5}},"221":{"start":{"line":787,"column":8},"end":{"line":806,"column":9}},"222":{"start":{"line":789,"column":12},"end":{"line":789,"column":26}},"223":{"start":{"line":791,"column":12},"end":{"line":805,"column":13}},"224":{"start":{"line":793,"column":16},"end":{"line":800,"column":17}},"225":{"start":{"line":795,"column":20},"end":{"line":795,"column":106}},"226":{"start":{"line":799,"column":20},"end":{"line":799,"column":53}},"227":{"start":{"line":804,"column":16},"end":{"line":804,"column":54}},"228":{"start":{"line":808,"column":8},"end":{"line":808,"column":20}},"229":{"start":{"line":811,"column":4},"end":{"line":811,"column":18}},"230":{"start":{"line":812,"column":4},"end":{"line":812,"column":37}},"231":{"start":{"line":823,"column":0},"end":{"line":829,"column":2}},"232":{"start":{"line":824,"column":4},"end":{"line":828,"column":5}},"233":{"start":{"line":825,"column":8},"end":{"line":827,"column":9}},"234":{"start":{"line":826,"column":12},"end":{"line":826,"column":36}},"235":{"start":{"line":831,"column":0},"end":{"line":844,"column":2}},"236":{"start":{"line":832,"column":4},"end":{"line":839,"column":5}},"237":{"start":{"line":833,"column":8},"end":{"line":833,"column":51}},"238":{"start":{"line":834,"column":8},"end":{"line":834,"column":51}},"239":{"start":{"line":836,"column":8},"end":{"line":836,"column":58}},"240":{"start":{"line":838,"column":8},"end":{"line":838,"column":26}},"241":{"start":{"line":841,"column":4},"end":{"line":841,"column":61}},"242":{"start":{"line":843,"column":4},"end":{"line":843,"column":23}},"243":{"start":{"line":853,"column":0},"end":{"line":859,"column":2}},"244":{"start":{"line":854,"column":4},"end":{"line":856,"column":5}},"245":{"start":{"line":855,"column":8},"end":{"line":855,"column":45}},"246":{"start":{"line":858,"column":4},"end":{"line":858,"column":16}},"247":{"start":{"line":868,"column":0},"end":{"line":874,"column":2}},"248":{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},"249":{"start":{"line":870,"column":8},"end":{"line":870,"column":34}},"250":{"start":{"line":873,"column":4},"end":{"line":873,"column":16}},"251":{"start":{"line":883,"column":0},"end":{"line":889,"column":2}},"252":{"start":{"line":884,"column":4},"end":{"line":886,"column":5}},"253":{"start":{"line":885,"column":8},"end":{"line":885,"column":36}},"254":{"start":{"line":888,"column":4},"end":{"line":888,"column":16}},"255":{"start":{"line":896,"column":0},"end":{"line":938,"column":2}},"256":{"start":{"line":897,"column":4},"end":{"line":897,"column":58}},"257":{"start":{"line":899,"column":4},"end":{"line":901,"column":5}},"258":{"start":{"line":900,"column":8},"end":{"line":900,"column":35}},"259":{"start":{"line":903,"column":4},"end":{"line":903,"column":25}},"260":{"start":{"line":904,"column":4},"end":{"line":904,"column":22}},"261":{"start":{"line":905,"column":4},"end":{"line":905,"column":22}},"262":{"start":{"line":907,"column":4},"end":{"line":907,"column":20}},"263":{"start":{"line":908,"column":4},"end":{"line":908,"column":21}},"264":{"start":{"line":909,"column":4},"end":{"line":909,"column":26}},"265":{"start":{"line":910,"column":4},"end":{"line":910,"column":27}},"266":{"start":{"line":911,"column":4},"end":{"line":911,"column":32}},"267":{"start":{"line":912,"column":4},"end":{"line":912,"column":33}},"268":{"start":{"line":913,"column":4},"end":{"line":913,"column":28}},"269":{"start":{"line":914,"column":4},"end":{"line":914,"column":23}},"270":{"start":{"line":915,"column":4},"end":{"line":915,"column":24}},"271":{"start":{"line":916,"column":4},"end":{"line":916,"column":27}},"272":{"start":{"line":917,"column":4},"end":{"line":917,"column":30}},"273":{"start":{"line":918,"column":4},"end":{"line":918,"column":31}},"274":{"start":{"line":920,"column":4},"end":{"line":920,"column":23}},"275":{"start":{"line":922,"column":4},"end":{"line":922,"column":25}},"276":{"start":{"line":924,"column":4},"end":{"line":924,"column":24}},"277":{"start":{"line":926,"column":4},"end":{"line":926,"column":23}},"278":{"start":{"line":928,"column":4},"end":{"line":928,"column":31}},"279":{"start":{"line":930,"column":4},"end":{"line":930,"column":25}},"280":{"start":{"line":932,"column":4},"end":{"line":932,"column":29}},"281":{"start":{"line":933,"column":4},"end":{"line":933,"column":38}},"282":{"start":{"line":934,"column":4},"end":{"line":934,"column":34}},"283":{"start":{"line":935,"column":4},"end":{"line":935,"column":27}},"284":{"start":{"line":936,"column":4},"end":{"line":936,"column":27}},"285":{"start":{"line":937,"column":4},"end":{"line":937,"column":22}},"286":{"start":{"line":944,"column":0},"end":{"line":961,"column":3}},"287":{"start":{"line":948,"column":8},"end":{"line":948,"column":46}},"288":{"start":{"line":954,"column":8},"end":{"line":957,"column":9}},"289":{"start":{"line":956,"column":12},"end":{"line":956,"column":33}},"290":{"start":{"line":963,"column":0},"end":{"line":965,"column":1}},"291":{"start":{"line":964,"column":4},"end":{"line":964,"column":26}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"2":{"line":165,"type":"switch","locations":[{"start":{"line":166,"column":12},"end":{"line":172,"column":22}},{"start":{"line":174,"column":12},"end":{"line":177,"column":22}},{"start":{"line":179,"column":12},"end":{"line":186,"column":22}}]},"3":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"4":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":12}},{"start":{"line":231,"column":12},"end":{"line":231,"column":12}}]},"5":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":9},"end":{"line":237,"column":9}},{"start":{"line":237,"column":9},"end":{"line":237,"column":9}}]},"6":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":9},"end":{"line":240,"column":9}},{"start":{"line":240,"column":9},"end":{"line":240,"column":9}}]},"7":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"8":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":9},"end":{"line":362,"column":23}},{"start":{"line":362,"column":29},"end":{"line":362,"column":64}}]},"9":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"10":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":9},"end":{"line":368,"column":25}},{"start":{"line":368,"column":31},"end":{"line":368,"column":66}}]},"11":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"12":{"line":403,"type":"cond-expr","locations":[{"start":{"line":403,"column":53},"end":{"line":403,"column":83}},{"start":{"line":403,"column":86},"end":{"line":403,"column":90}}]},"13":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":12},"end":{"line":405,"column":12}},{"start":{"line":405,"column":12},"end":{"line":405,"column":12}}]},"14":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":16},"end":{"line":412,"column":16}},{"start":{"line":412,"column":16},"end":{"line":412,"column":16}}]},"15":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":16},"end":{"line":420,"column":16}},{"start":{"line":420,"column":16},"end":{"line":420,"column":16}}]},"16":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":20},"end":{"line":420,"column":25}},{"start":{"line":420,"column":29},"end":{"line":420,"column":43}}]},"17":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":16},"end":{"line":427,"column":16}},{"start":{"line":427,"column":16},"end":{"line":427,"column":16}}]},"18":{"line":427,"type":"binary-expr","locations":[{"start":{"line":427,"column":20},"end":{"line":427,"column":25}},{"start":{"line":427,"column":29},"end":{"line":427,"column":43}}]},"19":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":16},"end":{"line":434,"column":16}},{"start":{"line":434,"column":16},"end":{"line":434,"column":16}}]},"20":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":20},"end":{"line":434,"column":24}},{"start":{"line":434,"column":28},"end":{"line":434,"column":41}}]},"21":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":16},"end":{"line":441,"column":16}},{"start":{"line":441,"column":16},"end":{"line":441,"column":16}}]},"22":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":20},"end":{"line":441,"column":25}},{"start":{"line":441,"column":29},"end":{"line":441,"column":43}}]},"23":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":4},"end":{"line":464,"column":4}},{"start":{"line":464,"column":4},"end":{"line":464,"column":4}}]},"24":{"line":466,"type":"cond-expr","locations":[{"start":{"line":466,"column":49},"end":{"line":466,"column":83}},{"start":{"line":466,"column":86},"end":{"line":466,"column":90}}]},"25":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":4},"end":{"line":484,"column":4}},{"start":{"line":484,"column":4},"end":{"line":484,"column":4}}]},"26":{"line":486,"type":"cond-expr","locations":[{"start":{"line":486,"column":49},"end":{"line":486,"column":83}},{"start":{"line":486,"column":86},"end":{"line":486,"column":90}}]},"27":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":4},"end":{"line":504,"column":4}},{"start":{"line":504,"column":4},"end":{"line":504,"column":4}}]},"28":{"line":506,"type":"cond-expr","locations":[{"start":{"line":506,"column":45},"end":{"line":506,"column":79}},{"start":{"line":506,"column":82},"end":{"line":506,"column":86}}]},"29":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":4},"end":{"line":524,"column":4}},{"start":{"line":524,"column":4},"end":{"line":524,"column":4}}]},"30":{"line":526,"type":"cond-expr","locations":[{"start":{"line":526,"column":45},"end":{"line":526,"column":79}},{"start":{"line":526,"column":82},"end":{"line":526,"column":86}}]},"31":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":4},"end":{"line":543,"column":4}},{"start":{"line":543,"column":4},"end":{"line":543,"column":4}}]},"32":{"line":563,"type":"cond-expr","locations":[{"start":{"line":563,"column":44},"end":{"line":563,"column":74}},{"start":{"line":563,"column":77},"end":{"line":563,"column":82}}]},"33":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":4},"end":{"line":580,"column":4}},{"start":{"line":580,"column":4},"end":{"line":580,"column":4}}]},"34":{"line":580,"type":"binary-expr","locations":[{"start":{"line":580,"column":8},"end":{"line":580,"column":14}},{"start":{"line":580,"column":18},"end":{"line":580,"column":47}},{"start":{"line":580,"column":51},"end":{"line":580,"column":57}},{"start":{"line":580,"column":61},"end":{"line":580,"column":90}}]},"35":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":8},"end":{"line":582,"column":8}},{"start":{"line":582,"column":8},"end":{"line":582,"column":8}}]},"36":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":4},"end":{"line":632,"column":4}},{"start":{"line":632,"column":4},"end":{"line":632,"column":4}}]},"37":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":4},"end":{"line":642,"column":4}},{"start":{"line":642,"column":4},"end":{"line":642,"column":4}}]},"38":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":8},"end":{"line":642,"column":14}},{"start":{"line":642,"column":18},"end":{"line":642,"column":47}},{"start":{"line":642,"column":51},"end":{"line":642,"column":57}},{"start":{"line":642,"column":61},"end":{"line":642,"column":90}}]},"39":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":8},"end":{"line":644,"column":8}},{"start":{"line":644,"column":8},"end":{"line":644,"column":8}}]},"40":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":8},"end":{"line":648,"column":8}},{"start":{"line":648,"column":8},"end":{"line":648,"column":8}}]},"41":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":12},"end":{"line":655,"column":12}},{"start":{"line":655,"column":12},"end":{"line":655,"column":12}}]},"42":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":4},"end":{"line":727,"column":4}},{"start":{"line":727,"column":4},"end":{"line":727,"column":4}}]},"43":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":4},"end":{"line":731,"column":4}},{"start":{"line":731,"column":4},"end":{"line":731,"column":4}}]},"44":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":8},"end":{"line":731,"column":14}},{"start":{"line":731,"column":18},"end":{"line":731,"column":47}},{"start":{"line":731,"column":51},"end":{"line":731,"column":57}},{"start":{"line":731,"column":61},"end":{"line":731,"column":90}}]},"45":{"line":733,"type":"cond-expr","locations":[{"start":{"line":733,"column":45},"end":{"line":733,"column":75}},{"start":{"line":733,"column":78},"end":{"line":733,"column":82}}]},"46":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":4},"end":{"line":753,"column":4}},{"start":{"line":753,"column":4},"end":{"line":753,"column":4}}]},"47":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":4},"end":{"line":754,"column":4}},{"start":{"line":754,"column":4},"end":{"line":754,"column":4}}]},"48":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":12},"end":{"line":791,"column":12}},{"start":{"line":791,"column":12},"end":{"line":791,"column":12}}]},"49":{"line":791,"type":"binary-expr","locations":[{"start":{"line":791,"column":16},"end":{"line":791,"column":55}},{"start":{"line":791,"column":59},"end":{"line":791,"column":101}}]},"50":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":16},"end":{"line":793,"column":16}},{"start":{"line":793,"column":16},"end":{"line":793,"column":16}}]},"51":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":8},"end":{"line":825,"column":8}},{"start":{"line":825,"column":8},"end":{"line":825,"column":8}}]},"52":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":4},"end":{"line":832,"column":4}},{"start":{"line":832,"column":4},"end":{"line":832,"column":4}}]},"53":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":8},"end":{"line":832,"column":52}},{"start":{"line":832,"column":56},"end":{"line":832,"column":100}}]},"54":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":8},"end":{"line":954,"column":8}},{"start":{"line":954,"column":8},"end":{"line":954,"column":8}}]}},"code":["var Tilelayer = require('./Tilelayer');","var Objectlayer = require('./Objectlayer');","var Tile = require('./Tile');","var Tileset = require('./Tileset');","var TilemapParser = require('./TilemapParser');","var utils = require('../utils');","var C = require('../constants');","","/**"," * Tiled map that represents an entire tile map with multiple layers or object groups."," * Often it is easier to create a tilemap using the object factor on a world, rather"," * than doing it manually yourself."," *"," * @class Tilemap"," * @constructor"," * @param {Phaser.Game} game - Game reference to the currently running game."," * @param {string} [key] - The name of the tiledmap, this is usually the filename without the extension."," * @param {Phaser.Group|Phaser.SpriteBatch} [group] - Group to add the tilemap to."," */","function Tilemap(game, key, group) {","    Phaser.Group.call(this, game, group, key);","","    var data = TilemapParser.parse(game, key);","","    this.type = Phaser.TILEMAP;","","    /**","     * The key of this map data in the Phaser.Cache.","     *","     * @property key","     * @type String","     */","    this.key = key;","","    if (data === null) {","        return;","    }","","    this.size = new Phaser.Point(data.width, data.height);","","    /**","     * @property {number} tileWidth - The base width of the tiles in the map (in pixels).","     */","    this.tileWidth = data.tilewidth;","","    /**","     * @property {number} tileHeight - The base height of the tiles in the map (in pixels).","     */","    this.tileHeight = data.tileheight;","","    /**","     * @property {number} scaledTileWidth - The scaled width of the tiles in the map (in pixels).","     */","    this.scaledTileWidth = this.tileWidth;","","    /**","     * @property {number} scaledTileHeight - The scaled height of the tiles in the map (in pixels).","     */","    this.scaledTileHeight = this.tileHeight;","","    /**","     * @property {string} orientation - The orientation of the map data (as specified in Tiled), usually 'orthogonal'.","     */","    this.orientation = data.orientation;","","    /**","     * @property {string} renderorder - The renderorder of the map","     */","    this.renderorder = data.renderorder;","","    /**","     * @property {boolean} obeyRenderorder - If true then the map's renderorder will be obeyed.  Defaults to false.","     */","    this.obeyRenderorder = false;","","    /**","     * @property {number} format - The format of the map data, either Phaser.Tilemap.CSV or Phaser.Tilemap.TILED_JSON.","     */","    this.format = data.format;","","    /**","     * @property {number} version - The version of the map data (as specified in Tiled, usually 1).","     */","    this.version = data.version;","","    /**","     * @property {object} properties - Map specific properties as specified in Tiled.","     */","    this.properties = utils.parseTiledProperties(data.properties);","","    /**","     * @property {number} widthInPixels - The width of the map in pixels based on width * tileWidth.","     */","    this.widthInPixels = data.width * data.tilewidth;","","    /**","     * @property {number} heightInPixels - The height of the map in pixels based on height * tileHeight.","     */","    this.heightInPixels = data.height * data.tileheight;","","    /**","     * @property {array} layers - An array of Tilemap layer data.","     */","    this.layers = [];","","    /**","     * @property {array} tilesets - An array of Tilesets.","     */","    this.tilesets = [];","","    /**","     * @property {array} objects - An array of Tiled Object Layers.","     */","    this.objects = [];","","    /**","     * @property {array} images - An array of Tiled Image Layers.","     */","    this.images = [];","","    /**","     * @property {array} collideIndexes - An array of tile indexes that collide.","     */","    this.collideIndexes = [];","","    /**","     * @property {array} collision - An array of collision data (polylines, etc).","     */","    // this.collision = data.collision;","","    /**","     * @property {number} currentLayer - The current layer.","     */","    this.currentLayer = 0;","","    /**","     * @property {array} debugMap - Map data used for debug values only.","     */","    this.debugMap = [];","","    this.preventingRecalculate = false;","    this.needToRecalculate = null;","","    // tell when camera scale is modified","    this._camScaleX = 0;","    this._camScaleY = 0;","","    // should all layers do a full rerender?","    this.dirty = true;","","    // update the world bounds","    this.game.world.setBounds(0, 0, this.widthInPixels, this.heightInPixels);","","    // create each tileset","    for (var t = 0, tl = data.tilesets.length; t < tl; ++t) {","        var ts = data.tilesets[t];","        this.tilesets.push(new Tileset(game, key, ts));","    }","","    // create each layer","    for (var i = 0, il = data.layers.length; i < il; ++i) {","        var lyr;","        var ldata = data.layers[i];","","        switch (ldata.type) {","            case 'tilelayer':","                lyr = new Tilelayer(game, this, ldata, this.layers.length);","                this.layers.push(lyr);","","                // calculate the tile faces","                this.calculateFaces(this.layers.length - 1);","                break;","","            case 'objectgroup':","                lyr = new Objectlayer(game, this, ldata, this.objects.length);","                this.objects.push(lyr);","                break;","","            case 'imagelayer':","                lyr = game.add.sprite(ldata.x, ldata.y, utils.cacheKey(key, 'layer', ldata.name), null, this);","","                lyr.visible = ldata.visible;","                lyr.apha = ldata.opacity;","","                this.images.push(lyr);","                break;","        }","    }","}","","Tilemap.prototype = Object.create(Phaser.Group.prototype);","Tilemap.prototype.constructor = Tilemap;","","module.exports = Tilemap;","","/**"," * Sets the base tile size for the map."," *"," * @method setTileSize"," * @param {number} tileWidth - The width of the tiles the map uses for calculations."," * @param {number} tileHeight - The height of the tiles the map uses for calculations."," */","Tilemap.prototype.setTileSize = function (tileWidth, tileHeight) {","    this.tileWidth = tileWidth;","    this.tileHeight = tileHeight;","","    this.scaledTileWidth = tileWidth * this.game.camera.scale.x;","    this.scaledTileHeight = tileHeight * this.game.camera.scale.y;","","    this.widthInPixels = this.width * tileWidth;","    this.heightInPixels = this.height * tileWidth;","","    // update the world bounds","    this.game.world.setBounds(0, 0, this.width * this.game.camera.scale.x, this.height * this.game.camera.scale.y);","};","","/**","* Gets the layer index based on the layers name.","*","* @method Phaser.Tilemap#getIndex","* @protected","* @param {array} location - The local array to search.","* @param {number|string|object} name - The name of the array element to get.","* @return {number} The index of the element in the array, or null if not found.","*/","Tilemap.prototype.getIndex = function (location, name) {","","    if (typeof name === 'string') {","        for (var i = 0; i < location.length; i++)","        {","            if (location[i].name === name)","            {","                return i;","            }","        }","    }","    else if (typeof name === 'object') {","        return name.index;","    }","    else if (typeof name === 'number') {","        return name;","    }","","    return -1;","","};","","/**","* Gets the layer index based on its name.","*","* @method Phaser.Tilemap#getTilelayerIndex","* @param {number|string|object} name - The name of the layer to get.","* @return {number} The index of the layer in this tilemap, or null if not found.","*/","Tilemap.prototype.getTilelayerIndex = Tilemap.prototype.getLayer = function (name) {","","    return this.getIndex(this.layers, name);","","};","","/**","* Gets the tileset index based on its name.","*","* @method Phaser.Tilemap#getTilesetIndex","* @param {number|string|object} name - The name of the tileset to get.","* @return {number} The index of the tileset in this tilemap, or null if not found.","*/","Tilemap.prototype.getTilesetIndex = function (name) {","","    return this.getIndex(this.tilesets, name);","","};","","/**","* Gets the image index based on its name.","*","* @method Phaser.Tilemap#getImagelayer","* @param {number|string|object} name - The name of the image to get.","* @return {number} The index of the image in this tilemap, or null if not found.","*/","Tilemap.prototype.getImagelayerIndex = function (name) {","","    return this.getIndex(this.images, name);","","};","","/**","* Gets the object index based on its name.","*","* @method Phaser.Tilemap#getObjectlayerIndex","* @param {number|string|object} name - The name of the object to get.","* @return {number} The index of the object in this tilemap, or null if not found.","*/","Tilemap.prototype.getObjectlayerIndex = function (name) {","","    return this.getIndex(this.objects, name);","","};","","/**","* Gets the layer based on its name.","*","* @method Phaser.Tilemap#getTilelayer","* @param {number|string|object} name - The name of the layer to get.","* @return {Tilelayer} The index of the layer in this tilemap, or null if not found.","*/","Tilemap.prototype.getTilelayer = function (name) {","","    return this.layers[this.getTilelayerIndex(name)];","","};","","/**","* Gets the tileset index based on its name.","*","* @method Phaser.Tilemap#getTileset","* @param {number|string|object} name - The name of the tileset to get.","* @return {Tileset} The index of the tileset in this tilemap, or null if not found.","*/","Tilemap.prototype.getTileset = function (name) {","","    return this.tilesets[this.getTilesetIndex(name)];","","};","","/**","* Gets the image index based on its name.","*","* @method Phaser.Tilemap#getImagelayer","* @param {number|string|object} name - The name of the image to get.","* @return {Image} The index of the image in this tilemap, or null if not found.","*/","Tilemap.prototype.getImagelayer = function (name) {","","    return this.images[this.getImagelayerIndex(name)];","","};","","/**","* Gets the object index based on its name.","*","* @method Phaser.Tilemap#getObjectlayer","* @param {number|string|object} name - The name of the object to get.","* @return {Objectlayer} The index of the object in this tilemap, or null if not found.","*/","Tilemap.prototype.getObjectlayer = function (name) {","","    return this.objects[this.getObjectlayerIndex(name)];","","};","","/**","* Turn off/on the recalculation of faces for tile or collission updates.","* setPreventRecalculate(true) puts recalculation on hold while","* setPreventRecalculate(false) recalculates all the changed layers.","*","* @method Phaser.Tilemap#setPreventRecalculate","* @param {boolean} if true it will put the recalculation on hold.","*/","Tilemap.prototype.setPreventRecalculate = function (value) {","","    if ((value === true) && (this.preventingRecalculate !== true))","    {","        this.preventingRecalculate = true;","        this.needToRecalculate = {};","    }","","    if ((value ===  false) && (this.preventingRecalculate === true))","    {","        this.preventingRecalculate = false;","        for (var i in this.needToRecalculate) {","            this.calculateFaces(i);","        }","        this.needToRecalculate = false;","    }","","};","","/**","* Internal function.","*","* @method Phaser.Tilemap#calculateFaces","* @protected","* @param {number} layer - The index of the TilemapLayer to operate on.","*/","Tilemap.prototype.calculateFaces = function (layer) {","","    if (this.preventingRecalculate)","    {","        this.needToRecalculate[layer] = true;","        return;","    }","","    var above = null;","    var below = null;","    var left = null;","    var right = null;","","    for (var y = 0, h = this.layers[layer].size.y; y < h; y++)","    {","        for (var x = 0, w = this.layers[layer].size.x; x < w; x++)","        {","            var tile = this.layers[layer].tiles[y] ? this.layers[layer].tiles[y][x] : null;","","            if (tile)","            {","                above = this.getTileAbove(layer, x, y);","                below = this.getTileBelow(layer, x, y);","                left = this.getTileLeft(layer, x, y);","                right = this.getTileRight(layer, x, y);","","                if (tile.collides)","                {","                    tile.faceTop = true;","                    tile.faceBottom = true;","                    tile.faceLeft = true;","                    tile.faceRight = true;","                }","","                if (above && above.collides)","                {","                    //  There is a tile above this one that also collides,","                    // so the top of this tile is no longer interesting","                    tile.faceTop = false;","                }","","                if (below && below.collides)","                {","                    //  There is a tile below this one that also collides,","                    // so the bottom of this tile is no longer interesting","                    tile.faceBottom = false;","                }","","                if (left && left.collides)","                {","                    //  There is a tile left this one that also collides,","                    // so the left of this tile is no longer interesting","                    tile.faceLeft = false;","                }","","                if (right && right.collides)","                {","                    //  There is a tile right this one that also collides,","                    // so the right of this tile is no longer interesting","                    tile.faceRight = false;","                }","            }","        }","    }","","};","","/**","* Gets the tile above the tile coordinates given.","* Mostly used as an internal function by calculateFaces.","*","* @method Phaser.Tilemap#getTileAbove","* @param {number} layer - The local layer index to get the tile from.","* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.","* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.","*/","Tilemap.prototype.getTileAbove = function (layer, x, y) {","","    if (y > 0)","    {","        return this.layers[layer].tiles[y - 1] ? this.layers[layer].tiles[y - 1][x] : null;","    }","","    return null;","","};","","/**","* Gets the tile below the tile coordinates given.","* Mostly used as an internal function by calculateFaces.","*","* @method Phaser.Tilemap#getTileBelow","* @param {number} layer - The local layer index to get the tile from.","* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.","* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.","*/","Tilemap.prototype.getTileBelow = function (layer, x, y) {","","    if (y < this.layers[layer].height - 1)","    {","        return this.layers[layer].tiles[y + 1] ? this.layers[layer].tiles[y + 1][x] : null;","    }","","    return null;","","};","","/**","* Gets the tile to the left of the tile coordinates given.","* Mostly used as an internal function by calculateFaces.","*","* @method Phaser.Tilemap#getTileLeft","* @param {number} layer - The local layer index to get the tile from.","* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.","* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.","*/","Tilemap.prototype.getTileLeft = function (layer, x, y) {","","    if (x > 0)","    {","        return this.layers[layer].tiles[y] ? this.layers[layer].tiles[y][x - 1] : null;","    }","","    return null;","","};","","/**","* Gets the tile to the right of the tile coordinates given.","* Mostly used as an internal function by calculateFaces.","*","* @method Phaser.Tilemap#getTileRight","* @param {number} layer - The local layer index to get the tile from.","* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.","* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.","*/","Tilemap.prototype.getTileRight = function (layer, x, y) {","","    if (x < this.layers[layer].size.x - 1)","    {","        return this.layers[layer].tiles[y] ? this.layers[layer].tiles[y][x + 1] : null;","    }","","    return null;","","};","","/**","* Sets the current layer to the given index.","*","* @method Phaser.Tilemap#setLayer","* @param {number|string|Phaser.TilemapLayer} layer - The layer to set as current.","*/","Tilemap.prototype.setLayer = function (layer) {","","    layer = this.getTilelayerIndex(layer);","","    if (this.layers[layer])","    {","        this.currentLayer = layer;","    }","","};","","/**","* Checks if there is a tile at the given location.","*","* @method Phaser.Tilemap#hasTile","* @param {number} x - X position to check if a tile exists at (given in tile units, not pixels)","* @param {number} y - Y position to check if a tile exists at (given in tile units, not pixels)","* @param {number|string|Phaser.TilemapLayer} layer - The layer to set as current.","* @return {boolean} True if there is a tile at the given location, otherwise false.","*/","Tilemap.prototype.hasTile = function (x, y, layer) {","","    layer = this.getTilelayerIndex(layer);","","    return !!(this.layers[layer].tiles[y] ? this.layers[layer].tiles[y][x] : false);","","};","","/**","* Removes the tile located at the given coordinates and updates the collision data.","*","* @method Phaser.Tilemap#removeTile","* @param {number} x - X position to place the tile (given in tile units, not pixels)","* @param {number} y - Y position to place the tile (given in tile units, not pixels)","* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.","* @return {Phaser.Tile} The Tile object that was removed from this map.","*/","Tilemap.prototype.removeTile = function (x, y, layer) {","","    layer = this.getTilelayerIndex(layer);","","    if (x >= 0 && x < this.layers[layer].size.x && y >= 0 && y < this.layers[layer].size.y)","    {","        if (this.hasTile(x, y, layer))","        {","            var tile = this.layers[layer].tiles[y][x];","","            this.layers[layer].tiles[y][x] = null;","            this.layers[layer].dirty = true;","","            this.calculateFaces(layer);","","            return tile;","        }","    }","","};","","/**","* Removes the tile located at the given coordinates and updates the collision data.","* The coordinates are given in pixel values.","*","* @method Phaser.Tilemap#removeTileWorldXY","* @param {number} x - X position to remove the tile (given in pixels)","* @param {number} y - Y position to remove the tile (given in pixels)","* @param {number} tileWidth - The width of the tile in pixels.","* @param {number} tileHeight - The height of the tile in pixels.","* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.","* @return {Phaser.Tile} The Tile object that was removed from this map.","*/","Tilemap.prototype.removeTileWorldXY = function (x, y, tileWidth, tileHeight, layer) {","","    x = this.game.math.snapToFloor(x, tileWidth) / tileWidth;","    y = this.game.math.snapToFloor(y, tileHeight) / tileHeight;","","    return this.removeTile(x, y, layer);","","};","","/**","* Puts a tile of the given index value at the coordinate specified.","* If you pass `null` as the tile it will pass your call over to Tilemap.removeTile instead.","*","* @method Phaser.Tilemap#putTile","* @param {Phaser.Tile|number|null} tile - The index of this tile to set or a Phaser.Tile object,","*       null means to remove the tile.","* @param {number} x - X position to place the tile (given in tile units, not pixels)","* @param {number} y - Y position to place the tile (given in tile units, not pixels)","* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.","* @return {Phaser.Tile} The Tile object that was created or added to this map.","*/","Tilemap.prototype.putTile = function (tile, x, y, layer) {","","    if (tile === null)","    {","        return this.removeTile(x, y, layer);","    }","","    layer = this.getTilelayerIndex(layer);","","    var tileId;","    var tileset;","","    if (x >= 0 && x < this.layers[layer].size.x && y >= 0 && y < this.layers[layer].size.y)","    {","        if (!this.layers[layer].tiles[y]) {","            this.layers[layer].tiles[y] = {};","        }","","        if (tile instanceof Phaser.Tile)","        {","            var idx = (y * this.layers[layer].size.x) + x;","","            tileId = this.layers[layer].tileIds[idx];","            tileset = this.getTileset(tileId);","","            if (this.hasTile(x, y, layer))","            {","                this.layers[layer].tiles[y][x].copy(tile);","            }","            else","            {","                this.layers[layer].tiles[y][x] = new Tile(this.game, x, y, tileId, tileset, this.layers[layer]);","            }","        }","        else","        {","            tileId = this.layers[layer].tileIds[tile];","            tileset = this.getTileset(tileId);","","            this.layers[layer].tiles[y][x] = null;","            this.layers[layer].tiles[y][x] = new Tile(this.game, x, y, tileId, tileset, this.layers[layer]);","        }","","        // if (this.collideIndexes.indexOf(index) > -1)","        // {","        //     this.layers[layer].tiles[y][x].setCollision(true, true, true, true);","        // }","        // else","        // {","        //     this.layers[layer].tiles[y][x].resetCollision();","        // }","","        this.layers[layer].dirty = true;","","        this.calculateFaces(layer);","","        return this.layers[layer].tiles[y][x];","    }","","    return null;","","};","","/**","* Puts a tile into the Tilemap layer. The coordinates are given in pixel values.","*","* @method Phaser.Tilemap#putTileWorldXY","* @param {Phaser.Tile|number} tile - The index of this tile to set or a Phaser.Tile object.","* @param {number} x - X position to insert the tile (given in pixels)","* @param {number} y - Y position to insert the tile (given in pixels)","* @param {number} tileWidth - The width of the tile in pixels.","* @param {number} tileHeight - The height of the tile in pixels.","* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.","* @return {Phaser.Tile} The Tile object that was created or added to this map.","*/","Tilemap.prototype.putTileWorldXY = function (tile, x, y, tileWidth, tileHeight, layer) {","","    x = this.game.math.snapToFloor(x, tileWidth) / tileWidth;","    y = this.game.math.snapToFloor(y, tileHeight) / tileHeight;","","    return this.putTile(tile, x, y, layer);","","};","","/**","* Gets a tile from the Tilemap Layer. The coordinates are given in tile values.","*","* @method Phaser.Tilemap#getTile","* @param {number} x - X position to get the tile from (given in tile units, not pixels)","* @param {number} y - Y position to get the tile from (given in tile units, not pixels)","* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to get the tile from.","* @param {boolean} [nonNull=false] - If true getTile won't return null for empty tiles,","*       but a Tile object with an index of -1.","* @return {Phaser.Tile} The tile at the given coordinates or null if no tile was found or the coordinates were invalid.","*/","Tilemap.prototype.getTile = function (x, y, layer, nonNull) {","","    if (typeof nonNull === 'undefined') { nonNull = false; }","","    layer = this.getTilelayerIndex(layer);","","    if (x >= 0 && x < this.layers[layer].size.x && y >= 0 && y < this.layers[layer].size.y)","    {","        return this.layers[layer].tiles[y] ? this.layers[layer].tiles[y][x] : null;","    }","","    return null;","","};","","/**","* Gets a tile from the Tilemap layer. The coordinates are given in pixel values.","*","* @method Phaser.Tilemap#getTileWorldXY","* @param {number} x - X position to get the tile from (given in pixels)","* @param {number} y - Y position to get the tile from (given in pixels)","* @param {number} [tileWidth] - The width of the tiles. If not given the map default is used.","* @param {number} [tileHeight] - The height of the tiles. If not given the map default is used.","* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to get the tile from.","* @return {Phaser.Tile} The tile at the given coordinates.","*/","Tilemap.prototype.getTileWorldXY = function (x, y, tileWidth, tileHeight, layer) {","","    if (typeof tileWidth === 'undefined') { tileWidth = this.tileWidth; }","    if (typeof tileHeight === 'undefined') { tileHeight = this.tileHeight; }","","    x = this.game.math.snapToFloor(x, tileWidth) / tileWidth;","    y = this.game.math.snapToFloor(y, tileHeight) / tileHeight;","","    return this.getTile(x, y, layer);","","};","","/**","* Removes all layers from this tile map.","*","* @method Phaser.Tilemap#removeAllLayers","*/","Tilemap.prototype.removeAllLayers = function () {","","    this.layers.length = 0;","    this.currentLayer = 0;","","};","","/**","* Dumps the tilemap data out to the console.","*","* @method Phaser.Tilemap#dump","*/","Tilemap.prototype.dump = function () {","","    var txt = '';","    var args = [''];","","    for (var y = 0; y < this.layers[this.currentLayer].size.y; y++)","    {","        for (var x = 0; x < this.layers[this.currentLayer].size.x; x++)","        {","            txt += '%c  ';","","            if (this.layers[this.currentLayer].tiles[y] && this.layers[this.currentLayer].tiles[y][x])","            {","                if (this.debugMap[this.layers[this.currentLayer].tiles[y][x]])","                {","                    args.push('background: ' + this.debugMap[this.layers[this.currentLayer].tiles[y][x]]);","                }","                else","                {","                    args.push('background: #ffffff');","                }","            }","            else","            {","                args.push('background: rgb(0, 0, 0)');","            }","        }","","        txt += '\\n';","    }","","    args[0] = txt;","    console.log.apply(console, args);","","};","","/**"," * Gets the tileset that an ID is associated with"," *"," * @method getTileset"," * @param tileId {Number} The id of the tile to find the tileset for"," * @return {TiledTileset} Returns the tileset if found, undefined if not"," */","Tilemap.prototype.getTileset = function (tileId) {","    for (var i = 0, il = this.tilesets.length; i < il; ++i) {","        if (this.tilesets[i].contains(tileId)) {","            return this.tilesets[i];","        }","    }","};","","Tilemap.prototype.postUpdate = function () {","    if (this._camScaleX !== this.game.camera.scale.x || this._camScaleY !== this.game.camera.scale.y) {","        this._camScaleX = this.game.camera.scale.x;","        this._camScaleY = this.game.camera.scale.y;","","        this.setTileSize(this.tileWidth, this.tileHeight);","","        this.dirty = true;","    }","","    Phaser.Group.prototype.postUpdate.apply(this, arguments);","","    this.dirty = false;","};","","/**"," * Spawns all the objects in the ObjectGroups of this map"," *"," * @method spawnObjects"," * @return {Tilemap} Returns itself."," * @chainable"," */","Tilemap.prototype.spawnObjects = function (spawnCallback) {","    for (var i = 0, il = this.objects.length; i < il; ++i) {","        this.objects[i].spawn(spawnCallback);","    }","","    return this;","};","","/**"," * Spawns all the objects in the ObjectGroups of this map"," *"," * @method despawnObjects"," * @return {Tilemap} Returns itself."," * @chainable"," */","Tilemap.prototype.despawnObjects = function () {","    for (var i = 0, il = this.objects.length; i < il; ++i) {","        this.objects[i].despawn();","    }","","    return this;","};","","/**"," * Clears all the tiles that are currently used on all tile layers"," *"," * @method clearTiles"," * @return {Tilemap} Returns itself."," * @chainable"," */","Tilemap.prototype.clearTiles = function () {","    for (var i = 0, il = this.layers.length; i < il; ++i) {","        this.layers[i].clearTiles();","    }","","    return this;","};","","/**"," * Destroys the tilemap instance"," *"," * @method destroy"," */","Tilemap.prototype.destroy = function () {","    Phaser.Group.prototype.destroy.apply(this, arguments);","","    for (var i = 0; i < this.tilesets.length; ++i) {","        this.tilesets[i].destroy();","    }","","    this.position = null;","    this.scale = null;","    this.pivot = null;","","    this.key = null;","    this.size = null;","    this.tileWidth = null;","    this.tileHeight = null;","    this.scaledTileWidth = null;","    this.scaledTileHeight = null;","    this.orientation = null;","    this.format = null;","    this.version = null;","    this.properties = null;","    this.widthInPixels = null;","    this.heightInPixels = null;","","    this.layers = null;","","    this.tilesets = null;","","    this.objects = null;","","    this.images = null;","","    this.collideIndexes = null;","","    this.debugMap = null;","","    this.currentLayer = null;","    this.preventingRecalculate = null;","    this.needToRecalculate = null;","    this._camScaleX = null;","    this._camScaleY = null;","    this.dirty = null;","};","","/**","* @name Phaser.Tilemap#layer","* @property {number|string|Phaser.TilemapLayer} layer - The current layer object.","*/","Object.defineProperty(Tilemap.prototype, 'layer', {","","    get: function () {","","        return this.layers[this.currentLayer];","","    },","","    set: function (value) {","","        if (value !== this.currentLayer)","        {","            this.setLayer(value);","        }","","    }","","});","","for (var key in C) {","    Tilemap[key] = C[key];","}",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"20":1,"21":0,"23":0,"25":0,"33":0,"35":0,"36":0,"39":0,"44":0,"49":0,"54":0,"59":0,"64":0,"69":0,"74":0,"79":0,"84":0,"89":0,"94":0,"99":0,"104":0,"109":0,"114":0,"119":0,"124":0,"134":0,"139":0,"141":0,"142":0,"145":0,"146":0,"149":0,"152":0,"155":0,"156":0,"157":0,"161":0,"162":0,"163":0,"165":0,"167":0,"168":0,"171":0,"172":0,"175":0,"176":0,"177":0,"180":0,"182":0,"183":0,"185":0,"186":0,"191":0,"192":0,"194":0,"203":0,"204":0,"205":0,"207":0,"208":0,"210":0,"211":0,"214":0,"226":0,"228":0,"229":0,"231":0,"233":0,"237":0,"238":0,"240":0,"241":0,"244":0,"255":0,"257":0,"268":0,"270":0,"281":0,"283":0,"294":0,"296":0,"307":0,"309":0,"320":0,"322":0,"333":0,"335":0,"346":0,"348":0,"360":0,"362":0,"364":0,"365":0,"368":0,"370":0,"371":0,"372":0,"374":0,"386":0,"388":0,"390":0,"391":0,"394":0,"395":0,"396":0,"397":0,"399":0,"401":0,"403":0,"405":0,"407":0,"408":0,"409":0,"410":0,"412":0,"414":0,"415":0,"416":0,"417":0,"420":0,"424":0,"427":0,"431":0,"434":0,"438":0,"441":0,"445":0,"462":0,"464":0,"466":0,"469":0,"482":0,"484":0,"486":0,"489":0,"502":0,"504":0,"506":0,"509":0,"522":0,"524":0,"526":0,"529":0,"539":0,"541":0,"543":0,"545":0,"559":0,"561":0,"563":0,"576":0,"578":0,"580":0,"582":0,"584":0,"586":0,"587":0,"589":0,"591":0,"609":0,"611":0,"612":0,"614":0,"630":0,"632":0,"634":0,"637":0,"639":0,"640":0,"642":0,"644":0,"645":0,"648":0,"650":0,"652":0,"653":0,"655":0,"657":0,"661":0,"666":0,"667":0,"669":0,"670":0,"682":0,"684":0,"686":0,"689":0,"705":0,"707":0,"708":0,"710":0,"725":0,"727":0,"729":0,"731":0,"733":0,"736":0,"751":0,"753":0,"754":0,"756":0,"757":0,"759":0,"768":0,"770":0,"771":0,"780":0,"782":0,"783":0,"785":0,"787":0,"789":0,"791":0,"793":0,"795":0,"799":0,"804":0,"808":0,"811":0,"812":0,"823":0,"824":0,"825":0,"826":0,"831":0,"832":0,"833":0,"834":0,"836":0,"838":0,"841":0,"843":0,"853":0,"854":0,"855":0,"858":0,"868":0,"869":0,"870":0,"873":0,"883":0,"884":0,"885":0,"888":0,"896":0,"897":0,"899":0,"900":0,"903":0,"904":0,"905":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"920":0,"922":0,"924":0,"926":0,"928":0,"930":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"944":0,"948":0,"954":0,"956":0,"963":0,"964":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/TilemapParser.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/TilemapParser.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":70}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":30}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":20},"end":{"line":72,"column":36}}},"4":{"name":"(anonymous_4)","line":109,"loc":{"start":{"line":109,"column":19},"end":{"line":109,"column":35}}},"5":{"name":"csvToXY","line":432,"loc":{"start":{"line":432,"column":0},"end":{"line":432,"column":21}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":32}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":5,"column":0},"end":{"line":428,"column":2}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":65}},"5":{"start":{"line":23,"column":48},"end":{"line":23,"column":63}},"6":{"start":{"line":24,"column":8},"end":{"line":24,"column":67}},"7":{"start":{"line":24,"column":49},"end":{"line":24,"column":65}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"9":{"start":{"line":25,"column":44},"end":{"line":25,"column":55}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"11":{"start":{"line":26,"column":45},"end":{"line":26,"column":57}},"12":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":39}},"14":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"15":{"start":{"line":33,"column":12},"end":{"line":33,"column":75}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":77}},"17":{"start":{"line":38,"column":8},"end":{"line":51,"column":9}},"18":{"start":{"line":39,"column":12},"end":{"line":47,"column":13}},"19":{"start":{"line":40,"column":16},"end":{"line":40,"column":75}},"20":{"start":{"line":42,"column":17},"end":{"line":47,"column":13}},"21":{"start":{"line":43,"column":16},"end":{"line":43,"column":52}},"22":{"start":{"line":45,"column":17},"end":{"line":47,"column":13}},"23":{"start":{"line":46,"column":16},"end":{"line":46,"column":53}},"24":{"start":{"line":50,"column":12},"end":{"line":50,"column":90}},"25":{"start":{"line":57,"column":8},"end":{"line":57,"column":75}},"26":{"start":{"line":59,"column":8},"end":{"line":59,"column":38}},"27":{"start":{"line":60,"column":8},"end":{"line":60,"column":40}},"28":{"start":{"line":62,"column":8},"end":{"line":62,"column":19}},"29":{"start":{"line":73,"column":8},"end":{"line":76,"column":9}},"30":{"start":{"line":74,"column":12},"end":{"line":74,"column":124}},"31":{"start":{"line":75,"column":12},"end":{"line":75,"column":24}},"32":{"start":{"line":78,"column":8},"end":{"line":78,"column":40}},"33":{"start":{"line":80,"column":8},"end":{"line":80,"column":33}},"34":{"start":{"line":83,"column":8},"end":{"line":97,"column":9}},"35":{"start":{"line":84,"column":12},"end":{"line":96,"column":13}},"36":{"start":{"line":85,"column":16},"end":{"line":85,"column":38}},"37":{"start":{"line":87,"column":16},"end":{"line":95,"column":17}},"38":{"start":{"line":88,"column":20},"end":{"line":88,"column":107}},"39":{"start":{"line":90,"column":20},"end":{"line":90,"column":86}},"40":{"start":{"line":93,"column":20},"end":{"line":93,"column":42}},"41":{"start":{"line":94,"column":20},"end":{"line":94,"column":45}},"42":{"start":{"line":99,"column":8},"end":{"line":99,"column":20}},"43":{"start":{"line":110,"column":8},"end":{"line":110,"column":61}},"44":{"start":{"line":111,"column":8},"end":{"line":123,"column":10}},"45":{"start":{"line":124,"column":8},"end":{"line":124,"column":18}},"46":{"start":{"line":125,"column":8},"end":{"line":125,"column":19}},"47":{"start":{"line":128,"column":8},"end":{"line":128,"column":69}},"48":{"start":{"line":129,"column":8},"end":{"line":140,"column":9}},"49":{"start":{"line":130,"column":12},"end":{"line":139,"column":13}},"50":{"start":{"line":131,"column":16},"end":{"line":131,"column":72}},"51":{"start":{"line":133,"column":16},"end":{"line":136,"column":17}},"52":{"start":{"line":134,"column":20},"end":{"line":134,"column":89}},"53":{"start":{"line":135,"column":20},"end":{"line":135,"column":102}},"54":{"start":{"line":138,"column":16},"end":{"line":138,"column":22}},"55":{"start":{"line":143,"column":8},"end":{"line":143,"column":43}},"56":{"start":{"line":145,"column":8},"end":{"line":281,"column":9}},"57":{"start":{"line":146,"column":12},"end":{"line":146,"column":33}},"58":{"start":{"line":148,"column":12},"end":{"line":280,"column":13}},"59":{"start":{"line":149,"column":16},"end":{"line":149,"column":31}},"60":{"start":{"line":150,"column":16},"end":{"line":163,"column":18}},"61":{"start":{"line":166,"column":16},"end":{"line":166,"column":70}},"62":{"start":{"line":167,"column":16},"end":{"line":167,"column":87}},"63":{"start":{"line":170,"column":16},"end":{"line":170,"column":72}},"64":{"start":{"line":173,"column":16},"end":{"line":175,"column":17}},"65":{"start":{"line":174,"column":20},"end":{"line":174,"column":97}},"66":{"start":{"line":177,"column":16},"end":{"line":184,"column":17}},"67":{"start":{"line":178,"column":20},"end":{"line":178,"column":110}},"68":{"start":{"line":180,"column":20},"end":{"line":180,"column":86}},"69":{"start":{"line":182,"column":21},"end":{"line":184,"column":17}},"70":{"start":{"line":183,"column":20},"end":{"line":183,"column":71}},"71":{"start":{"line":186,"column":16},"end":{"line":186,"column":39}},"72":{"start":{"line":188,"column":17},"end":{"line":280,"column":13}},"73":{"start":{"line":189,"column":16},"end":{"line":189,"column":31}},"74":{"start":{"line":190,"column":16},"end":{"line":201,"column":18}},"75":{"start":{"line":203,"column":16},"end":{"line":203,"column":65}},"76":{"start":{"line":204,"column":16},"end":{"line":251,"column":17}},"77":{"start":{"line":205,"column":20},"end":{"line":205,"column":42}},"78":{"start":{"line":206,"column":20},"end":{"line":219,"column":22}},"79":{"start":{"line":220,"column":20},"end":{"line":220,"column":29}},"80":{"start":{"line":222,"column":20},"end":{"line":224,"column":21}},"81":{"start":{"line":223,"column":24},"end":{"line":223,"column":42}},"82":{"start":{"line":226,"column":20},"end":{"line":226,"column":63}},"83":{"start":{"line":227,"column":20},"end":{"line":229,"column":21}},"84":{"start":{"line":228,"column":24},"end":{"line":228,"column":113}},"85":{"start":{"line":231,"column":20},"end":{"line":231,"column":64}},"86":{"start":{"line":232,"column":20},"end":{"line":234,"column":21}},"87":{"start":{"line":233,"column":24},"end":{"line":233,"column":114}},"88":{"start":{"line":236,"column":20},"end":{"line":236,"column":63}},"89":{"start":{"line":237,"column":20},"end":{"line":239,"column":21}},"90":{"start":{"line":238,"column":24},"end":{"line":238,"column":46}},"91":{"start":{"line":241,"column":20},"end":{"line":241,"column":71}},"92":{"start":{"line":242,"column":20},"end":{"line":248,"column":21}},"93":{"start":{"line":243,"column":24},"end":{"line":243,"column":74}},"94":{"start":{"line":244,"column":24},"end":{"line":247,"column":25}},"95":{"start":{"line":245,"column":28},"end":{"line":245,"column":91}},"96":{"start":{"line":246,"column":28},"end":{"line":246,"column":107}},"97":{"start":{"line":250,"column":20},"end":{"line":250,"column":47}},"98":{"start":{"line":253,"column":16},"end":{"line":253,"column":39}},"99":{"start":{"line":255,"column":17},"end":{"line":280,"column":13}},"100":{"start":{"line":256,"column":16},"end":{"line":256,"column":32}},"101":{"start":{"line":257,"column":16},"end":{"line":268,"column":18}},"102":{"start":{"line":270,"column":16},"end":{"line":270,"column":69}},"103":{"start":{"line":271,"column":16},"end":{"line":277,"column":17}},"104":{"start":{"line":272,"column":20},"end":{"line":272,"column":72}},"105":{"start":{"line":273,"column":20},"end":{"line":276,"column":21}},"106":{"start":{"line":274,"column":24},"end":{"line":274,"column":89}},"107":{"start":{"line":275,"column":24},"end":{"line":275,"column":107}},"108":{"start":{"line":279,"column":16},"end":{"line":279,"column":42}},"109":{"start":{"line":284,"column":8},"end":{"line":284,"column":66}},"110":{"start":{"line":286,"column":8},"end":{"line":424,"column":9}},"111":{"start":{"line":287,"column":12},"end":{"line":287,"column":35}},"112":{"start":{"line":288,"column":12},"end":{"line":288,"column":58}},"113":{"start":{"line":289,"column":12},"end":{"line":301,"column":14}},"114":{"start":{"line":304,"column":12},"end":{"line":304,"column":66}},"115":{"start":{"line":305,"column":12},"end":{"line":307,"column":13}},"116":{"start":{"line":306,"column":16},"end":{"line":306,"column":62}},"117":{"start":{"line":309,"column":12},"end":{"line":309,"column":64}},"118":{"start":{"line":310,"column":12},"end":{"line":312,"column":13}},"119":{"start":{"line":311,"column":16},"end":{"line":311,"column":60}},"120":{"start":{"line":315,"column":12},"end":{"line":315,"column":68}},"121":{"start":{"line":316,"column":12},"end":{"line":331,"column":13}},"122":{"start":{"line":317,"column":16},"end":{"line":330,"column":17}},"123":{"start":{"line":318,"column":20},"end":{"line":318,"column":80}},"124":{"start":{"line":320,"column":20},"end":{"line":327,"column":21}},"125":{"start":{"line":321,"column":24},"end":{"line":326,"column":25}},"126":{"start":{"line":322,"column":28},"end":{"line":322,"column":56}},"127":{"start":{"line":323,"column":28},"end":{"line":323,"column":94}},"128":{"start":{"line":325,"column":28},"end":{"line":325,"column":111}},"129":{"start":{"line":329,"column":20},"end":{"line":329,"column":26}},"130":{"start":{"line":334,"column":12},"end":{"line":394,"column":13}},"131":{"start":{"line":335,"column":16},"end":{"line":335,"column":36}},"132":{"start":{"line":336,"column":16},"end":{"line":336,"column":66}},"133":{"start":{"line":337,"column":16},"end":{"line":337,"column":61}},"134":{"start":{"line":339,"column":16},"end":{"line":339,"column":39}},"135":{"start":{"line":342,"column":16},"end":{"line":358,"column":17}},"136":{"start":{"line":343,"column":20},"end":{"line":343,"column":54}},"137":{"start":{"line":345,"column":20},"end":{"line":347,"column":21}},"138":{"start":{"line":346,"column":24},"end":{"line":346,"column":33}},"139":{"start":{"line":349,"column":20},"end":{"line":357,"column":21}},"140":{"start":{"line":351,"column":28},"end":{"line":351,"column":80}},"141":{"start":{"line":352,"column":28},"end":{"line":352,"column":34}},"142":{"start":{"line":355,"column":28},"end":{"line":355,"column":90}},"143":{"start":{"line":356,"column":28},"end":{"line":356,"column":34}},"144":{"start":{"line":361,"column":16},"end":{"line":364,"column":17}},"145":{"start":{"line":362,"column":20},"end":{"line":362,"column":64}},"146":{"start":{"line":363,"column":20},"end":{"line":363,"column":93}},"147":{"start":{"line":367,"column":16},"end":{"line":367,"column":72}},"148":{"start":{"line":368,"column":16},"end":{"line":376,"column":17}},"149":{"start":{"line":369,"column":20},"end":{"line":369,"column":52}},"150":{"start":{"line":370,"column":20},"end":{"line":370,"column":78}},"151":{"start":{"line":371,"column":20},"end":{"line":375,"column":21}},"152":{"start":{"line":372,"column":24},"end":{"line":372,"column":53}},"153":{"start":{"line":373,"column":24},"end":{"line":373,"column":90}},"154":{"start":{"line":374,"column":24},"end":{"line":374,"column":115}},"155":{"start":{"line":379,"column":16},"end":{"line":379,"column":71}},"156":{"start":{"line":380,"column":16},"end":{"line":393,"column":17}},"157":{"start":{"line":381,"column":20},"end":{"line":381,"column":53}},"158":{"start":{"line":382,"column":20},"end":{"line":382,"column":75}},"159":{"start":{"line":383,"column":20},"end":{"line":392,"column":21}},"160":{"start":{"line":384,"column":24},"end":{"line":384,"column":64}},"161":{"start":{"line":385,"column":24},"end":{"line":385,"column":41}},"162":{"start":{"line":387,"column":24},"end":{"line":389,"column":25}},"163":{"start":{"line":388,"column":28},"end":{"line":388,"column":78}},"164":{"start":{"line":391,"column":24},"end":{"line":391,"column":66}},"165":{"start":{"line":397,"column":12},"end":{"line":397,"column":69}},"166":{"start":{"line":398,"column":12},"end":{"line":406,"column":13}},"167":{"start":{"line":399,"column":16},"end":{"line":399,"column":71}},"168":{"start":{"line":400,"column":16},"end":{"line":405,"column":17}},"169":{"start":{"line":401,"column":20},"end":{"line":404,"column":23}},"170":{"start":{"line":409,"column":12},"end":{"line":409,"column":65}},"171":{"start":{"line":410,"column":12},"end":{"line":413,"column":13}},"172":{"start":{"line":411,"column":16},"end":{"line":411,"column":98}},"173":{"start":{"line":412,"column":16},"end":{"line":412,"column":98}},"174":{"start":{"line":416,"column":12},"end":{"line":416,"column":59}},"175":{"start":{"line":417,"column":12},"end":{"line":421,"column":13}},"176":{"start":{"line":418,"column":16},"end":{"line":418,"column":81}},"177":{"start":{"line":419,"column":16},"end":{"line":419,"column":99}},"178":{"start":{"line":420,"column":16},"end":{"line":420,"column":101}},"179":{"start":{"line":423,"column":12},"end":{"line":423,"column":39}},"180":{"start":{"line":426,"column":8},"end":{"line":426,"column":19}},"181":{"start":{"line":430,"column":0},"end":{"line":430,"column":31}},"182":{"start":{"line":432,"column":0},"end":{"line":438,"column":1}},"183":{"start":{"line":433,"column":4},"end":{"line":433,"column":31}},"184":{"start":{"line":434,"column":4},"end":{"line":437,"column":6}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"8":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":17},"end":{"line":42,"column":17}},{"start":{"line":42,"column":17},"end":{"line":42,"column":17}}]},"10":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":17},"end":{"line":45,"column":17}},{"start":{"line":45,"column":17},"end":{"line":45,"column":17}}]},"11":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":21},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":63}}]},"12":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"13":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"14":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":16}},{"start":{"line":87,"column":16},"end":{"line":87,"column":16}}]},"15":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":20},"end":{"line":87,"column":25}},{"start":{"line":87,"column":29},"end":{"line":87,"column":56}}]},"16":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":12}},{"start":{"line":130,"column":12},"end":{"line":130,"column":12}}]},"17":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":12}},{"start":{"line":148,"column":12},"end":{"line":148,"column":12}}]},"18":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":27},"end":{"line":153,"column":83}},{"start":{"line":153,"column":87},"end":{"line":153,"column":96}}]},"19":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":28},"end":{"line":154,"column":85}},{"start":{"line":154,"column":89},"end":{"line":154,"column":99}}]},"20":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":70},"end":{"line":155,"column":122}},{"start":{"line":155,"column":125},"end":{"line":155,"column":129}}]},"21":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":70},"end":{"line":156,"column":130}},{"start":{"line":156,"column":133},"end":{"line":156,"column":134}}]},"22":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":16},"end":{"line":173,"column":16}},{"start":{"line":173,"column":16},"end":{"line":173,"column":16}}]},"23":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":16},"end":{"line":177,"column":16}},{"start":{"line":177,"column":16},"end":{"line":177,"column":16}}]},"24":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":21},"end":{"line":182,"column":21}},{"start":{"line":182,"column":21},"end":{"line":182,"column":21}}]},"25":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":17},"end":{"line":188,"column":17}},{"start":{"line":188,"column":17},"end":{"line":188,"column":17}}]},"26":{"line":197,"type":"cond-expr","locations":[{"start":{"line":197,"column":70},"end":{"line":197,"column":122}},{"start":{"line":197,"column":125},"end":{"line":197,"column":129}}]},"27":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":70},"end":{"line":198,"column":130}},{"start":{"line":198,"column":133},"end":{"line":198,"column":134}}]},"28":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":66},"end":{"line":208,"column":120}},{"start":{"line":208,"column":123},"end":{"line":208,"column":127}}]},"29":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":68},"end":{"line":209,"column":109}},{"start":{"line":209,"column":112},"end":{"line":209,"column":114}}]},"30":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":68},"end":{"line":210,"column":109}},{"start":{"line":210,"column":112},"end":{"line":210,"column":114}}]},"31":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":70},"end":{"line":211,"column":128}},{"start":{"line":211,"column":131},"end":{"line":211,"column":132}}]},"32":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":72},"end":{"line":212,"column":131}},{"start":{"line":212,"column":134},"end":{"line":212,"column":135}}]},"33":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":76},"end":{"line":213,"column":137}},{"start":{"line":213,"column":140},"end":{"line":213,"column":141}}]},"34":{"line":214,"type":"cond-expr","locations":[{"start":{"line":214,"column":74},"end":{"line":214,"column":126}},{"start":{"line":214,"column":129},"end":{"line":214,"column":133}}]},"35":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":20},"end":{"line":222,"column":20}},{"start":{"line":222,"column":20},"end":{"line":222,"column":20}}]},"36":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":20},"end":{"line":227,"column":20}},{"start":{"line":227,"column":20},"end":{"line":227,"column":20}}]},"37":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":20},"end":{"line":232,"column":20}},{"start":{"line":232,"column":20},"end":{"line":232,"column":20}}]},"38":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":20},"end":{"line":237,"column":20}},{"start":{"line":237,"column":20},"end":{"line":237,"column":20}}]},"39":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":20},"end":{"line":242,"column":20}},{"start":{"line":242,"column":20},"end":{"line":242,"column":20}}]},"40":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":17},"end":{"line":255,"column":17}},{"start":{"line":255,"column":17},"end":{"line":255,"column":17}}]},"41":{"line":263,"type":"cond-expr","locations":[{"start":{"line":263,"column":71},"end":{"line":263,"column":124}},{"start":{"line":263,"column":127},"end":{"line":263,"column":131}}]},"42":{"line":264,"type":"cond-expr","locations":[{"start":{"line":264,"column":71},"end":{"line":264,"column":132}},{"start":{"line":264,"column":135},"end":{"line":264,"column":136}}]},"43":{"line":265,"type":"cond-expr","locations":[{"start":{"line":265,"column":59},"end":{"line":265,"column":112}},{"start":{"line":265,"column":115},"end":{"line":265,"column":116}}]},"44":{"line":266,"type":"cond-expr","locations":[{"start":{"line":266,"column":59},"end":{"line":266,"column":112}},{"start":{"line":266,"column":115},"end":{"line":266,"column":116}}]},"45":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":16},"end":{"line":271,"column":16}},{"start":{"line":271,"column":16},"end":{"line":271,"column":16}}]},"46":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":12},"end":{"line":305,"column":12}},{"start":{"line":305,"column":12},"end":{"line":305,"column":12}}]},"47":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":12}},{"start":{"line":310,"column":12},"end":{"line":310,"column":12}}]},"48":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":16},"end":{"line":317,"column":16}},{"start":{"line":317,"column":16},"end":{"line":317,"column":16}}]},"49":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":20},"end":{"line":320,"column":20}},{"start":{"line":320,"column":20},"end":{"line":320,"column":20}}]},"50":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":20},"end":{"line":345,"column":20}},{"start":{"line":345,"column":20},"end":{"line":345,"column":20}}]},"51":{"line":349,"type":"switch","locations":[{"start":{"line":350,"column":24},"end":{"line":352,"column":34}},{"start":{"line":354,"column":24},"end":{"line":356,"column":34}}]},"52":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":16},"end":{"line":361,"column":16}},{"start":{"line":361,"column":16},"end":{"line":361,"column":16}}]},"53":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":40},"end":{"line":362,"column":57}},{"start":{"line":362,"column":61},"end":{"line":362,"column":63}}]},"54":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":16},"end":{"line":368,"column":16}},{"start":{"line":368,"column":16},"end":{"line":368,"column":16}}]},"55":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":16},"end":{"line":380,"column":16}},{"start":{"line":380,"column":16},"end":{"line":380,"column":16}}]},"56":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":12},"end":{"line":398,"column":12}},{"start":{"line":398,"column":12},"end":{"line":398,"column":12}}]},"57":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":12},"end":{"line":410,"column":12}},{"start":{"line":410,"column":12},"end":{"line":410,"column":12}}]},"58":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":12},"end":{"line":417,"column":12}},{"start":{"line":417,"column":12},"end":{"line":417,"column":12}}]},"59":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":16},"end":{"line":417,"column":34}},{"start":{"line":417,"column":38},"end":{"line":417,"column":66}}]}},"code":["/* jshint maxlen:200 */","var utils = require('../utils');","var C = require('../constants');","","var TilemapParser = {","    /**","     * Parse tilemap data from the cache and creates a Tilemap object.","     *","     * @method parse","     * @param {Phaser.Game} game - Game reference to the currently running game.","     * @param {string} key - The key of the tilemap in the Cache.","     * @param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must","     *      specify this. Not required if using Tiled map data.","     * @param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must","     *      specify this. Not required if using Tiled map data.","     * @param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or","     *      CSV data you don't need to specify this.","     * @param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or","     *      CSV data you don't need to specify this.","     * @return {object} The parsed map object.","     */","    parse: function (game, key, tileWidth, tileHeight, width, height) {","        if (typeof tileWidth === 'undefined') { tileWidth = 32; }","        if (typeof tileHeight === 'undefined') { tileHeight = 32; }","        if (typeof width === 'undefined') { width = 10; }","        if (typeof height === 'undefined') { height = 10; }","","        if (typeof key === 'undefined') {","            return this.getEmptyData();","        }","","        if (!key) {","            return this.getEmptyData(tileWidth, tileHeight, width, height);","        }","","        var map = game.cache.getTilemapData(utils.cacheKey(key, 'tiledmap'));","","        if (map) {","            if (map.format === C.CSV) {","                return this.parseCSV(key, map.data, tileWidth, tileHeight);","            }","            else if (map.format === C.TILED_XML) {","                return this.parseTiledXML(map.data);","            }","            else if (!map.format || map.format === C.TILED_JSON) {","                return this.parseTiledJSON(map.data);","            }","        }","        else {","            console.warn('Phaser.TilemapParser.parse - No map data found for key ' + key);","        }","    },","","    parseCSV: Phaser.TilemapParser.parseCSV,","","    getEmptyData: function () {","        var map = Phaser.TilemapParser.getEmptyData.apply(this, arguments);","","        map.tilewidth = map.tileWidth;","        map.tileheight = map.tileHeight;","","        return map;","    },","","    /**","     * Parses a Tiled JSON file into valid map data.","     *","     * @method parseTiledJSON","     * @param {object} data - The JSON map data.","     * @return {object} Generated and parsed map data.","     */","    parseTiledJSON: function (data) {","        if (data.orientation !== 'orthogonal') {","            console.warn('TilemapParser.parseTiledJSON: Only orthogonal map types are supported in this version of Phaser');","            return null;","        }","","        data.format = Phaser.TILED_JSON;","","        var layers = data.layers;","","        // decode any encoded/compressed layers","        if (Array.isArray(layers)) {","            for (var i = 0; i < layers.length; i++) {","                var layer = layers[i];","","                if (layer && layer.encoding === 'base64') {","                    var decomp = utils.decompressBase64Data(layer.data, layer.encoding, layer.compression);","","                    layer.data = new Uint32Array(decomp.buffer, 0, decomp.length / 4);","","                    // remove metadata as layer is no longer encoded or compressed","                    delete layer.encoding;","                    delete layer.compression;","                }","            }","        }","","        return data;","    },","","    /**","     * Parses a Tiled JSON file into valid map data.","     *","     * @method parseTiledXML","     * @param {object} data - The JSON map data.","     * @return {object} Generated and parsed map data.","     */","    parseTiledXML: function (data) {","        var mapElement = data.getElementsByTagName('map')[0];","        var map = {","            version: parseFloat(mapElement.attributes.getNamedItem('version').value, 10),","            width: parseInt(mapElement.attributes.getNamedItem('width').value, 10),","            height: parseInt(mapElement.attributes.getNamedItem('height').value, 10),","            tilewidth: parseInt(mapElement.attributes.getNamedItem('tilewidth').value, 10),","            tileheight: parseInt(mapElement.attributes.getNamedItem('tileheight').value, 10),","            orientation: mapElement.attributes.getNamedItem('orientation').value,","            renderorder: mapElement.attributes.getNamedItem('renderorder').value,","            format: Phaser.Tilemap.TILED_XML,","            properties: {},","            layers: [],","            tilesets: []","        };","        var i = 0;","        var il = 0;","","        // add the properties","        var mapprops = mapElement.getElementsByTagName('properties');","        for (i = 0, il = mapprops.length; i < il; ++i) {","            if (mapprops[i].parentNode === mapElement) {","                mapprops = mapprops[i].getElementsByTagName('property');","","                for (var mp = 0; mp < mapprops.length; ++mp) {","                    var mappropName = mapprops[mp].attributes.getNamedItem('name').value;","                    map.properties[mappropName] = mapprops[mp].attributes.getNamedItem('value').value;","                }","","                break;","            }","        }","","        // add the layers","        var layers = mapElement.childNodes; // getElementsByTagName('layer');","","        for (i = 0, il = layers.length; i < il; ++i) {","            var node = layers[i];","","            if (node.nodeName === 'layer') {","                var lyr = node;","                var layer = {","                    type: 'tilelayer',","                    name: lyr.attributes.getNamedItem('name').value,","                    width: parseInt(lyr.attributes.getNamedItem('width').value, 10) || map.width,","                    height: parseInt(lyr.attributes.getNamedItem('height').value, 10) || map.height,","                    visible: lyr.attributes.getNamedItem('visible') ? lyr.attributes.getNamedItem('visible').value === '1' : true,","                    opacity: lyr.attributes.getNamedItem('opacity') ? parseFloat(lyr.attributes.getNamedItem('opacity').value, 10) : 1,","                    encoding: 'base64',","                    compression: '',","                    rawData: '',","                    data: '',","                    x: 0,","                    y: 0","                };","","                // set encoding","                var dataElement = lyr.getElementsByTagName('data')[0];","                layer.encoding = dataElement.attributes.getNamedItem('encoding').value;","","                // set data from the text node of the element","                layer.rawData = dataElement.firstChild.nodeValue.trim();","","                // set compression","                if (dataElement.attributes.getNamedItem('compression')) {","                    layer.compression = dataElement.attributes.getNamedItem('compression').value;","                }","","                if (layer.encoding === 'base64') {","                    var decomp = utils.decompressBase64Data(layer.rawData, layer.encoding, layer.compression);","","                    layer.data = new Uint32Array(decomp.buffer, 0, decomp.length / 4);","                }","                else if (layer.encoding === 'csv') {","                    layer.data = JSON.parse('[' + layer.rawData + ']');","                }","","                map.layers.push(layer);","            }","            else if (node.nodeName === 'objectgroup') {","                var grp = node;","                var group = {","                    type: 'objectgroup',","                    draworder: 'topdown', // TODO: support custom draworders","                    name: grp.attributes.getNamedItem('name').value,","                    width: 0,","                    height: 0,","                    objects: [],","                    visible: grp.attributes.getNamedItem('visible') ? grp.attributes.getNamedItem('visible').value === '0' : true,","                    opacity: grp.attributes.getNamedItem('opacity') ? parseFloat(grp.attributes.getNamedItem('opacity').value, 10) : 1,","                    x: 0,","                    y: 0","                };","","                var objects = grp.getElementsByTagName('object');","                for (var oj = 0; oj < objects.length; ++oj) {","                    var obj = objects[oj];","                    var object = {","                        /* jscs:disable maximumLineLength */","                        gid: obj.attributes.getNamedItem('gid') ? parseInt(obj.attributes.getNamedItem('gid').value, 10) : null,","                        name: obj.attributes.getNamedItem('name') ? obj.attributes.getNamedItem('name').value : '',","                        type: obj.attributes.getNamedItem('type') ? obj.attributes.getNamedItem('type').value : '',","                        width: obj.attributes.getNamedItem('width') ? parseFloat(obj.attributes.getNamedItem('width').value, 10) : 0,","                        height: obj.attributes.getNamedItem('height') ? parseFloat(obj.attributes.getNamedItem('height').value, 10) : 0,","                        rotation: obj.attributes.getNamedItem('rotation') ? parseFloat(obj.attributes.getNamedItem('rotation').value, 10) : 0,","                        visible: obj.attributes.getNamedItem('visible') ? obj.attributes.getNamedItem('visible').value === '1' : true,","                        x: parseFloat(obj.attributes.getNamedItem('x').value, 10),","                        y: parseFloat(obj.attributes.getNamedItem('y').value, 10),","                        properties: {}","                        /* jscs:enable maximumLineLength */","                    };","                    var poly;","","                    if (object.gid === null) {","                        delete object.gid;","                    }","","                    poly = obj.getElementsByTagName('polygon');","                    if (poly.length) {","                        object.polygon = poly[0].attributes.getNamedItem('points').value.split(' ').map(csvToXY);","                    }","","                    poly = obj.getElementsByTagName('polyline');","                    if (poly.length) {","                        object.polyline = poly[0].attributes.getNamedItem('points').value.split(' ').map(csvToXY);","                    }","","                    poly = obj.getElementsByTagName('ellipse');","                    if (poly.length) {","                        object.ellipse = true;","                    }","","                    var props = obj.getElementsByTagName('properties');","                    if (props.length) {","                        props = props[0].getElementsByTagName('property');","                        for (var pr = 0; pr < props.length; ++pr) {","                            var propName = props[pr].attributes.getNamedItem('name').value;","                            object.properties[propName] = props[pr].attributes.getNamedItem('value').value;","                        }","                    }","","                    group.objects.push(object);","                }","","                map.layers.push(group);","            }","            else if (node.nodeName === 'imagelayer') {","                var ilyr = node;","                var imglayer = {","                    type: 'imagelayer',","                    image: ilyr.getElementsByTagName('image')[0].attributes.getNamedItem('source').value,","                    name: ilyr.attributes.getNamedItem('name').value,","                    width: 0, // always 0 for imagelayers","                    height: 0, // always 0 for imagelayers","                    visible: ilyr.attributes.getNamedItem('visible') ? ilyr.attributes.getNamedItem('visible').value === '1' : true,","                    opacity: ilyr.attributes.getNamedItem('opacity') ? parseFloat(ilyr.attributes.getNamedItem('opacity').value, 10) : 1,","                    x: ilyr.attributes.getNamedItem('x') ? parseInt(ilyr.attributes.getNamedItem('x').value, 10) : 0,","                    y: ilyr.attributes.getNamedItem('y') ? parseInt(ilyr.attributes.getNamedItem('y').value, 10) : 0,","                    properties: {}","                };","","                var iprops = ilyr.getElementsByTagName('properties');","                if (iprops.length) {","                    iprops = iprops[0].getElementsByTagName('property');","                    for (var ip = 0; ip < iprops.length; ++ip) {","                        var ipropName = iprops[ip].attributes.getNamedItem('name').value;","                        imglayer.properties[ipropName] = iprops[ip].attributes.getNamedItem('value').value;","                    }","                }","","                map.layers.push(imglayer);","            }","        }","","        // add the tilesets","        var tilesets = mapElement.getElementsByTagName('tileset');","","        for (i = 0, il = tilesets.length; i < il; ++i) {","            var tset = tilesets[i];","            var tiles = tset.getElementsByTagName('tile');","            var tileset = {","                name: tset.attributes.getNamedItem('name').value,","                firstgid: parseInt(tset.attributes.getNamedItem('firstgid').value, 10),","                tilewidth: parseInt(tset.attributes.getNamedItem('tilewidth').value, 10),","                tileheight: parseInt(tset.attributes.getNamedItem('tileheight').value, 10),","                margin: 0,","                spacing: 0,","                tileoffset: { x: 0, y: 0 },","                terrains: [],","                properties: {},","                tileproperties: {},","                tiles: {}","            };","","            // add spacing / margin attributes if exist","            var spacing = tset.attributes.getNamedItem('spacing');","            if (spacing) {","                tileset.spacing = parseInt(spacing.value, 10);","            }","","            var margin = tset.attributes.getNamedItem('margin');","            if (margin) {","                tileset.margin = parseInt(margin.value, 10);","            }","","            // add .properties if element exists","            var tsetprops = tset.getElementsByTagName('properties');","            for (var tsp = 0; tsp < tsetprops.length; ++tsp) {","                if (tsetprops[tsp].parentNode === tset) {","                    tsetprops = tsetprops[tsp].getElementsByTagName('property');","","                    if (tsetprops.length) {","                        for (var p = 0; p < tsetprops.length; ++p) {","                            var tsetprop = tsetprops[p];","                            var tsetpropName = tsetprop.attributes.getNamedItem('name').value;","","                            tileset.properties[tsetpropName] = tsetprop.attributes.getNamedItem('value').value;","                        }","                    }","","                    break;","                }","            }","","            // add .tiles if there are tile-specific properties","            for (var t = 0; t < tiles.length; ++t) {","                var tile = tiles[t];","                var id = tile.attributes.getNamedItem('id').value;","                var img = tile.getElementsByTagName('image');","","                tileset.tiles[id] = {};","","                // add attributes into the object","                for (var ta = 0; ta < tile.attributes.length; ++ta) {","                    var tileatr = tile.attributes[ta];","","                    if (tileatr.name === 'id') {","                        continue;","                    }","","                    switch (tileatr.name) {","                        case 'terrain':","                            tileset.tiles[id].terrain = tileatr.value.sply(',');","                            break;","","                        case 'probability':","                            tileset.tiles[id].probability = parseFloat(tileatr.value, 10);","                            break;","                    }","                }","","                // check if it has an image child","                if (img.length) {","                    tileset.tiles[id] = tileset.tiles[id] || {};","                    tileset.tiles[id].image = img[0].attributes.getNamedItem('source').value;","                }","","                // add all the tile properties","                var tileprops = tile.getElementsByTagName('properties');","                if (tileprops.length) {","                    tileset.tileproperties[id] = {};","                    tileprops = tileprops[0].getElementsByTagName('property');","                    for (var tp = 0; tp < tileprops.length; ++tp) {","                        var tileprop = tileprops[tp];","                        var tilepropName = tileprop.attributes.getNamedItem('name').value;","                        tileset.tileproperties[id][tilepropName] = tileprop.attributes.getNamedItem('value').value;","                    }","                }","","                // add all the tile animations","                var tileanims = tile.getElementsByTagName('animation');","                if (tileanims.length) {","                    tileset.tiles[id].animation = [];","                    tileanims = tileanims[0].getElementsByTagName('frame');","                    for (var tn = 0; tn < tileanims.length; ++tn) {","                        var tileanim = tileanims[tn].attributes;","                        var animObj = {};","","                        for (var tna = 0; tna < tileanim.length; ++tna) {","                            animObj[tileanim[tna].name] = tileanim[tna].value;","                        }","","                        tileset.tiles[id].animation.push(animObj);","                    }","                }","            }","","            // check for terraintypes and add those","            var terrains = tset.getElementsByTagName('terraintypes');","            if (terrains.length) {","                terrains = terrains[0].getElementsByTagName('terrain');","                for (var tr = 0; tr < terrains.length; ++tr) {","                    tileset.terrains.push({","                        name: terrains[tr].attributes.getNamedItem('name').value,","                        tile: parseInt(terrains[tr].attributes.getNamedItem('tile').value, 10)","                    });","                }","            }","","            // check for tileoffset and add that","            var offset = tset.getElementsByTagName('tileoffset');","            if (offset.length) {","                tileset.tileoffset.x = parseInt(offset[0].attributes.getNamedItem('x').value, 10);","                tileset.tileoffset.y = parseInt(offset[0].attributes.getNamedItem('y').value, 10);","            }","","            // add image, imagewidth, imageheight","            var image = tset.getElementsByTagName('image');","            if (image.length === 1 && image[0].parentNode === tset) {","                tileset.image = image[0].attributes.getNamedItem('source').value;","                tileset.imagewidth = parseInt(image[0].attributes.getNamedItem('width').value, 10);","                tileset.imageheight = parseInt(image[0].attributes.getNamedItem('height').value, 10);","            }","","            map.tilesets.push(tileset);","        }","","        return map;","    }","};","","module.exports = TilemapParser;","","function csvToXY(pt) {","    var points = pt.split(',');","    return {","        x: parseInt(points[0], 10),","        y: parseInt(points[1], 10)","    };","}",""],"l":{"2":2,"3":2,"5":2,"23":0,"24":0,"25":0,"26":0,"28":0,"29":0,"32":0,"33":0,"36":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"50":0,"57":0,"59":0,"60":0,"62":0,"73":0,"74":0,"75":0,"78":0,"80":0,"83":0,"84":0,"85":0,"87":0,"88":0,"90":0,"93":0,"94":0,"99":0,"110":0,"111":0,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"133":0,"134":0,"135":0,"138":0,"143":0,"145":0,"146":0,"148":0,"149":0,"150":0,"166":0,"167":0,"170":0,"173":0,"174":0,"177":0,"178":0,"180":0,"182":0,"183":0,"186":0,"188":0,"189":0,"190":0,"203":0,"204":0,"205":0,"206":0,"220":0,"222":0,"223":0,"226":0,"227":0,"228":0,"231":0,"232":0,"233":0,"236":0,"237":0,"238":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"250":0,"253":0,"255":0,"256":0,"257":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"279":0,"284":0,"286":0,"287":0,"288":0,"289":0,"304":0,"305":0,"306":0,"309":0,"310":0,"311":0,"315":0,"316":0,"317":0,"318":0,"320":0,"321":0,"322":0,"323":0,"325":0,"329":0,"334":0,"335":0,"336":0,"337":0,"339":0,"342":0,"343":0,"345":0,"346":0,"349":0,"351":0,"352":0,"355":0,"356":0,"361":0,"362":0,"363":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"387":0,"388":0,"391":0,"397":0,"398":0,"399":0,"400":0,"401":0,"409":0,"410":0,"411":0,"412":0,"416":0,"417":0,"418":0,"419":0,"420":0,"423":0,"426":0,"430":0,"432":1,"433":0,"434":0}},"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tileset.js":{"path":"/home/travis/build/npmtest/node-npmtest-phaser-tiled/node_modules/phaser-tiled/src/tiled/Tileset.js","s":{"1":2,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":2,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Tileset","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":38}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":47},"end":{"line":43,"column":63}}},"3":{"name":"(anonymous_3)","line":232,"loc":{"start":{"line":232,"column":38},"end":{"line":232,"column":56}}},"4":{"name":"(anonymous_4)","line":271,"loc":{"start":{"line":271,"column":38},"end":{"line":271,"column":56}}},"5":{"name":"(anonymous_5)","line":313,"loc":{"start":{"line":313,"column":35},"end":{"line":313,"column":53}}},"6":{"name":"(anonymous_6)","line":353,"loc":{"start":{"line":353,"column":29},"end":{"line":353,"column":47}}},"7":{"name":"(anonymous_7)","line":363,"loc":{"start":{"line":363,"column":28},"end":{"line":363,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":30,"column":0},"end":{"line":218,"column":1}},"3":{"start":{"line":31,"column":4},"end":{"line":31,"column":62}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":33,"column":4},"end":{"line":33,"column":12}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":12}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":26}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"10":{"start":{"line":40,"column":4},"end":{"line":61,"column":5}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":110}},"12":{"start":{"line":43,"column":65},"end":{"line":43,"column":106}},"13":{"start":{"line":45,"column":8},"end":{"line":60,"column":9}},"14":{"start":{"line":46,"column":12},"end":{"line":59,"column":13}},"15":{"start":{"line":47,"column":16},"end":{"line":47,"column":87}},"16":{"start":{"line":48,"column":16},"end":{"line":48,"column":56}},"17":{"start":{"line":50,"column":16},"end":{"line":56,"column":17}},"18":{"start":{"line":51,"column":20},"end":{"line":54,"column":22}},"19":{"start":{"line":55,"column":20},"end":{"line":55,"column":52}},"20":{"start":{"line":58,"column":16},"end":{"line":58,"column":54}},"21":{"start":{"line":64,"column":4},"end":{"line":69,"column":5}},"22":{"start":{"line":65,"column":8},"end":{"line":68,"column":10}},"23":{"start":{"line":71,"column":4},"end":{"line":71,"column":73}},"24":{"start":{"line":73,"column":4},"end":{"line":73,"column":21}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":42}},"26":{"start":{"line":85,"column":4},"end":{"line":85,"column":43}},"27":{"start":{"line":93,"column":4},"end":{"line":93,"column":30}},"28":{"start":{"line":101,"column":4},"end":{"line":101,"column":40}},"29":{"start":{"line":109,"column":4},"end":{"line":109,"column":42}},"30":{"start":{"line":117,"column":4},"end":{"line":117,"column":41}},"31":{"start":{"line":125,"column":4},"end":{"line":125,"column":39}},"32":{"start":{"line":133,"column":4},"end":{"line":136,"column":6}},"33":{"start":{"line":149,"column":4},"end":{"line":152,"column":6}},"34":{"start":{"line":160,"column":4},"end":{"line":160,"column":120}},"35":{"start":{"line":168,"column":4},"end":{"line":168,"column":70}},"36":{"start":{"line":176,"column":4},"end":{"line":176,"column":29}},"37":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"38":{"start":{"line":180,"column":8},"end":{"line":180,"column":88}},"39":{"start":{"line":189,"column":4},"end":{"line":192,"column":6}},"40":{"start":{"line":200,"column":4},"end":{"line":200,"column":56}},"41":{"start":{"line":208,"column":4},"end":{"line":208,"column":29}},"42":{"start":{"line":217,"column":4},"end":{"line":217,"column":43}},"43":{"start":{"line":220,"column":0},"end":{"line":220,"column":58}},"44":{"start":{"line":221,"column":0},"end":{"line":221,"column":40}},"45":{"start":{"line":223,"column":0},"end":{"line":223,"column":25}},"46":{"start":{"line":232,"column":0},"end":{"line":262,"column":2}},"47":{"start":{"line":233,"column":4},"end":{"line":235,"column":5}},"48":{"start":{"line":234,"column":8},"end":{"line":234,"column":20}},"49":{"start":{"line":237,"column":4},"end":{"line":237,"column":30}},"50":{"start":{"line":238,"column":4},"end":{"line":238,"column":47}},"51":{"start":{"line":239,"column":4},"end":{"line":239,"column":47}},"52":{"start":{"line":240,"column":4},"end":{"line":240,"column":53}},"53":{"start":{"line":242,"column":4},"end":{"line":242,"column":59}},"54":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"55":{"start":{"line":246,"column":8},"end":{"line":246,"column":20}},"56":{"start":{"line":249,"column":4},"end":{"line":255,"column":10}},"57":{"start":{"line":257,"column":4},"end":{"line":257,"column":30}},"58":{"start":{"line":258,"column":4},"end":{"line":258,"column":30}},"59":{"start":{"line":259,"column":4},"end":{"line":259,"column":32}},"60":{"start":{"line":261,"column":4},"end":{"line":261,"column":17}},"61":{"start":{"line":271,"column":0},"end":{"line":304,"column":2}},"62":{"start":{"line":272,"column":4},"end":{"line":274,"column":5}},"63":{"start":{"line":273,"column":8},"end":{"line":273,"column":20}},"64":{"start":{"line":276,"column":4},"end":{"line":276,"column":59}},"65":{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},"66":{"start":{"line":280,"column":8},"end":{"line":280,"column":20}},"67":{"start":{"line":284,"column":4},"end":{"line":286,"column":5}},"68":{"start":{"line":285,"column":8},"end":{"line":285,"column":43}},"69":{"start":{"line":288,"column":4},"end":{"line":301,"column":5}},"70":{"start":{"line":289,"column":8},"end":{"line":292,"column":10}},"71":{"start":{"line":294,"column":8},"end":{"line":300,"column":9}},"72":{"start":{"line":295,"column":12},"end":{"line":295,"column":111}},"73":{"start":{"line":297,"column":12},"end":{"line":299,"column":14}},"74":{"start":{"line":303,"column":4},"end":{"line":303,"column":16}},"75":{"start":{"line":313,"column":0},"end":{"line":344,"column":2}},"76":{"start":{"line":314,"column":4},"end":{"line":316,"column":5}},"77":{"start":{"line":315,"column":8},"end":{"line":315,"column":20}},"78":{"start":{"line":319,"column":4},"end":{"line":319,"column":59}},"79":{"start":{"line":322,"column":4},"end":{"line":324,"column":5}},"80":{"start":{"line":323,"column":8},"end":{"line":323,"column":20}},"81":{"start":{"line":327,"column":4},"end":{"line":329,"column":5}},"82":{"start":{"line":328,"column":8},"end":{"line":328,"column":37}},"83":{"start":{"line":333,"column":4},"end":{"line":333,"column":58}},"84":{"start":{"line":334,"column":4},"end":{"line":334,"column":45}},"85":{"start":{"line":337,"column":4},"end":{"line":337,"column":64}},"86":{"start":{"line":338,"column":4},"end":{"line":338,"column":65}},"87":{"start":{"line":340,"column":4},"end":{"line":343,"column":7}},"88":{"start":{"line":353,"column":0},"end":{"line":361,"column":2}},"89":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"90":{"start":{"line":355,"column":8},"end":{"line":355,"column":21}},"91":{"start":{"line":358,"column":4},"end":{"line":358,"column":33}},"92":{"start":{"line":360,"column":4},"end":{"line":360,"column":63}},"93":{"start":{"line":363,"column":0},"end":{"line":384,"column":2}},"94":{"start":{"line":364,"column":4},"end":{"line":364,"column":38}},"95":{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},"96":{"start":{"line":368,"column":8},"end":{"line":368,"column":48}},"97":{"start":{"line":372,"column":4},"end":{"line":375,"column":5}},"98":{"start":{"line":373,"column":8},"end":{"line":373,"column":47}},"99":{"start":{"line":374,"column":8},"end":{"line":374,"column":51}},"100":{"start":{"line":377,"column":4},"end":{"line":377,"column":27}},"101":{"start":{"line":378,"column":4},"end":{"line":378,"column":25}},"102":{"start":{"line":379,"column":4},"end":{"line":379,"column":27}},"103":{"start":{"line":380,"column":4},"end":{"line":380,"column":31}},"104":{"start":{"line":381,"column":4},"end":{"line":381,"column":21}},"105":{"start":{"line":382,"column":4},"end":{"line":382,"column":25}},"106":{"start":{"line":383,"column":4},"end":{"line":383,"column":31}},"107":{"start":{"line":392,"column":0},"end":{"line":396,"column":2}},"108":{"start":{"line":398,"column":0},"end":{"line":398,"column":13}},"109":{"start":{"line":399,"column":0},"end":{"line":401,"column":1}},"110":{"start":{"line":400,"column":4},"end":{"line":400,"column":29}},"111":{"start":{"line":403,"column":0},"end":{"line":403,"column":25}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":11}},{"start":{"line":40,"column":15},"end":{"line":40,"column":29}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":16},"end":{"line":50,"column":16}},{"start":{"line":50,"column":16},"end":{"line":50,"column":16}}]},"5":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"6":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":11}},{"start":{"line":64,"column":15},"end":{"line":64,"column":36}}]},"7":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":28},"end":{"line":71,"column":30}},{"start":{"line":71,"column":34},"end":{"line":71,"column":71}}]},"8":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":20},"end":{"line":85,"column":37}},{"start":{"line":85,"column":41},"end":{"line":85,"column":42}}]},"9":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":19},"end":{"line":117,"column":35}},{"start":{"line":117,"column":39},"end":{"line":117,"column":40}}]},"10":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":18},"end":{"line":125,"column":33}},{"start":{"line":125,"column":37},"end":{"line":125,"column":38}}]},"11":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":30},"end":{"line":134,"column":51}},{"start":{"line":134,"column":54},"end":{"line":134,"column":55}}]},"12":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":30},"end":{"line":135,"column":51}},{"start":{"line":135,"column":54},"end":{"line":135,"column":55}}]},"13":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":38},"end":{"line":149,"column":57}},{"start":{"line":149,"column":60},"end":{"line":152,"column":5}}]},"14":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":54},"end":{"line":160,"column":69}},{"start":{"line":160,"column":73},"end":{"line":160,"column":113}}]},"15":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":74},"end":{"line":160,"column":107}},{"start":{"line":160,"column":112},"end":{"line":160,"column":113}}]},"16":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":34},"end":{"line":189,"column":56}},{"start":{"line":189,"column":59},"end":{"line":192,"column":5}}]},"17":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":27}},{"start":{"line":190,"column":31},"end":{"line":190,"column":53}}]},"18":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":28}},{"start":{"line":191,"column":32},"end":{"line":191,"column":55}}]},"19":{"line":200,"type":"cond-expr","locations":[{"start":{"line":200,"column":38},"end":{"line":200,"column":50}},{"start":{"line":200,"column":53},"end":{"line":200,"column":55}}]},"20":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":22},"end":{"line":217,"column":36}},{"start":{"line":217,"column":40},"end":{"line":217,"column":42}}]},"21":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"22":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"23":{"line":249,"type":"cond-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":35}},{"start":{"line":253,"column":8},"end":{"line":255,"column":9}}]},"24":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":4},"end":{"line":272,"column":4}},{"start":{"line":272,"column":4},"end":{"line":272,"column":4}}]},"25":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"26":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"27":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"28":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":31}},{"start":{"line":288,"column":35},"end":{"line":288,"column":68}}]},"29":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"30":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]},"31":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":327,"column":4}},{"start":{"line":327,"column":4},"end":{"line":327,"column":4}}]},"32":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":8},"end":{"line":327,"column":23}},{"start":{"line":327,"column":27},"end":{"line":327,"column":48}}]},"33":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"34":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":12},"end":{"line":360,"column":35}},{"start":{"line":360,"column":39},"end":{"line":360,"column":61}}]}},"code":["var utils = require('../utils');","","/**"," * This object represents a tileset used by a Tilemap."," * There can be multiple Tilesets in a map"," *"," * @class Tileset"," * @extends Texture"," * @constructor"," * @param game {Phaser.Game} Phaser game this belongs to."," * @param key {string} The name of the tiledmap, this is usually the filename without the extension."," * @param settings {Object} All the settings for the tileset"," * @param settings.tilewidth {Number} The width of a single tile in the set"," * @param settings.tileheight {Number} The height of a single tile in the set"," * @param [settings.firstgid=1] {Number} The id of the first tile in the set, defaults to 1"," * @param [settings.spacing=0] {Number} The spacing around tiles in the tileset (in pixels)"," * @param [settings.margin=0] {Number} The margin around a tile in the tileset (in pixels)"," * @param [settings.tileoffset] {Object} The offset to apply to a tile rendered from this tileset"," * @param [settings.tileoffset.x=0] {Number} The X offset to apply to the tile"," * @param [settings.tileoffset.y=0] {Number} The Y offset to apply to the tile"," * @param [settings.properties] {Object} User-defined, custom properties that apply to the tileset"," * @param [settings.tileproperties] {Object} User-defined, custom properties that apply to tiles in the tileset."," *          The keys of this object should the tile id of the properties"," * @param [settings.tiles] {Object} Extra metadata about specific tiles"," * @param [settings.imagewidth] {Number} An override for the image width"," * @param [settings.imageheight] {Number} An override for the image height"," */","// TODO: Support external tilesets (TSX files) via the \"source\" attribute","// see: https://github.com/bjorn/tiled/wiki/TMX-Map-Format#tileset","function Tileset(game, key, settings) {","    var txkey = utils.cacheKey(key, 'tileset', settings.name);","    var tx = game.cache.getPixiBaseTexture(txkey);","    var ids;","    var ttxkey;","    var ttx;","    var tileTextures = {};","    var numTileTextures = 0;","","    // if no main texture, check if multi-image tileset","    if (!tx && settings.tiles) {","        // need to sort because order matters here, and can't guarantee that the object's keys will be ordered.","        // We need a custom comparator because .sort() is lexagraphic, not numeric.","        ids = Object.keys(settings.tiles).sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });","","        for (var i = 0; i < ids.length; ++i) {","            if (settings.tiles[ids[i]].image) {","                ttxkey = utils.cacheKey(key, 'tileset_image_' + ids[i], settings.name);","                ttx = game.cache.getPixiTexture(ttxkey);","","                if (!ttx) {","                    console.warn(","                        'Tileset \"' + settings.name + '\" unable to find texture cached by key \"' +","                        ttxkey + '\", using blank texture.'","                    );","                    ttx = PIXI.Texture.emptyTexture;","                }","","                tileTextures[numTileTextures++] = ttx;","            }","        }","    }","","    // if no main texture, and we didn't find any image tiles then warn about blank tileset","    if (!tx && numTileTextures === 0) {","        console.warn(","            'Tileset \"' + settings.name + '\" unable to find texture cached by key \"' +","            txkey +  '\", using blank texture.'","        );","    }","","    PIXI.Texture.call(this, tx || PIXI.Texture.emptyTexture.baseTexture);","","    this.game = game;","","    this.multiImage = numTileTextures > 0;","","    // Tiled Editor properties","","    /**","     * The first tileId in the tileset","     *","     * @property firstgid","     * @type Number","     */","    this.firstgid = settings.firstgid || 1;","","    /**","     * The name of the tileset","     *","     * @property name","     * @type String","     */","    this.name = settings.name;","","    /**","     * The width of a tile in the tileset","     *","     * @property tileWidth","     * @type Number","     */","    this.tileWidth = settings.tilewidth;","","    /**","     * The height of a tile in the tileset","     *","     * @property tileHeight","     * @type Number","     */","    this.tileHeight = settings.tileheight;","","    /**","     * The spacing around a tile in the tileset","     *","     * @property spacing","     * @type Number","     */","    this.spacing = settings.spacing || 0;","","    /**","     * The margin around a tile in the tileset","     *","     * @property margin","     * @type Number","     */","    this.margin = settings.margin || 0;","","    /**","     * The offset of tile positions when rendered","     *","     * @property tileoffset","     * @type Phaser.Point","     */","    this.tileoffset = new Phaser.Point(","        settings.tileoffset ? settings.tileoffset.x : 0,","        settings.tileoffset ? settings.tileoffset.y : 0","    );","","    // TODO: Support for \"terraintypes,\" \"image\"","    // see: https://github.com/bjorn/tiled/wiki/TMX-Map-Format#tileset","","    // Custom/Optional properties","","    /**","     * The number of tiles calculated based on size, margin, and spacing","     *","     * @property numTiles","     * @type Vector","     */","    this.numTiles = this.multiImage ? tileTextures.length : new Phaser.Point(","        Math.round((this.baseTexture.width - this.margin) / (this.tileWidth + this.spacing)),","        Math.round((this.baseTexture.height - this.margin) / (this.tileHeight + this.spacing))","    );","","    /**","     * The last tileId in the tileset","     *","     * @property lastgid","     * @type Number","     */","    this.lastgid = this.firstgid + (this.multiImage ? numTileTextures : ((this.numTiles.x * this.numTiles.y) || 1)) - 1;","","    /**","     * The properties of the tileset","     *","     * @property properties","     * @type Object","     */","    this.properties = utils.parseTiledProperties(settings.properties);","","    /**","     * The properties of the tiles in the tileset","     *","     * @property tileproperties","     * @type Object","     */","    this.tileproperties = {};","","    // massage tile tileproperties","    for (var k in settings.tileproperties) {","        this.tileproperties[k] = utils.parseTiledProperties(settings.tileproperties[k]);","    }","","    /**","     * The size of the tileset","     *","     * @property size","     * @type Vector","     */","    this.size = this.multiImage ? new Phaser.Point(0, 0) : new Phaser.Point(","        settings.imagewidth || this.baseTexture.width,","        settings.imageheight || this.baseTexture.height","    );","","    /**","     * The texture instances for each tile in the set","     *","     * @property textures","     * @type Array","     */","    this.textures = this.multiImage ? tileTextures : {};","","    /**","     * The animation data for tile animations in the set","     *","     * @property tileanimations","     * @type Object","     */","    this.tileanimations = {};","","    /**","     * Internal tiles config data.","     *","     * @property _tilesData","     * @type Object","     * @private","     */","    this._tilesData = settings.tiles || {};","}","","Tileset.prototype = Object.create(PIXI.Texture.prototype);","Tileset.prototype.constructor = Tileset;","","module.exports = Tileset;","","/**"," * Gets the tile properties for a tile based on it's ID"," *"," * @method getTileProperties"," * @param tileId {Number} The id of the tile to get the properties for"," * @return {Object} The properties of the tile"," */","Tileset.prototype.getTileProperties = function (tileId) {","    if (!tileId) {","        return null;","    }","","    var flags = Tileset.FLAGS;","    var flippedX = tileId & flags.FLIPPED_HORZ;","    var flippedY = tileId & flags.FLIPPED_VERT;","    var flippedAD = tileId & flags.FLIPPED_ANTI_DIAG;","","    tileId = (tileId & ~Tileset.FLAGS.ALL) - this.firstgid;","","    // if less than 0, then this id isn't in this tileset","    if (tileId < 0) {","        return null;","    }","","    var props = this.tileproperties[tileId] ?","        // get this value","        this.tileproperties[tileId] :","        // set this id to default values and cache","        this.tileproperties[tileId] = {","            collides: false","        };","","    props.flippedX = flippedX;","    props.flippedY = flippedY;","    props.flippedAD = flippedAD;","","    return props;","};","","/**"," * Gets the tile animations for a tile based on it's ID"," *"," * @method getTileProperties"," * @param tileId {Number} The id of the tile to get the animation frames for"," * @return {Phaser.FrameData} The frame data of the tile"," */","Tileset.prototype.getTileAnimations = function (tileId) {","    if (!tileId) {","        return null;","    }","","    tileId = (tileId & ~Tileset.FLAGS.ALL) - this.firstgid;","","    // if less than 0, then this id isn't in this tileset","    if (tileId < 0) {","        return null;","    }","","    // if we have already created the animation data","    if (this.tileanimations[tileId]) {","        return this.tileanimations[tileId];","    }","","    if (this._tilesData[tileId] && this._tilesData[tileId].animation) {","        this.tileanimations[tileId] = {","            rate: 1000 / this._tilesData[tileId].animation[0].duration,","            data: new Phaser.FrameData()","        };","","        for (var i = 0; i < this._tilesData[tileId].animation.length; ++i) {","            var frame = this.getTileTexture(this._tilesData[tileId].animation[i].tileid + this.firstgid).frame;","","            this.tileanimations[tileId].data.addFrame(","                new Phaser.Frame(i, frame.x, frame.y, frame.width, frame.height)","            );","        }","    }","","    return null;","};","","/**"," * Gets the tile texture for a tile based on it's ID"," *"," * @method getTileTexture"," * @param tileId {Number} The id of the tile to get the texture for"," * @return {Texture} The texture for the tile"," */","Tileset.prototype.getTileTexture = function (tileId) {","    if (!tileId) {","        return null;","    }","","    // get the internal ID of the tile in this set (0 indexed)","    tileId = (tileId & ~Tileset.FLAGS.ALL) - this.firstgid;","","    // if less than 0, then this id isn't in this tileset","    if (tileId < 0) {","        return null;","    }","","    // multi image set or we have cached the texture, just return it","    if (this.multiImage || this.textures[tileId]) {","        return this.textures[tileId];","    }","","    // generate this tile's texture then cache it.","    // convert the tileId to x,y coords of the tile in the Texture","    var y = Phaser.Math.floorTo(tileId / this.numTiles.x);","    var x = (tileId - (y * this.numTiles.x));","","    // get location in pixels","    x = (x * this.tileWidth) + (x * this.spacing) + this.margin;","    y = (y * this.tileHeight) + (y * this.spacing) + this.margin;","","    return (this.textures[tileId] = new PIXI.Texture(","        this.baseTexture,","        new Phaser.Rectangle(x, y, this.tileWidth, this.tileHeight)","    ));","};","","/**"," * Returns whether or not this tileset contains the given tile guid"," *"," * @method contains"," * @param tileId {Number} The ID of the tile to check"," * @return {Boolean}"," */","Tileset.prototype.contains = function (tileId) {","    if (!tileId) {","        return false;","    }","","    tileId &= ~Tileset.FLAGS.ALL;","","    return (tileId >= this.firstgid && tileId <= this.lastgid);","};","","Tileset.prototype.destroy = function () {","    utils.destroyTexture(this, false);","","    // destroy tile textures","    for (var id in this.textures) {","        utils.destroyTexture(this.textures[id]);","    }","","    // destroy tile animations","    for (var jd in this.tileanimations) {","        this.tileanimations[jd]._frames = null;","        this.tileanimations[jd]._frameNames = null;","    }","","    this.tileoffset = null;","    this.numTiles = null;","    this.properties = null;","    this.tileproperties = null;","    this.size = null;","    this.textures = null;","    this.tileanimations = null;","};","","/**"," * Tileset GID flags, these flags are set on a tile's ID to give it a special property"," *"," * @property FLAGS"," * @static"," */","Tileset.FLAGS = {","    FLIPPED_HORZ: 0x80000000,","    FLIPPED_VERT: 0x40000000,","    FLIPPED_ANTI_DIAG: 0x20000000","};","","var mask = 0;","for (var f in Tileset.FLAGS) {","    mask |= Tileset.FLAGS[f];","}","","Tileset.FLAGS.ALL = mask;",""],"l":{"1":2,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"43":0,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"55":0,"58":0,"64":0,"65":0,"71":0,"73":0,"75":0,"85":0,"93":0,"101":0,"109":0,"117":0,"125":0,"133":0,"149":0,"160":0,"168":0,"176":0,"179":0,"180":0,"189":0,"200":0,"208":0,"217":0,"220":2,"221":0,"223":0,"232":0,"233":0,"234":0,"237":0,"238":0,"239":0,"240":0,"242":0,"245":0,"246":0,"249":0,"257":0,"258":0,"259":0,"261":0,"271":0,"272":0,"273":0,"276":0,"279":0,"280":0,"284":0,"285":0,"288":0,"289":0,"294":0,"295":0,"297":0,"303":0,"313":0,"314":0,"315":0,"319":0,"322":0,"323":0,"327":0,"328":0,"333":0,"334":0,"337":0,"338":0,"340":0,"353":0,"354":0,"355":0,"358":0,"360":0,"363":0,"364":0,"367":0,"368":0,"372":0,"373":0,"374":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"392":0,"398":0,"399":0,"400":0,"403":0}}}